<?xml version="1.0" encoding="UTF-8"?>
<Snippets>
  <Category Name="My Snippets">
    <Snippet Name="About Snippets" Shortcut=""><![CDATA[<!--
ABOUT SNIPPETS

Snippets are a way to store bits of XAML that you find yourself using
often.  To add a snippet, select the text and drag it to the category
where you want it to be stored.  Once its stored, you can right click
to edit the snippet.  While editing, you can also give it a shortcut.

To use a snippet you can either drag it from the snippet list into the 
editor or press Alt+DownArrow from within the editor to access a list 
of all snippets with shortcuts assigned to them.
-->]]></Snippet>
  </Category>
  <Category Name="Getting Started with XAML">
    <Snippet Name="Hello World (TextBlock)" Shortcut=""><![CDATA[<!-- Insert this sample as the child of a Page, Grid, Canvas, Button, or other container -->  
<TextBlock FontFamily="Segoe, Segoe UI, Arial" FontWeight="Bold" FontSize="40pt" Foreground="Chartreuse">
  Hello World!
</TextBlock>
]]></Snippet>
    <Snippet Name="2D (Shapes and Brushes)" Shortcut=""><![CDATA[<Ellipse Width="300" Height="300" Stroke="#80FFFF00" StrokeThickness="15">
  <Ellipse.Fill>
    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
      <GradientStop Offset="0" Color="Gold" />
      <GradientStop Offset="1" Color="DarkOrange" />
    </LinearGradientBrush>
  </Ellipse.Fill>
</Ellipse>
]]></Snippet>
    <Snippet Name="2D (Vector Art)" Shortcut=""><![CDATA[   <Canvas Width="90">
      <Path
         Width="79.4"
         Height="127.7"
         Canvas.Left="20"
         Canvas.Top="118.6"
         Data="F1 M 539.7,249.4C 539.4,248.4 535.0,247.9 527.9,250.5C 520.8,253.1 520.1,260.7 519.2,263.9C 518.3,267.0 517.4,268.6 516.4,270.3C 515.6,271.6 511.1,277.3 508.3,280.7C 508.5,280.3 508.8,279.9 509.0,279.7C 509.9,278.8 510.8,276.6 511.4,275.6C 512.0,274.5 512.0,272.0 511.4,272.2C 510.9,272.5 510.3,273.5 510.4,273.0C 510.4,272.4 512.7,267.4 513.6,266.3C 514.6,265.3 516.9,259.4 517.0,257.7C 517.1,257.3 517.1,257.0 517.3,256.7C 519.0,256.1 520.4,255.5 520.7,255.0C 521.2,253.8 522.8,249.2 521.8,248.9C 520.8,248.5 520.5,249.2 519.8,248.9C 519.2,248.7 517.9,248.0 516.9,247.7C 516.0,247.4 514.5,247.1 514.3,246.4C 514.2,245.6 508.6,240.3 507.8,240.4C 507.0,240.4 505.9,243.0 505.4,244.0C 505.0,245.0 504.5,247.5 504.8,248.4C 505.0,249.2 504.6,250.2 504.1,250.2C 503.6,250.3 503.2,251.1 502.9,250.7C 502.5,250.3 501.2,247.9 501.8,247.0C 502.4,246.1 502.2,245.5 501.8,244.3C 501.4,243.1 500.3,241.6 502.3,240.4C 504.3,239.2 503.7,238.5 504.6,237.7C 505.4,236.8 505.9,237.5 508.2,237.3C 510.5,237.0 512.1,234.6 514.0,234.5C 515.9,234.3 518.2,233.9 518.2,233.9C 518.2,233.9 517.1,229.3 515.8,229.6C 514.4,229.9 513.9,230.3 514.2,229.3C 514.5,228.3 514.4,227.8 513.6,227.8C 512.8,227.8 509.8,228.0 509.2,228.5C 508.6,228.9 508.4,229.5 507.9,229.2C 507.3,228.8 505.7,227.6 504.2,227.3C 502.7,226.9 500.6,225.1 500.1,224.1C 499.5,223.2 498.3,220.7 497.6,220.6C 496.9,220.6 496.0,221.8 494.9,221.6C 493.8,221.4 489.8,220.5 489.5,220.6C 489.1,220.8 488.2,221.5 487.7,221.4C 487.2,221.2 485.7,220.3 485.8,219.8C 486.0,219.4 485.4,218.4 484.9,218.6C 484.5,218.9 482.3,219.1 482.0,220.1C 481.7,221.1 482.7,221.7 481.7,222.0C 480.8,222.4 480.8,223.5 481.3,224.2C 481.8,224.9 481.3,225.5 480.8,225.7C 480.3,225.9 479.0,228.7 479.8,230.1C 480.5,231.6 482.2,232.6 482.9,233.9C 483.6,235.1 483.2,236.6 483.5,239.3C 483.9,241.9 485.6,244.4 485.7,244.9C 485.7,245.4 486.1,249.3 486.2,250.0C 486.3,250.6 486.3,251.5 485.8,250.9C 485.4,250.3 481.2,246.6 476.5,245.9C 471.9,245.2 471.3,247.7 470.1,247.7C 468.9,247.7 468.0,246.9 468.3,247.6C 468.7,248.3 474.7,251.9 475.5,253.1C 476.3,254.3 481.8,260.1 482.2,260.8C 482.6,261.5 484.4,265.0 485.1,265.8C 485.7,266.7 489.8,269.5 490.0,270.2C 490.1,271.0 491.4,277.3 490.9,279.6C 490.4,281.8 487.4,285.8 487.1,286.2C 486.7,286.5 485.9,287.9 485.9,287.7C 485.8,287.5 486.0,284.0 486.3,282.7C 486.5,281.4 486.9,277.9 486.3,275.9C 485.6,274.0 481.6,269.7 481.4,268.8C 481.2,267.9 480.0,267.9 479.9,268.1C 479.8,268.2 478.6,269.8 478.4,270.7C 478.2,271.6 476.7,278.3 476.6,279.1C 476.5,279.8 474.2,282.6 474.9,284.3C 475.6,285.9 479.0,290.5 480.2,291.7C 481.5,293.0 482.1,294.8 482.2,295.8C 482.3,296.9 483.3,301.1 483.4,301.8C 483.1,301.6 482.7,301.4 482.4,301.1C 481.5,300.5 480.3,298.3 479.6,298.4C 478.9,298.5 479.1,299.9 479.7,300.0C 480.2,300.1 481.4,300.8 481.4,301.0C 481.4,301.2 475.3,300.6 471.8,301.1C 468.2,301.7 465.7,302.6 465.7,303.3C 465.6,304.1 466.1,306.4 464.7,307.4C 463.3,308.4 460.7,309.9 461.1,310.9C 461.6,311.8 462.5,313.4 465.1,312.8C 467.7,312.1 472.2,309.8 472.5,308.1C 472.9,306.5 474.6,305.4 476.4,304.0C 478.1,302.6 481.3,301.8 482.0,301.9C 482.4,302.0 483.1,302.3 483.6,302.5C 484.3,304.1 486.2,307.5 486.6,307.7C 486.7,307.7 486.8,307.7 486.9,307.7C 486.9,307.8 486.9,307.9 486.9,308.0C 486.6,309.9 486.2,317.1 485.7,318.9C 485.2,320.8 484.5,333.4 483.6,337.1C 482.8,340.9 482.2,342.7 482.3,343.9C 482.3,345.2 482.5,346.7 483.7,346.3C 484.0,346.2 484.3,346.0 484.5,345.7C 484.7,345.7 485.0,345.7 485.2,345.7C 486.0,345.7 489.0,341.3 488.8,339.2C 488.7,337.2 490.8,336.7 491.4,335.9C 492.1,335.1 493.0,335.6 493.3,335.1C 493.6,334.6 495.8,333.4 497.1,332.7C 498.3,332.0 499.6,330.6 500.2,330.0C 500.7,329.4 505.3,331.9 505.3,331.9C 505.3,331.9 506.1,331.3 506.3,331.0C 506.4,330.8 505.6,329.6 504.9,329.2C 504.1,328.9 500.4,327.6 499.2,326.4C 498.0,325.2 500.7,320.3 501.7,318.4C 502.6,316.4 501.5,316.7 501.7,316.3C 501.8,315.8 501.0,314.7 500.3,315.1C 499.7,315.5 499.3,316.6 498.5,317.3C 497.8,318.0 495.5,318.9 495.5,318.9C 495.5,318.9 497.3,311.8 498.8,308.7C 500.3,305.7 504.3,293.1 504.4,292.3C 504.5,291.6 506.3,286.4 507.2,285.4C 508.2,284.4 510.3,281.3 511.6,280.0C 512.9,278.6 517.9,272.5 520.0,271.3C 522.1,270.0 527.9,268.6 530.2,268.2C 532.4,267.7 538.1,264.0 539.8,259.2C 541.4,254.4 540.0,250.4 539.7,249.4 Z M 507.6,260.6C 508.0,263.5 509.0,269.8 508.9,271.0C 508.8,272.2 507.5,279.1 506.8,282.4C 506.7,282.5 506.6,282.6 506.5,282.7C 506.3,283.0 506.1,283.3 505.9,283.6C 505.3,281.4 504.2,276.3 503.9,271.2C 503.7,267.1 504.4,264.7 504.5,263.1C 505.5,262.2 506.5,261.4 507.6,260.6 Z M 484.6,302.2C 484.2,301.0 483.8,295.6 483.7,294.8C 483.7,293.9 484.4,292.0 485.0,290.7C 485.7,289.4 485.3,290.9 485.3,292.0C 485.2,293.0 485.0,295.8 484.8,296.4C 484.6,297.0 484.9,297.2 485.4,298.1C 486.0,299.1 487.0,303.6 487.1,304.1C 487.1,304.3 487.2,304.8 487.5,305.2C 487.3,305.7 487.2,306.2 487.1,306.8C 486.5,306.0 485.0,303.4 484.6,302.2 Z M 491.2,334.2C 490.8,334.5 490.3,334.9 489.8,335.3C 490.1,334.1 490.7,332.6 491.1,332.1C 491.4,331.8 491.9,331.4 492.5,330.9C 492.4,332.2 492.3,333.5 491.2,334.2 Z M 500.6,300.8C 499.5,305.4 496,313.5 495.2,315.1C 494.4,316.6 494.2,319.5 494.2,319.5C 494.2,319.5 494.2,319.6 494.2,319.9C 493.6,320.1 493.0,320.5 492.6,321.2C 492.1,322.4 489.6,330.5 489.1,331.9C 488.7,333.0 488.0,335.8 487.6,337.7C 487.4,338.1 487.1,338.6 486.9,339.1C 486.6,340.2 485.9,341.1 485.3,341.9C 485.4,340.2 485.7,337.2 486.0,336.2C 486.5,334.7 488.8,314.3 489.8,312.1C 490.9,309.9 490.9,309.7 490.7,307.9C 490.6,306.7 490.1,304.5 489.8,302.9C 489.9,302.6 490.0,302.3 490.1,301.9C 490.6,299.8 492.4,296.7 492.7,296.2C 493.0,295.8 495.3,292.2 495.5,292.0C 495.8,291.8 497.0,290.6 496.3,289.7C 495.7,288.7 495.5,288.4 495.1,288.8C 494.6,289.2 493.4,289.7 492.8,290.8C 492.3,291.9 491.6,294.5 491.5,295.5C 491.3,296.4 490.9,298.5 490.5,298.6C 490.1,298.7 490.0,294.4 490.2,293.5C 490.3,292.5 492.4,290.5 492.9,290.0C 493.3,289.4 493.5,288.3 493.5,287.2C 493.6,286.1 491.5,283.5 491.8,282.4C 492.1,281.2 493.7,275.2 494.3,273.9C 494.8,272.8 496.6,269.7 498.4,267.8C 498.8,268.1 499.2,268.6 499.6,269.2C 500.2,270.1 500.8,271.2 501.4,272.3C 501.7,273.1 502.1,274.0 502.3,275.0C 503.8,280.4 504.6,284.4 505.0,285.6C 504.3,287.7 503.9,290.0 503.7,290.2C 503.7,290.2 501.7,296.3 500.6,300.8 Z "
         Fill="#FF8DBC46"
         Stretch="Fill"/>
      <Path
         Width="87.1"
         Height="251.7"
         Canvas.Left="0"
         Canvas.Top="3.1"
         Data="F1 M 510.6,119.4C 508.7,119.1 507.5,119.0 507.1,118.0C 506.6,117.0 505.7,116.8 503.4,115.6C 501.0,114.3 500.1,113.2 500.2,114.6C 500.4,115.9 501.0,117.5 499.8,118.2C 498.6,118.8 497.3,120.2 497.2,121.3C 497.2,122.4 496.5,128.9 495.4,129.4C 494.3,129.9 494.2,124.3 494.7,122.5C 495.1,120.7 498.0,114.6 498.9,112.8C 499.7,111.0 503.9,107.4 503.0,106.5C 502.0,105.5 500.2,106.1 498.9,106.1C 497.6,106.0 495.9,105.3 494.0,107.1C 492.2,109.0 486.1,113.9 485.6,115.6C 485.5,116.3 485.0,117.4 484.4,118.6C 483.6,117.5 482.8,116.3 482.8,115.6C 482.8,114.1 480.1,107.6 479.6,106.0C 479.1,104.3 479.1,106.9 479.6,108.0C 480.1,109.1 481.5,113.3 481.5,113.3C 481.5,113.3 478.7,109.5 477.4,107.3C 476.2,105.1 470.9,103.0 470.5,103.1C 470.1,103.2 472.0,106.1 472.8,106.9C 473.6,107.8 478.6,112.2 478.8,112.9C 478.9,113.7 473.6,109.4 473.3,109.9C 473.0,110.4 476.6,112.0 479.4,114.0C 482.1,116.0 482.2,117.1 482.9,119.5C 483.0,119.9 483.2,120.4 483.4,120.9C 482.8,122.1 482.3,123.2 482.1,123.8C 481.7,125.1 481.4,127.1 482.0,127.8C 482.2,127.9 482.2,128.0 482.1,128.2C 480.7,127.8 480.1,128.2 480.3,127.1C 480.4,125.8 479.0,124.8 478.6,125.4C 478.2,125.9 477.7,127.0 478.6,127.9C 478.9,128.2 479.0,128.5 478.8,128.9C 478.7,128.8 478.6,128.8 478.5,128.7C 477.2,127.6 475.4,127.1 473.4,126.7C 471.5,126.3 466.9,125.7 465.7,124.7C 465.6,124.5 465.3,124.4 464.9,124.3C 464.8,120.4 464.9,115.3 465.1,114.4C 465.4,113.1 464.9,113.3 463.2,115.1C 461.6,116.8 462.1,122.3 462.1,123.9C 462.0,123.9 461.9,123.9 461.8,123.9C 461.6,123.8 461.3,123.7 461.1,123.9C 460.8,123.9 460.5,123.9 460.2,123.9C 459.7,123.2 459.1,121.9 458.6,121.6C 457.9,121.3 459.1,122.8 459.5,123.9C 459.0,123.9 458.5,123.9 458.1,123.9C 457.7,123.6 457.3,123.4 456.9,123.4C 455.5,123.3 452.3,120.8 451.7,120.3C 451.1,119.8 449.8,120.8 449.0,121.7C 448.3,122.6 448.6,122.4 450.9,122.8C 453.3,123.1 454.8,122.9 456.1,123.6C 456.2,123.7 456.3,123.7 456.4,123.8C 455.2,123.8 453.8,124.0 452.5,124.3C 450.8,124.7 449.6,127.1 448.0,126.8C 446.3,126.5 445.8,125.4 445.1,126.2C 445.1,126.2 445.9,128.5 445.7,129.5C 445.4,130.4 447.4,134.7 448.6,135.0C 449.4,135.2 453.8,135.4 457.6,135.5C 456.5,136.7 454.7,137.4 454.0,137.2C 453.2,137.0 449.9,137.7 449.1,138.3C 448.3,139.0 444.3,138.8 443.6,140.6C 442.9,142.3 445.5,143.4 445.7,146.6C 446.0,149.8 459.3,160.9 462.6,162.2C 466.0,163.5 478.9,161.0 484.5,161.4C 490.1,161.7 496.0,164.5 497.2,165.2C 497.3,165.2 497.4,165.3 497.4,165.3C 499.8,170.3 505.7,183.3 506.3,185.9C 507.0,189.1 512.7,198.8 512.0,199.4C 511.3,200.0 509.4,196.8 509.5,197.8C 509.7,198.9 512.3,200.3 512.8,201.0C 513.2,201.5 514.3,205.1 514.8,206.7C 513.9,207.5 512.2,209.1 511.6,210.4C 510.7,212.2 510.6,216.5 510.7,216.9C 510.9,217.3 510.8,217.8 509.6,218.2C 508.4,218.5 508.3,219.5 509.1,220.7C 509.9,221.8 511.4,222.1 513.5,223.2C 515.7,224.3 515.5,225.6 515.5,225.6C 515.5,225.6 513.4,225.0 511.9,224.9C 510.5,224.8 507.8,226.5 506.4,226.5C 505.0,226.5 499.6,230.6 500.1,232.1C 500.6,233.6 504.7,233.5 506.2,234.1C 507.7,234.8 509.9,232.3 511.6,230.8C 513.4,229.3 514.0,227.4 515.5,226.7C 516.9,226.0 517.7,227.5 518.4,228.5C 519.1,229.5 523.2,233.2 524.1,234.7C 523.5,239.0 522.1,246.3 521.7,246.9C 521.1,247.8 519.2,247.7 519.6,249C 520.0,250.2 520.3,250.3 518.9,252.1C 517.5,253.9 513.0,260.5 512.1,260.8C 511.2,261.0 510.3,262.0 511.0,264.0C 511.8,266.0 512.0,267.3 512.2,266.4C 512.3,265.5 512.4,263.8 512.5,264.3C 512.7,264.8 513.8,270.7 514.1,271.7C 514.4,272.7 515.2,279.5 516.3,281.5C 517.3,283.5 520.0,290.1 519.5,291.9C 518.9,293.7 517.9,294.2 517.8,295.1C 517.7,295.3 517.7,295.6 517.7,296.0C 516.7,295.0 515.3,293.6 515.2,293.9C 514.9,294.4 512.8,294.9 514.5,296.2C 516.1,297.5 518.0,297.7 516.4,299.6C 514.7,301.5 509.0,314.0 506.7,315.8C 504.4,317.6 490.3,332.4 489.3,333.4C 488.3,334.4 481.7,348.1 481.0,349.6C 480.3,351.0 482.2,356.0 482.3,354.6C 482.4,353.1 482.6,349.8 485.3,347.3C 487.9,344.9 495.3,332.8 497.5,331.8C 499.8,330.9 509.3,317.4 511.0,315.3C 512.8,313.2 516.9,303.6 517.6,301.4C 517.9,300.7 518.3,300.0 518.7,299.5C 519.6,300.0 521.1,300.4 522.3,298.9C 523.4,297.7 523.6,297.0 523.7,296.7L 523.6,297.8C 523.6,297.8 524.5,296.0 523.7,294.2C 522.9,292.4 522.8,292.3 522.9,290.3C 523.0,288.4 519.5,279.7 519.0,278.2C 518.6,276.7 513.0,266.0 514.9,263.2C 516.7,260.4 515.6,260.1 518.5,257.0C 521.3,253.9 521.3,252.1 523.0,251.2C 524.7,250.3 525.9,250.1 525.2,247.9C 524.6,245.8 525.5,233.7 526.1,232.5C 526.8,231.3 526.2,227.4 527.0,225.2C 527.2,224.6 527.4,223.8 527.5,222.9C 527.7,222.8 527.9,222.7 528.2,222.7C 529.6,222.2 529.4,224.9 529.4,225.3C 529.4,225.3 530.1,225.4 530.5,224.4C 530.9,223.5 529.8,222.0 528.9,221.0C 528.7,220.8 528.3,220.7 527.8,220.6C 528.0,219.0 528.2,217.4 528.5,216.4C 529.1,214.3 527.8,207.4 526.1,205.0C 524.4,202.6 520.4,200.7 519.4,201.0C 518.4,201.3 518.0,203.5 518.1,204.5C 518.1,205.4 520.5,214.7 521.8,215.7C 523.1,216.7 523.9,218.5 523.9,220.1C 523.9,220.4 523.9,220.7 523.9,221.1C 523.4,221.2 523.0,221.3 522.7,221.3C 522.6,221.3 522.5,221.3 522.4,221.3C 520.8,217.4 518.7,212.0 518.6,210.8C 518.4,208.7 515.5,199.7 515.1,198.6C 514.8,197.5 513.6,196.9 513.5,195.7C 513.4,194.5 511.6,193.2 510.9,191.4C 510.2,189.5 506.7,184.1 506.4,182.0C 506.0,180.1 501.6,167.7 500.2,164.6C 500.8,161.2 501.1,153.2 501.8,152.5C 502.5,151.7 509.6,148.3 510.1,144.8C 510.6,141.4 513.0,137.2 514.2,135.3C 515.5,133.4 515.4,132.2 514.8,130.5C 514.3,128.7 512.5,119.6 510.6,119.4 Z M 524.4,231.8C 524.4,232.0 524.4,232.3 524.3,232.6C 523.6,231.7 522.4,230.4 521.8,229.9C 520.8,228.9 519.8,226.9 519.7,226.2C 519.6,225.6 521.6,228.8 521.6,227.8C 521.6,226.9 518.9,223.8 519.4,223.0C 519.6,222.6 520.3,222.5 521.0,222.5C 522.8,227.1 524.3,231.2 524.4,231.8 Z M 523.8,223.0C 523.9,223.1 523.9,223.1 524.0,223.1C 524.2,224.8 524.3,226.3 524.2,225.7C 524.1,225.4 523.6,224.3 523.0,222.8C 523.3,222.9 523.5,223.0 523.8,223.0 Z M 520.5,221.1C 519.9,220.9 519.3,220.7 518.9,220.4C 518.0,219.9 516.3,216.1 516.2,214.4C 516.1,213.4 515.9,211.0 515.7,209.1C 516.7,211.5 518.6,216.5 520.5,221.1 Z M 483.7,143.0C 485.4,143.8 486.6,144.4 487.0,144.8C 487.3,145.0 487.6,145.2 487.9,145.4C 488.4,145.9 488.8,146.4 489.0,146.7C 490.1,148.4 494.9,158.6 495.7,160.2C 495.9,160.7 496.2,161.2 496.5,161.8C 495.2,160.3 493.6,158.6 493,157.7C 491.7,156.0 485.5,148.2 484.8,147.3C 484.3,146.6 483.7,144.8 483.7,143.0 Z M 497.7,160.7C 497.4,160.2 497.1,159.7 496.8,159.1C 495.7,157.5 493.2,150.7 491.8,146.4C 493.2,146.9 494.5,147.7 495.3,149.7C 496.4,152.7 497.2,157.5 497.7,160.7 Z M 482.5,142.5C 482.3,143.8 481.3,144.8 480.7,143.9C 480.1,143.0 476.5,140.6 474.2,139.1C 477.2,140.2 480.2,141.4 482.5,142.5 Z M 459.7,136.6C 459.4,136.2 459.2,135.8 459.0,135.5C 460.4,135.6 461.6,135.6 462.4,135.6C 461.2,136.8 460.5,137.4 459.7,136.6 Z M 477.4,143.5C 476.2,142.3 474.1,140.2 471.0,138.0C 471.5,138.1 471.9,138.3 472.3,138.4C 472.5,138.7 472.8,138.9 473.0,138.9C 474.0,139.5 478.6,142.9 480.6,144.7C 479.5,144.4 478.2,144.2 477.4,143.5 Z M 488.6,155.6C 487.3,154.1 485.7,151.1 484.5,148.7C 486.5,151.0 488.7,153.5 489.5,154.2C 490.4,155.0 493.9,159.4 496.2,162.1C 493.6,160.0 490.0,157.1 488.6,155.6 Z "
         Fill="#FF567F18"
         Stretch="Fill"/>
   </Canvas>]]></Snippet>
    <Snippet Name="Layout (StackPanel)" Shortcut=""><![CDATA[<StackPanel>
  <Ellipse Width="50" Height="50" Fill="YellowGreen" />
  <Ellipse Width="50" Height="50" Fill="YellowGreen" />
  <Ellipse Width="50" Height="50" Fill="YellowGreen" />
  <Ellipse Width="50" Height="50" Fill="YellowGreen" />
</StackPanel>
]]></Snippet>
    <Snippet Name="Layout (Grid)" Shortcut=""><![CDATA[<!-- the ShowGridLines property is debug only so you can see the gridlines -->
<Grid Width="400" Height="400" ShowGridLines="True">

  <Grid.ColumnDefinitions>
    <ColumnDefinition Width="100" />
    <ColumnDefinition Width="*" />
  </Grid.ColumnDefinitions>
  <Grid.RowDefinitions>
    <RowDefinition Height="50" />
    <RowDefinition Height="*" />
    <RowDefinition Height="50" />
  </Grid.RowDefinitions>
  
  <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Fill="YellowGreen" />
  <Rectangle Grid.Row="1" Grid.Column="0" Fill="Gray" />
  <Rectangle Grid.Row="1" Grid.Column="1" Fill="Silver" />
  <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="Orange" />

</Grid>]]></Snippet>
    <Snippet Name="Layout (Canvas)" Shortcut=""><![CDATA[<Canvas>
  <Ellipse Canvas.Left="200" Canvas.Top="100" Width="300" Height="300" Fill="YellowGreen" />
  <Ellipse Canvas.Left="230" Canvas.Top="130" Width="200" Height="200" Fill="Gold" />
  <Ellipse Canvas.Left="250" Canvas.Top="150" Width="100" Height="100" Fill="Orange" />
</Canvas>]]></Snippet>
    <Snippet Name="Controls (Preview)" Shortcut=""><![CDATA[<Canvas Grid.Row="1">

<Menu Canvas.Top="40" Canvas.Left="18" Width="600">
  <MenuItem Header="Top One">
    <MenuItem Header="Sub One" InputGestureText="Ctrl+L" />
    <MenuItem Header="Sub Two (With an Icon)" InputGestureText="Ctrl+A">
      <MenuItem.Icon>
        <Ellipse Width="16" Height="16" Fill="LightBlue" />
      </MenuItem.Icon>
    </MenuItem>
    <MenuItem Header="Sub Three" />
    <Separator />
    <MenuItem Header="Sub Four">
      <MenuItem Header="Sub One" />
      <MenuItem Header="Sub Two" />
      <MenuItem Header="Sub Three" />
    </MenuItem>
    <MenuItem Header="Sub Five" />
  </MenuItem>
  <MenuItem Header="Top Two">
    <MenuItem Header="Sub One" />
    <MenuItem Header="Sub Tow (Checkable)" IsCheckable="True" />
    <MenuItem Header="Sub Three" />
    <Separator />
    <MenuItem Header="Sub Four">
      <MenuItem Header="Sub One" />
      <MenuItem Header="Sub Two" />
      <MenuItem Header="Sub Three" />
    </MenuItem>
    <MenuItem Header="Sub Five" />
  </MenuItem>
  <MenuItem Header="Top Three" >
    <MenuItem Header="Sub One" />
    <MenuItem Header="Sub Two" />
    <MenuItem Header="Sub Three" />
    <Separator />
    <MenuItem Header="Sub Five" />
  </MenuItem>
</Menu>


<StackPanel Canvas.Top="95" Canvas.Left="10" >
  <Button Margin="8" IsDefault="True">Default</Button>
  <Button Margin="8">Normal</Button>
</StackPanel>

<StackPanel Canvas.Top="95" Canvas.Left="120">
  <CheckBox Margin="8">Normal</CheckBox>
  <CheckBox Margin="8" IsChecked="true">Checked</CheckBox>
  <CheckBox Margin="8" IsThreeState="true" IsChecked="{x:Null}">Indeterminate</CheckBox>
</StackPanel>

<StackPanel Canvas.Top="95" Canvas.Left="230">
  <RadioButton Margin="8">Normal</RadioButton>
  <RadioButton Margin="8" IsChecked="true">Checked</RadioButton>
  <RadioButton Margin="8">Normal</RadioButton>
</StackPanel>

<StackPanel Canvas.Top="95" Canvas.Left="330">
  <TextBox Width="120" Margin="8" Text="Edit Me" />
  <PasswordBox Width="120" Margin="8" Password="Password" />
</StackPanel>


<StackPanel Canvas.Top="95" Canvas.Left="490" >
  <ComboBox Margin="8" Width="120">
    <ComboBoxItem Content="First Normal Item" />
    <ComboBoxItem Content="Second Normal Item" />
    <ComboBoxItem Content="Third Normal Item" />
    <ComboBoxItem Content="Fourth Normal Item" />
    <ComboBoxItem Content="Fifth Normal Item" />
  </ComboBox>
  <ComboBox Margin="8" Width="120" IsEditable="True" Text="Edit Me">
    <ComboBoxItem Content="First Normal Item" />
    <ComboBoxItem Content="Second Normal Item" />
    <ComboBoxItem Content="Third Normal Item" />
    <ComboBoxItem Content="Fourth Normal Item" />
    <ComboBoxItem Content="Fifth Normal Item" />
  </ComboBox>
</StackPanel>



<ListBox Canvas.Top="230" Canvas.Left="18" SelectionMode="Extended" Width="140"  Height="150">
  <ListBoxItem Content="First Normal Item" />
  <ListBoxItem Content="Second Normal Item" />
  <ListBoxItem Content="Third Normal Item" />
  <ListBoxItem Content="Fourth Normal Item" />
  <ListBoxItem Content="Fifth Normal Item" />
  <ListBoxItem Content="Sixth Normal Item" />
  <ListBoxItem Content="Seventh Normal Item" />
  <ListBoxItem Content="Eightth Normal Item" />
</ListBox>


<TreeView Canvas.Top="230" Canvas.Left="198" Width="150" Height="150">
  <TreeViewItem Header="Top One">
    <TreeViewItem Header="Sub One" />
    <TreeViewItem Header="Sub Two (Longer than Normal)" />
    <TreeViewItem Header="Sub Three" />
    <TreeViewItem Header="Sub Four">
      <TreeViewItem Header="Sub One" />
      <TreeViewItem Header="Sub Two" />
      <TreeViewItem Header="Sub Three" />
    </TreeViewItem>
    <TreeViewItem Header="Sub Five" />
  </TreeViewItem>
  <TreeViewItem Header="Top Two">
    <TreeViewItem Header="Sub One" />
    <TreeViewItem Header="Checkable" />
    <TreeViewItem Header="Sub Three" />
    <TreeViewItem Header="Sub Four">
      <TreeViewItem Header="Sub One" />
      <TreeViewItem Header="Sub Two" />
      <TreeViewItem Header="Sub Three" />
    </TreeViewItem>
    <TreeViewItem Header="Sub Five" />
  </TreeViewItem>
  <TreeViewItem Header="Top Three" >
    <TreeViewItem Header="Sub One" />
    <TreeViewItem Header="Sub Two" />
    <TreeViewItem Header="Sub Three" />
    <TreeViewItem Header="Sub Five" />
  </TreeViewItem>
</TreeView>

<TabControl Canvas.Top="230" Canvas.Left="392" Height="150" Width="225">
  <TabItem Header="One" />
  <TabItem Header="Two" />
  <TabItem Header="Three" />
  <TabItem Header="Four" />
</TabControl>


<GroupBox Canvas.Top="430" Canvas.Left="18"  Header="GroupBox Header" Width="140" >
  <Border Height="50" />
</GroupBox>

<Expander  Canvas.Top="524" Canvas.Left="18" Width="140" Header="Expander Header">
  <Border Height="100" />
</Expander>

<ProgressBar Canvas.Top="430" Canvas.Left="198" Width="200" HorizontalAlignment="Center" Value="20" />

<Border Canvas.Top="465" Canvas.Left="220" Padding="17,0,17,0" Background="#EEE" Width="150" Height="50"  CornerRadius="2">
  <Border.ToolTip>
    This is a test tooltip!  Woohoo!
  </Border.ToolTip>
  <Border.ContextMenu>
    <ContextMenu>
      <MenuItem Header="Sub One" InputGestureText="Ctrl+L" />
      <MenuItem Header="Sub Two (With an Icon)" InputGestureText="Ctrl+A">
        <MenuItem.Icon>
          <Ellipse Width="16" Height="16" Fill="LightBlue" />
        </MenuItem.Icon>
      </MenuItem>
      <MenuItem Header="Sub Three" />
      <Separator />
      <MenuItem Header="Sub Four">
        <MenuItem Header="Sub One" />
        <MenuItem Header="Sub Two" />
        <MenuItem Header="Sub Three" />
      </MenuItem>
      <MenuItem Header="Sub Five" />
    </ContextMenu>
  </Border.ContextMenu>
  <TextBlock TextWrapping="Wrap" TextAlignment="Center" Foreground="#AAA" VerticalAlignment="Center" HorizontalAlignment="Center">(Hover Over Me or Right Click Me)</TextBlock>
</Border>

<StackPanel Orientation="Horizontal" Canvas.Top="422" Canvas.Left="430">
  <StackPanel>
    <Slider Margin="8" Orientation="Horizontal" />
    <Slider Margin="8" Orientation="Horizontal" TickPlacement="TopLeft" />
  </StackPanel>
  <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
    <Slider Margin="8" Orientation="Vertical" />
    <Slider Margin="8" Orientation="Vertical" TickPlacement="TopLeft" />
  </StackPanel>
</StackPanel>



</Canvas>
]]></Snippet>
    <Snippet Name="Controls (Inline Button Template)" Shortcut=""><![CDATA[  <Button Width="100" Height="30" Content="Hello World!">
    <Button.Template>
      <ControlTemplate TargetType="{x:Type Button}">
        <Border x:Name="Border" Background="YellowGreen" CornerRadius="4">
          <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Border" Property="Background" Value="Gold" />
          </Trigger>
          <Trigger Property="IsPressed" Value="True">
            <Setter TargetName="Border" Property="Background" Value="Orange" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Button.Template>
  </Button>
]]></Snippet>
    <Snippet Name="Controls (Button Template Resource)" Shortcut=""><![CDATA[ <Grid>
  <Grid.Resources>
    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
      <Border x:Name="Border" Background="YellowGreen" CornerRadius="4">
        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
      </Border>
      <ControlTemplate.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter TargetName="Border" Property="Background" Value="Gold" />
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter TargetName="Border" Property="Background" Value="Orange" />
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
  </Grid.Resources>
  <Button Width="100" Height="30" Content="Hello World!" Template="{StaticResource ButtonTemplate}" />
 </Grid>
]]></Snippet>
    <Snippet Name="Controls (Button Style with Template)" Shortcut=""><![CDATA[ <Grid>
  <Grid.Resources>
    <Style TargetType="{x:Type Button}">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="Border" Background="YellowGreen" CornerRadius="4">
              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="Gold" />
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="Orange" />
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Grid.Resources>
    <StackPanel>
      <Button Width="100" Height="30" Margin="5" Content="Hello World!" />
      <Button Width="100" Height="30" Margin="5" Content="Hello World!" />
    </StackPanel>
 </Grid>
]]></Snippet>
    <Snippet Name="Databinding (Text)" Shortcut=""><![CDATA[<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="400">
  <TextBlock Text="{Binding ElementName=MyTextBox, Path=Text}" FontSize="45"/>
  <TextBox x:Name="MyTextBox">Type here...</TextBox>
</StackPanel>
]]></Snippet>
    <Snippet Name="Databinding (Slider)" Shortcut=""><![CDATA[<Grid Width="300" Height="300" Background="OrangeRed">

<Slider 
  x:Name="MySlider" 
  VerticalAlignment="Top" 
  Minimum="10" 
  Maximum="200" 
  Value="50" 
  Margin="10" />

<Rectangle 
  Width="{Binding ElementName=MySlider, Path=Value}" 
  Height="{Binding ElementName=MySlider, Path=Value}" 
  Fill="Orange"
  VerticalAlignment="Center"
  HorizontalAlignment="Center" />

</Grid>]]></Snippet>
    <Snippet Name="Databinding (Data Templates)" Shortcut=""><![CDATA[ <Grid>
    <Grid.Resources>
       <XmlDataProvider x:Key="flickrdata" Source="http://api.flickr.com/services/feeds/photos_public.gne?tags=flower&amp;lang=en-us&amp;format=rss_200">
          <XmlDataProvider.XmlNamespaceManager>
             <XmlNamespaceMappingCollection>
                <XmlNamespaceMapping Prefix="media" Uri="http://search.yahoo.com/mrss/"/>
             </XmlNamespaceMappingCollection>
          </XmlDataProvider.XmlNamespaceManager>
       </XmlDataProvider>
       <DataTemplate x:Key="itemTemplate">
          <Image Width="75" Height="75" Source="{Binding Mode=OneWay, XPath=media:thumbnail/@url}"/>
       </DataTemplate>
       <ControlTemplate x:Key="controlTemplate" TargetType="{x:Type ItemsControl}">
          <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
       </ControlTemplate>
    </Grid.Resources>
    <ItemsControl
       Width="375"
       ItemsSource="{Binding Mode=Default, Source={StaticResource flickrdata}, XPath=/rss/channel/item}"
       ItemTemplate="{StaticResource itemTemplate}"
       Template="{StaticResource controlTemplate}">
    </ItemsControl>
 </Grid>
]]></Snippet>
    <Snippet Name="Animation" Shortcut=""><![CDATA[<Canvas>  

<Canvas.Triggers>
  <EventTrigger RoutedEvent="Canvas.Loaded">
    <EventTrigger.Actions>
        <BeginStoryboard>
          <Storyboard BeginTime="0" Duration="Forever">
            <DoubleAnimation Storyboard.TargetName="e1" Storyboard.TargetProperty="(Canvas.Top)" From="0" To="300" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:1" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e2" Storyboard.TargetProperty="(Canvas.Left)" From="0" To="400" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:2" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e3" Storyboard.TargetProperty="(Canvas.Top)" From="0" To="200" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:3" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e3" Storyboard.TargetProperty="(Canvas.Left)" From="0" To="350" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:2" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e4" Storyboard.TargetProperty="(Canvas.Top)" From="0" To="250" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:1" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e5" Storyboard.TargetProperty="(Canvas.Left)" From="0" To="30" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:1" RepeatBehavior="Forever"/>
            <DoubleAnimation Storyboard.TargetName="e5" Storyboard.TargetProperty="(Canvas.Top)" From="0" To="278" AutoReverse="true" BeginTime="0:0:0" Duration="0:0:2" RepeatBehavior="Forever"/>
          </Storyboard>
        </BeginStoryboard>
    </EventTrigger.Actions>
  </EventTrigger>
</Canvas.Triggers>

<Ellipse x:Name="e1" Opacity="0.5" Fill="YellowGreen" Height="100" Width="100" />
<Ellipse x:Name="e2" Opacity="0.5" Fill="Orange" Height="100" Width="100"/>
<Ellipse x:Name="e3" Opacity="0.5" Fill="Tomato" Height="100" Width="100"  />
<Ellipse x:Name="e4" Opacity="0.5" Fill="LightBlue" Height="100" Width="100" />
<Ellipse x:Name="e5" Opacity="0.5" Fill="Gold" Height="100" Width="100" />

</Canvas>]]></Snippet>
  </Category>
  <Category Name="Simple Styles">
    <Snippet Name="Button" Shortcut="ss button"><![CDATA[<!-- SimpleStyles: Button -->

<Style TargetType="{x:Type Button}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="MinHeight" Value="23"/>
  <Setter Property="MinWidth" Value="75"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Button}">
        <Border 
          x:Name="Border"  
          CornerRadius="2" 
          BorderThickness="1"
          Background="#C0C0C0"
          BorderBrush="#404040">
          <ContentPresenter 
            Margin="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocused" Value="true">
            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
          </Trigger>
          <Trigger Property="IsDefaulted" Value="true">
            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#808080" />
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="CheckBox" Shortcut="ss checkbox"><![CDATA[<!-- SimpleStyles: CheckBox -->

<Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type CheckBox}">
        <BulletDecorator Background="Transparent">
          <BulletDecorator.Bullet>
            <Border x:Name="Border"  
              Width="13" 
              Height="13" 
              CornerRadius="0" 
              Background="#C0C0C0"
              BorderThickness="1"
              BorderBrush="#404040">
              <Path 
                Width="7" Height="7" 
                x:Name="CheckMark"
                SnapsToDevicePixels="False" 
                Stroke="#404040"
                StrokeThickness="2"
                Data="M 0 0 L 7 7 M 0 7 L 7 0" />
            </Border>
          </BulletDecorator.Bullet>
          <ContentPresenter Margin="4,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
        </BulletDecorator>
        <ControlTemplate.Triggers>
          <Trigger Property="IsChecked" Value="false">
            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
          </Trigger>
          <Trigger Property="IsChecked" Value="{x:Null}">
            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#808080" />
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="ComboBox" Shortcut="ss combobox"><![CDATA[<!-- SimpleStyles: ComboBox -->

<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition />
      <ColumnDefinition Width="20" />
    </Grid.ColumnDefinitions>
    <Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      CornerRadius="2"
      Background="#C0C0C0"
      BorderBrush="#404040"
      BorderThickness="1" />
    <Border 
      Grid.Column="0"
      CornerRadius="2,0,0,2" 
      Margin="1" 
      Background="#FFFFFF" 
      BorderBrush="#404040"
      BorderThickness="0,0,1,0" />
    <Path 
      x:Name="Arrow"
      Grid.Column="1"     
      Fill="#404040"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 8 0 Z"/>
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#808080" />
    </Trigger>
    <Trigger Property="ToggleButton.IsChecked" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
      <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
      <Setter Property="Foreground" Value="#888888"/>
      <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
  <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
</ControlTemplate>

<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
  <Setter Property="MinWidth" Value="120"/>
  <Setter Property="MinHeight" Value="20"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ComboBox}">
        <Grid>
          <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
          </ToggleButton>
          <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
          <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
          <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
            <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
              <Border 
                x:Name="DropDownBorder"
                Background="#FFFFFF"
                BorderThickness="1"
                BorderBrush="#888888"/>
              <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
              </ScrollViewer>
            </Grid>
          </Popup>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="HasItems" Value="false">
            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
          <Trigger Property="IsGrouping" Value="true">
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </Trigger>
          <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
          </Trigger>
          <Trigger Property="IsEditable"
               Value="true">
            <Setter Property="IsTabStop" Value="false"/>
            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
  <Style.Triggers>
  </Style.Triggers>
</Style>

<!-- SimpleStyles: ComboBoxItem -->

<Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ComboBoxItem}">
        <Border 
          Name="Border"
          Padding="2"
          SnapsToDevicePixels="true">
          <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Expander" Shortcut="ss expander"><![CDATA[<!-- SimpleStyles: Expander -->

<ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
  <Border
    Name="Border" 
    CornerRadius="2,0,0,0"
    Background="Transparent"
    BorderBrush="#404040"
    BorderThickness="0,0,1,0">
    <Path 
      Name="Arrow"
      Fill="#404040"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 8 0 Z"/>
  </Border>
    <ControlTemplate.Triggers>
    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#808080" />
    </Trigger>
    <Trigger Property="IsPressed" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
    </Trigger>
    <Trigger Property="IsChecked" Value="true">
      <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
      <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
      <Setter Property="Foreground" Value="#888888"/>
      <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<Style TargetType="{x:Type Expander}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Expander}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Name="ContentRow" Height="0"/>
          </Grid.RowDefinitions>
          <Border 
            Name="Border" 
            Grid.Row="0" 
            Background="#E0E0E0"
            BorderBrush="#404040"
            BorderThickness="1" 
            CornerRadius="2,2,0,0" >
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <ToggleButton
                IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                OverridesDefaultStyle="True" 
                Template="{StaticResource ExpanderToggleButton}" 
                Background="#C0C0C0" />
              <ContentPresenter 
                Grid.Column="1"
                Margin="4" 
                ContentSource="Header" 
                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <Border 
            Name="Content" 
            Grid.Row="1" 
            Background="#FFFFFF"
            BorderBrush="#888888" 
            BorderThickness="1,0,1,1" 
            CornerRadius="0,0,2,2" >
            <ContentPresenter Margin="4" />
          </Border>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsExpanded" Value="True">
            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>

        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Frame" Shortcut="ss frame"><![CDATA[<!-- SimpleStyles: Frame -->

<!-- Back/Forward Button Style -->

<Style x:Key="FrameButtonStyle" TargetType="{x:Type Button}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Command" Value="NavigationCommands.BrowseBack"/>
  <Setter Property="Focusable" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Button}">
        <Grid>
          <Ellipse 
            Name="Ellipse" 
            Fill="#C0C0C0"
            Stroke="#404040"
            StrokeThickness="1" 
            Width="16"
            Height="16"/>

          <Path 
            x:Name="Arrow"
            Margin="0,0,2,0"
            Fill="#888888"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 4 0 L 0 4 L 4 8 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="Command" Value="{x:Static NavigationCommands.BrowseForward}">
            <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 4 4 L 0 8 z"/>
            <Setter TargetName="Arrow" Property="Margin" Value="2,0,0,0"/>
          </Trigger>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Ellipse" Property="Fill" Value="#808080"/>
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Ellipse" Property="Fill" Value="#E0E0E0" />
            <Setter TargetName="Ellipse" Property="Stroke" Value="#606060" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Ellipse" Property="Fill" Value="#EEEEEE"/>
            <Setter TargetName="Arrow" Property="Fill" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- Frame Menu Style -->

<Style x:Key="FrameMenu" TargetType="{x:Type Menu}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
  <Setter Property="IsMainMenu" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Menu}">
        <DockPanel IsItemsHost="true"/>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- Frame Menu Header Style -->

<Style x:Key="FrameHeaderMenuItem" TargetType="{x:Type MenuItem}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type MenuItem}">
        <Grid>
          <Popup x:Name="PART_Popup"
            Placement="Bottom"
            VerticalOffset="2"
            IsOpen="{TemplateBinding IsSubmenuOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Fade">
            <Border Name="SubMenuBorder"
              Background="#FFFFFF"
              BorderThickness="1"
              BorderBrush="#888888">
              <StackPanel IsItemsHost="true"
                Margin="2"
                KeyboardNavigation.TabNavigation="Cycle"
                KeyboardNavigation.DirectionalNavigation="Cycle"/>
            </Border>
          </Popup>

          <Grid x:Name="Panel" 
            Width="24" 
            Background="Transparent"
            HorizontalAlignment="Right" >

            <Border Visibility="Hidden" 
              Name="HighlightBorder" 
              BorderThickness="1" 
              BorderBrush="#404040" 
              Background="#C0C0C0" 
              CornerRadius="2" />
            <Path x:Name="Arrow"
              SnapsToDevicePixels="false"
              HorizontalAlignment="Right"
              VerticalAlignment="Center"
              Margin="0,2,4,0"
              Fill="#888888"
              StrokeLineJoin="Round"
              Data="M 0 0 L 4 4 L 8 0 Z"/>
          </Grid>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="HighlightBorder" Property="Visibility" Value="Visible"/>
          </Trigger>
          <Trigger Property="IsSubmenuOpen" Value="true">
            <Setter TargetName="HighlightBorder" Property="Background" Value="#E0E0E0" />
            <Setter TargetName="HighlightBorder" Property="BorderBrush" Value="#606060" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Arrow" Property="Fill"  Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- Frame Menu Item Style -->

<Style x:Key="FrameSubmenuItem" TargetType="{x:Type MenuItem}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Header" Value="{Binding Path=(JournalEntry.Name)}"/>
  <Setter Property="Command" Value="NavigationCommands.NavigateJournal"/>
  <Setter Property="CommandTarget" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}}, Path=TemplatedParent}"/>
  <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
  <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type MenuItem}">
        <Grid Name="Panel"
          Background="Transparent"
          SnapsToDevicePixels="true">
          <Path Name="Glyph"
            SnapsToDevicePixels="false"
            Margin="7,5"
            Width="10"
            Height="10"
            HorizontalAlignment="Left"
            StrokeStartLineCap="Triangle"
            StrokeEndLineCap="Triangle"
            StrokeThickness="2"
            Stroke="#888888" />

          <ContentPresenter ContentSource="Header"
            Margin="24,5,50,5"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Current">
            <Setter TargetName="Glyph" Property="Data" Value="M 0,5 L 2.5,8 L 7,3 "/>
          </Trigger>
          <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Panel" Property="Background" Value="#DDDDDD"/>
          </Trigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="MenuItem.IsHighlighted" Value="true"/>
              <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Forward"/>
            </MultiTrigger.Conditions>
            <Setter TargetName="Glyph" Property="Data" Value="M 3 1 L 7 5 L 3 9 z"/>
            <Setter TargetName="Glyph" Property="Fill" Value="#888888"/>
            <Setter TargetName="Glyph" Property="Stroke" Value="{x:Null}"/>
          </MultiTrigger>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="MenuItem.IsHighlighted" Value="true"/>
              <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" Value="Back"/>
            </MultiTrigger.Conditions>
            <Setter TargetName="Glyph" Property="Data" Value="M 7 1 L 3 5 L 7 9 z"/>
            <Setter TargetName="Glyph" Property="Fill" Value="#888888"/>
            <Setter TargetName="Glyph" Property="Stroke" Value="{x:Null}"/>
          </MultiTrigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- Merges Back and Forward Navigation Stacks -->

<JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter"/>

<!-- SimpleStyles: Frame -->

<Style x:Key="{x:Type Frame}" TargetType="{x:Type Frame}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Frame}">
        <DockPanel>
          <Grid Background="#E0E0E0"
            DockPanel.Dock="Top"
            Height="22">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="16"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Menu Name="NavMenu"
              Grid.ColumnSpan="3"
              Height="16"
              Margin="1,0,0,0"
              VerticalAlignment="Center" 
              Style="{StaticResource FrameMenu}">
              <MenuItem Style="{StaticResource FrameHeaderMenuItem}"
                ItemContainerStyle="{StaticResource FrameSubmenuItem}"
                IsSubmenuOpen="{Binding Path=(MenuItem.IsSubmenuOpen),Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                <MenuItem.ItemsSource>
                  <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                    <MultiBinding.Bindings>
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                        Path="BackStack" />
                      <Binding RelativeSource="{RelativeSource TemplatedParent}" 
                        Path="ForwardStack" />
                    </MultiBinding.Bindings>
                  </MultiBinding>
                </MenuItem.ItemsSource>
              </MenuItem>
            </Menu>

            <Path Grid.Column="0" 
              SnapsToDevicePixels="false"
              IsHitTestVisible="false"
              Margin="2,0,0,0"
              Grid.ColumnSpan="3"
              StrokeThickness="1" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Data="M15,14 Q18,12.9 20.9,14 A8.3,8.3,0,0,0,35.7,8.7 A8.3,8.3,0,0,0,25.2,0.6 Q18,3.3 10.8,0.6 A8.3,8.3,0,0,0,0.3,8.7 A8.3,8.3,0,0,0,15,14 z"
              Fill="#E0E0E0"
              Stroke="#AAAAAA"/>
            <Button Style="{StaticResource FrameButtonStyle}"
              Command="NavigationCommands.BrowseBack"
              Content="M 4 0 L 0 4 L 4 8 Z"
              Margin="2.7,0,1.3,0" 
              Grid.Column="0"/>
            <Button Style="{StaticResource FrameButtonStyle}"
              Command="NavigationCommands.BrowseForward"
              Content="M 4 0 L 0 4 L 4 8 Z"
              Margin="1.3,0,0,0" 
              Grid.Column="1"/>
          </Grid>
          <ContentPresenter x:Name="PART_FrameCP"/>
        </DockPanel>
        <ControlTemplate.Triggers>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Property="CanGoForward" Value="false"/>
              <Condition Property="CanGoBack" Value="false"/>
            </MultiTrigger.Conditions>
            <Setter TargetName="NavMenu" Property="IsEnabled" Value="false"/>
          </MultiTrigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="GroupBox" Shortcut="ss groupbox"><![CDATA[<!-- SimpleStyles: GroupBox -->

<Style TargetType="{x:Type GroupBox}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type GroupBox}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Border 
            Grid.Row="0" 
            Background="#E0E0E0"
            BorderBrush="#404040"
            BorderThickness="1" 
            CornerRadius="2,2,0,0" >
            <ContentPresenter 
              Margin="4" 
              ContentSource="Header" 
              RecognizesAccessKey="True" />
          </Border>
          <Border 
            Grid.Row="1" 
            Background="#FFFFFF"
            BorderBrush="#888888" 
            BorderThickness="1,0,1,1" 
            CornerRadius="0,0,2,2" >
            <ContentPresenter 
              Margin="4" />
          </Border>
        </Grid>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Label" Shortcut="ss label"><![CDATA[<!-- SimpleStyles: Label -->

<Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
  <Setter Property="HorizontalContentAlignment" Value="Left"/>
  <Setter Property="VerticalContentAlignment" Value="Top"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Label}">
        <Border>
          <ContentPresenter 
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="ListBox" Shortcut="ss listbox"><![CDATA[<!-- SimpleStyles: ListBox -->

<Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
  <Setter Property="MinWidth" Value="120"/>
  <Setter Property="MinHeight" Value="95"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ListBox}">
        <Border 
          Name="Border" 
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1"
          CornerRadius="2">
          <ScrollViewer 
            Margin="0"
            Focusable="false">
            <StackPanel Margin="2" IsItemsHost="True" />
          </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
          </Trigger>
          <Trigger Property="IsGrouping" Value="true">
            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- SimpleStyles: ListBoxItem -->

<Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ListBoxItem}">
        <Border 
          Name="Border"
          Padding="2"
          SnapsToDevicePixels="true">
          <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsSelected" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="ListView" Shortcut="ss listview"><![CDATA[<!-- SimpleStyles: ListView -->

<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ScrollViewer}">
        <Grid Background="{TemplateBinding Background}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <DockPanel Margin="{TemplateBinding Padding}">
            <ScrollViewer DockPanel.Dock="Top"
              HorizontalScrollBarVisibility="Hidden"
              VerticalScrollBarVisibility="Hidden"
              Focusable="false">
              <GridViewHeaderRowPresenter Margin="2,0,2,0"
                Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>

            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
              KeyboardNavigation.DirectionalNavigation="Local"/>
          </DockPanel>

          <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Value="{TemplateBinding HorizontalOffset}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

          <ScrollBar Name="PART_VerticalScrollBar"
            Grid.Column="1"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Value="{TemplateBinding VerticalOffset}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

        </Grid>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
  <Setter Property="Width" Value="18"/>
  <Setter Property="Background" Value="#404040"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Thumb}">
        <Border Padding="{TemplateBinding Padding}"
          Background="Transparent">
          <Rectangle HorizontalAlignment="Center"
            Width="1"
            Fill="{TemplateBinding Background}"/>
        </Border>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
  <Setter Property="HorizontalContentAlignment" Value="Center"/>
  <Setter Property="VerticalContentAlignment" Value="Center"/>
  <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
        <Grid>
          <Border Name="HeaderBorder"
            BorderThickness="0,1,0,1"
            BorderBrush="#404040"
            Background="#E0E0E0"
            Padding="2,0,2,0">
            <ContentPresenter Name="HeaderContent"
              Margin="0,0,0,1"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
          <Thumb x:Name="PART_HeaderGripper"
            HorizontalAlignment="Right"
            Margin="0,0,-9,0"
            Style="{StaticResource GridViewColumnHeaderGripper}"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="HeaderBorder" Property="Background" Value="#C0C0C0"/>
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="HeaderBorder" Property="Background" Value="#E0E0E0"/>
            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
  <Style.Triggers>
    <Trigger Property="Role" Value="Floating">
      <Setter Property="Opacity" Value="0.7"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Canvas Name="PART_FloatingHeaderCanvas">
              <Rectangle Fill="#60000000"
                Width="{TemplateBinding ActualWidth}"
                Height="{TemplateBinding ActualHeight}"/>
            </Canvas>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Trigger>
    <Trigger Property="Role" Value="Padding">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Border Name="HeaderBorder"
              BorderThickness="0,1,0,1"
              BorderBrush="#404040"
              Background="#E0E0E0"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Trigger>
  </Style.Triggers>
</Style>

<Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
  <Setter Property="VerticalContentAlignment" Value="Center"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ListView}">
        <Border Name="Border"
          BorderThickness="1"
          BorderBrush="#888888"
          Background="#FFFFFF">
          <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
            <ItemsPresenter />
          </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsGrouping"
                   Value="true">
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false"/>
          </Trigger>
          <Trigger Property="IsEnabled"
                   Value="false">
            <Setter TargetName="Border"
                    Property="Background"
                    Value="#AAAAAA"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ListBoxItem}">
        <Border 
          Name="Border"
          Padding="2"
          SnapsToDevicePixels="true"
          Background="Transparent">
          <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsSelected" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Menu" Shortcut="ss menu"><![CDATA[<!-- SimpleStyles: Menu -->

<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Menu}">
        <Border 
          Background="#E0E0E0"
          BorderBrush="#404040"
          BorderThickness="1">
          <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
        </Border>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- SimpleStyles: ContextMenu -->

<Style TargetType="{x:Type ContextMenu}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
  <Setter Property="HasDropShadow" Value="True"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ContextMenu}">
        <Border 
          Name="Border"
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="HasDropShadow" Value="true">
            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- SimpleStyles: MenuItem -->

<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
  <Setter Property="Height" Value="1"/>
  <Setter Property="Margin" Value="0,4,0,4"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Separator}">
        <Border BorderBrush="#888888" BorderThickness="1"/>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- TopLevelHeader -->

<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
  <Border Name="Border" >
    <Grid>
      <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
      <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
        </Border>
      </Popup>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
      <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#C0C0C0"/>
      <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
    </Trigger>
    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
      <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
      <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter Property="Foreground" Value="#888888"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- TopLevelItem -->

<ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
  <Border Name="Border" >
    <Grid>
      <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#C0C0C0"/>
      <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="False">
      <Setter Property="Foreground" Value="#888888"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- SubmenuItem -->

<ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
  <Border Name="Border" >
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
        <ColumnDefinition Width="13"/>
      </Grid.ColumnDefinitions>
      <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
      <Border 
        Name="Check"  
        Width="13" Height="13" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="#C0C0C0"
        BorderThickness="1"
        BorderBrush="#404040">
        <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="#404040"
          StrokeThickness="2"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
      </Border>
      <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
      <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Icon" Value="{x:Null}">
      <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
    </Trigger>
    <Trigger Property="IsChecked" Value="true">
      <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="IsCheckable" Value="true">
      <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
      <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="false">
      <Setter Property="Foreground" Value="#888888"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- SubmenuHeader -->

<ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="{x:Type MenuItem}">
  <Border Name="Border" >
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
        <ColumnDefinition Width="13"/>
      </Grid.ColumnDefinitions>
      <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
      <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
      <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
      <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="#404040" />
      <Popup 
        Name="Popup"
        Placement="Right"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
        </Border>
      </Popup>
    </Grid>
  </Border>
  <ControlTemplate.Triggers>
    <Trigger Property="Icon" Value="{x:Null}">
      <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
    </Trigger>
    <Trigger Property="IsHighlighted" Value="true">
      <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
    </Trigger>
    <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
      <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
      <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
    </Trigger>
    <Trigger Property="IsEnabled" Value="false">
      <Setter Property="Foreground" Value="#888888"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<!-- MenuItem Style -->

<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Style.Triggers>
    <Trigger Property="Role" Value="TopLevelHeader">
      <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
      <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    </Trigger>
    <Trigger Property="Role" Value="TopLevelItem">
      <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
    </Trigger>
    <Trigger Property="Role" Value="SubmenuHeader">
      <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
    </Trigger>
    <Trigger Property="Role" Value="SubmenuItem">
      <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
    </Trigger>
  </Style.Triggers>
</Style>
]]></Snippet>
    <Snippet Name="ProgressBar" Shortcut="ss progressbar"><![CDATA[<!-- SimpleStyles: ProgressBar -->

<Style x:Key="{x:Type ProgressBar}"
     TargetType="{x:Type ProgressBar}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ProgressBar}">
        <Grid MinHeight="14" MinWidth="200">
          <Border 
            Name="PART_Track" 
            CornerRadius="2" 
            Background="#E0E0E0"
            BorderBrush="#888888"
            BorderThickness="1" />
          <Border 
            Name="PART_Indicator" 
            CornerRadius="2" 
            Background="#808080" 
            BorderBrush="#404040" 
            BorderThickness="1" 
            HorizontalAlignment="Left" />
        </Grid>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="RadioButton" Shortcut="ss radiobutton"><![CDATA[<!-- SimpleStyles: RadioButton -->

<Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type RadioButton}">
        <BulletDecorator Background="Transparent">
          <BulletDecorator.Bullet>
            <Grid Width="13" 
              Height="13" >
              <Ellipse x:Name="Border"  
                Fill="#C0C0C0"
                StrokeThickness="1"
                Stroke="#404040" />
              <Ellipse x:Name="CheckMark"
                Margin="4"
                Fill="#404040" />
            </Grid>
          </BulletDecorator.Bullet>
          <ContentPresenter 
            Margin="4,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
        </BulletDecorator>
        <ControlTemplate.Triggers>
          <Trigger Property="IsChecked" Value="false">
            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
          </Trigger>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Fill" Value="#808080" />
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Border" Property="Fill" Value="#E0E0E0" />
            <Setter TargetName="Border" Property="Stroke" Value="#404040" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Border" Property="Fill" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
            <Setter Property="Foreground" Value="#80000000"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="ScrollBar" Shortcut="ss scrollbar"><![CDATA[  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Focusable" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type RepeatButton}">
        <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="#C0C0C0"
          BorderBrush="#404040"
          BorderThickness="1">
          <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="#404040"
            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="IsTabStop" Value="false"/>
  <Setter Property="Focusable" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type RepeatButton}">
        <Border Background="Transparent" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="IsTabStop" Value="false"/>
  <Setter Property="Focusable" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Thumb}">
        <Border 
          CornerRadius="2" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
  <Grid >
    <Grid.RowDefinitions>
      <RowDefinition MaxHeight="18"/>
      <RowDefinition Height="0.00001*"/>
      <RowDefinition MaxHeight="18"/>
    </Grid.RowDefinitions>
    <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="#F0F0F0" />
    <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
    <Track 
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
      <Track.DecreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
      </Track.DecreaseRepeatButton>
      <Track.Thumb>
        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="#C0C0C0"
          BorderBrush="#404040" />
      </Track.Thumb>
      <Track.IncreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
      </Track.IncreaseRepeatButton>
    </Track>
    <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
  </Grid>
</ControlTemplate>

<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
  <Grid >
    <Grid.ColumnDefinitions>
      <ColumnDefinition MaxWidth="18"/>
      <ColumnDefinition Width="0.00001*"/>
      <ColumnDefinition MaxWidth="18"/>
    </Grid.ColumnDefinitions>
    <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="#F0F0F0" />
    <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
    <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
      <Track.DecreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
      </Track.DecreaseRepeatButton>
      <Track.Thumb>
        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="#C0C0C0"
          BorderBrush="#404040" />
      </Track.Thumb>
      <Track.IncreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
      </Track.IncreaseRepeatButton>
    </Track>
    <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
  </Grid>
</ControlTemplate>

<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Style.Triggers>
    <Trigger Property="Orientation" Value="Horizontal">
      <Setter Property="Width" Value="Auto"/>
      <Setter Property="Height" Value="18" />
      <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
    </Trigger>
    <Trigger Property="Orientation" Value="Vertical">
      <Setter Property="Width" Value="18"/>
      <Setter Property="Height" Value="Auto" />
      <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
    </Trigger>
  </Style.Triggers>
</Style>
]]></Snippet>
    <Snippet Name="ScrollViewer" Shortcut="ss scrollviewer"><![CDATA[<!-- SimpleStyles: ScrollViewer -->

<Style x:Key="LeftScrollViewer" TargetType="{x:Type ScrollViewer}">
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ScrollViewer}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>

          <ScrollContentPresenter Grid.Column="1"/>

          <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
          <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
          
        </Grid>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Separator" Shortcut="ss separator"><![CDATA[<!-- SimpleStyles: Separator  -->

<Style TargetType="{x:Type Separator}">
  <Setter Property="Height" Value="1" />
  <Setter Property="Margin" Value="0,2,0,2" />
  <Setter Property="Focusable" Value="false" />
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Separator}">
        <Border BorderBrush="{StaticResource SolidBorderColor}" BorderThickness="1" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Slider" Shortcut="ss slider"><![CDATA[  <!-- SimpleStyles: Slider -->

<Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="IsTabStop" Value="false"/>
  <Setter Property="Focusable" Value="false"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type RepeatButton}">
        <Border Background="Transparent" />
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Height" Value="14"/>
  <Setter Property="Width" Value="14"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Thumb}">
        <Ellipse 
          Name="Ellipse" 
          Fill="#C0C0C0"
          Stroke="#404040"
          StrokeThickness="1" />
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter TargetName="Ellipse" Property="Fill" Value="#808080"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Ellipse" Property="Fill" Value="#EEEEEE"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <TickBar 
      Name="TopTick"
      SnapsToDevicePixels="True" 
      Placement="Top"
      Fill="#404040"
      Height="4"
      Visibility="Collapsed" />
    <Border 
      Name="TrackBackground"
      Margin="0"
      CornerRadius="2" 
      Height="4"
      Grid.Row="1"
      Background="#E0E0E0" 
      BorderBrush="#404040"
      BorderThickness="1" />
    <Track Grid.Row="1" Name="PART_Track">
      <Track.DecreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource SliderButtonStyle}"
          Command="Slider.DecreaseLarge" />
      </Track.DecreaseRepeatButton>
      <Track.Thumb>
        <Thumb Style="{StaticResource SliderThumbStyle}" />
      </Track.Thumb>
      <Track.IncreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource SliderButtonStyle}"
          Command="Slider.IncreaseLarge" />
      </Track.IncreaseRepeatButton>
    </Track>
    <TickBar 
      Name="BottomTick"
      SnapsToDevicePixels="True" 
      Grid.Row="2"
      Fill="{TemplateBinding Foreground}"
      Placement="Bottom"
      Height="4"
      Visibility="Collapsed" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="TickPlacement" Value="TopLeft">
      <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="TickPlacement" Value="BottomRight">
      <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="TickPlacement" Value="Both">
      <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
      <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}"/>
      <ColumnDefinition Width="Auto"/>
    </Grid.ColumnDefinitions>
    <TickBar 
      Name="TopTick"
      SnapsToDevicePixels="True" 
      Placement="Left"
      Fill="#404040"
      Width="4"
      Visibility="Collapsed" />
    <Border 
      Name="TrackBackground"
      Margin="0"
      CornerRadius="2" 
      Width="4"
      Grid.Column="1"
      Background="#E0E0E0" 
      BorderBrush="#404040"
      BorderThickness="1" />
    <Track Grid.Column="1" Name="PART_Track">
      <Track.DecreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource SliderButtonStyle}"
          Command="Slider.DecreaseLarge" />
      </Track.DecreaseRepeatButton>
      <Track.Thumb>
        <Thumb Style="{StaticResource SliderThumbStyle}" />
      </Track.Thumb>
      <Track.IncreaseRepeatButton>
        <RepeatButton 
          Style="{StaticResource SliderButtonStyle}"
          Command="Slider.IncreaseLarge" />
      </Track.IncreaseRepeatButton>
    </Track>
    <TickBar 
      Name="BottomTick"
      SnapsToDevicePixels="True" 
      Grid.Column="2"
      Fill="{TemplateBinding Foreground}"
      Placement="Right"
      Width="4"
      Visibility="Collapsed" />
  </Grid>
  <ControlTemplate.Triggers>
    <Trigger Property="TickPlacement" Value="TopLeft">
      <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="TickPlacement" Value="BottomRight">
      <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
    </Trigger>
    <Trigger Property="TickPlacement" Value="Both">
      <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
      <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
    </Trigger>
  </ControlTemplate.Triggers>
</ControlTemplate>

<Style TargetType="{x:Type Slider}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Style.Triggers>
    <Trigger Property="Orientation" Value="Horizontal">
      <Setter Property="MinWidth" Value="104" />
      <Setter Property="MinHeight" Value="21" />
      <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
    </Trigger>
    <Trigger Property="Orientation" Value="Vertical">
      <Setter Property="MinWidth" Value="21" />
      <Setter Property="MinHeight" Value="104" />
      <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
    </Trigger>
  </Style.Triggers>
</Style>
]]></Snippet>
    <Snippet Name="TabControl" Shortcut="ss tabcontrol"><![CDATA[<!-- SimpleStyles: TabControl -->

<Style  TargetType="{x:Type TabControl}">
  <Setter Property="OverridesDefaultStyle" Value="True" />
  <Setter Property="SnapsToDevicePixels" Value="True" />
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TabControl}">
        <Grid KeyboardNavigation.TabNavigation="Local">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <TabPanel 
            Name="HeaderPanel"
            Grid.Row="0"
            Panel.ZIndex="1" 
            Margin="0,0,4,-1" 
            IsItemsHost="True"
            KeyboardNavigation.TabIndex="1"
            Background="Transparent" />
          <Border 
            Name="Border" 
            Grid.Row="1" 
            Background="#FFFFFF" 
            BorderBrush="#888888" 
            BorderThickness="1" 
            CornerRadius="2" 
            KeyboardNavigation.TabNavigation="Local"
            KeyboardNavigation.DirectionalNavigation="Contained"
            KeyboardNavigation.TabIndex="2" >
            <ContentPresenter 
              Name="PART_SelectedContentHost"
              Margin="4"
              ContentSource="SelectedContent" />
          </Border>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="#888888" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- SimpleStyles: TabItem -->

<Style TargetType="{x:Type TabItem}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TabItem}">
        <Grid>
        <Border 
          Name="Border"
          Margin="0,0,-4,0" 
          Background="#E0E0E0"
          BorderBrush="#888888" 
          BorderThickness="1,1,1,1" 
          CornerRadius="2,12,0,0" >
          <ContentPresenter x:Name="ContentSite"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            ContentSource="Header"
            Margin="12,2,12,2"
            RecognizesAccessKey="True"/>
        </Border>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsSelected" Value="True">
            <Setter Property="Panel.ZIndex" Value="100" />
            <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888" />
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="TextBox" Shortcut="ss textbox"><![CDATA[<!-- SimpleStyles: TextBox -->

<Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="MinWidth" Value="120"/>
  <Setter Property="MinHeight" Value="20"/>
  <Setter Property="AllowDrop" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TextBoxBase}">
        <Border 
          Name="Border"
          CornerRadius="2" 
          Padding="2"
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE"/>
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="ToolBar" Shortcut="ss toolbar"><![CDATA[<!-- SimpleStyles: ToolBar -->

<Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ButtonBase}">
        <Border 
          x:Name="Border"  
          BorderThickness="1"
          Background="Transparent"
          BorderBrush="Transparent">
          <ContentPresenter 
            Margin="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsKeyboardFocused" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#888888" />
          </Trigger>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#888888" />
          </Trigger>
          <Trigger Property="IsPressed" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
          </Trigger>
          <Trigger Property="CheckBox.IsChecked" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type Button}"/>
<Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type ToggleButton}"/>
<Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" 
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type CheckBox}"/>
<Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
       BasedOn="{StaticResource ToolBarButtonBaseStyle}"
       TargetType="{x:Type RadioButton}"/>

<Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
  <Setter Property="SnapsToDevicePixels" Value="True"/>
  <Setter Property="OverridesDefaultStyle" Value="True"/>
  <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
  <Setter Property="AllowDrop" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TextBox}">
        <Border 
          Name="Border"
          Padding="2"
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsEnabled" Value="False">
            <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE"/>
            <Setter Property="Foreground" Value="#888888"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Cursor" Value="SizeAll"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type Thumb}">
        <Border Background="Transparent"
          SnapsToDevicePixels="True">
          <Rectangle Margin="0,2">
            <Rectangle.Fill>
              <DrawingBrush Viewport="0,0,4,4" 
                ViewportUnits="Absolute"
                Viewbox="0,0,8,8"
                ViewboxUnits="Absolute"
                TileMode="Tile">
                <DrawingBrush.Drawing>
                  <DrawingGroup>
                    <DrawingGroup.Children>
                      <GeometryDrawing Brush="#AAA"
                        Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
                    </DrawingGroup.Children>
                  </DrawingGroup>
                </DrawingBrush.Drawing>
              </DrawingBrush>
            </Rectangle.Fill>
          </Rectangle>
        </Border>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ToggleButton}">
        <Border Name="Bd"
          CornerRadius="0,3,3,0"
          Background="Transparent"
          SnapsToDevicePixels="true">
          <Grid>
            <Path Name="Arrow"
              Fill="Black"
              VerticalAlignment="Bottom"
              Margin="2,3"
              Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
            <ContentPresenter/>
          </Grid>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="true">
            <Setter TargetName="Bd" Property="Background" Value="#808080"/>
          </Trigger>
          <Trigger Property="IsKeyboardFocused" Value="true">
            <Setter TargetName="Bd" Property="Background" Value="#808080"/>
          </Trigger>
          <Trigger Property="IsChecked" Value="true">
            <Setter TargetName="Bd" Property="Background" Value="#808080"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter TargetName="Arrow" Property="Fill" Value="#AAA"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
  <Setter Property="SnapsToDevicePixels" Value="true"/>
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ToolBar}">
        <Border x:Name="Border"  
          CornerRadius="2" 
          BorderThickness="1"
          Background="#E0E0E0"
          BorderBrush="#404040">
          <DockPanel >
            <ToggleButton DockPanel.Dock="Right"
              IsEnabled="{TemplateBinding HasOverflowItems}"
              Style="{StaticResource ToolBarOverflowButtonStyle}"
              IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press">
              <Popup x:Name="OverflowPopup"
                AllowsTransparency="true"
                Placement="Bottom"
                IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                StaysOpen="false"
                Focusable="false"
                PopupAnimation="Slide">
                <Border x:Name="DropDownBorder"
                  Background="#FFFFFF"
                  BorderThickness="1"
                  BorderBrush="#888888">
                  <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                    Margin="2"
                    WrapWidth="200"
                    Focusable="true" 
                    FocusVisualStyle="{x:Null}"
                    KeyboardNavigation.TabNavigation="Cycle"
                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
              </Popup>
            </ToggleButton>
            
            <Thumb x:Name="ToolBarThumb"
              Style="{StaticResource ToolBarThumbStyle}"
              Width="10"/>
            <ToolBarPanel x:Name="PART_ToolBarPanel"
              IsItemsHost="true"
              Margin="0,1,2,2"/>
          </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="IsOverflowOpen" Value="true">
            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false"/>
          </Trigger>
          <Trigger Property="ToolBarTray.IsLocked" Value="true">
            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}" >
  <Setter Property="Background" Value="#E0E0E0"/>
</Style>
]]></Snippet>
    <Snippet Name="Tooltip" Shortcut="ss tooltip"><![CDATA[<!-- SimpleStyles: ToolTip -->

<Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
  <Setter Property="OverridesDefaultStyle" Value="true"/>
  <Setter Property="HasDropShadow" Value="True"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ToolTip}">
        <Border Name="Border"
          Background="#E0E0E0"
          BorderBrush="#888888"
          BorderThickness="1"
          Width="{TemplateBinding Width}"
          Height="{TemplateBinding Height}">
          <ContentPresenter
            Margin="4" 
            HorizontalAlignment="Left"
            VerticalAlignment="Top" />
        </Border>
        <ControlTemplate.Triggers>
          <Trigger Property="HasDropShadow" Value="true">
            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="TreeView" Shortcut="ss treeview"><![CDATA[<!-- SimpleStyles: TreeView -->

<Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
  <Setter Property="OverridesDefaultStyle" Value="True" />
  <Setter Property="SnapsToDevicePixels" Value="True" />
  <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
  <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TreeView}">
        <Border 
          Name="Border" 
          CornerRadius="1" 
          Background="#FFFFFF"
          BorderBrush="#888888"
          BorderThickness="1" >
          <ScrollViewer 
            Focusable="False"
            CanContentScroll="False"
            Padding="4">
            <ItemsPresenter/>
          </ScrollViewer>
        </Border>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>

<!-- SimpleStyles: TreeViewItem -->

<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
  <Setter Property="Focusable" Value="False"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type ToggleButton}">
        <Grid
          Width="15"
          Height="13"
          Background="Transparent">
          <Path x:Name="ExpandPath"
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="1,1,1,1"
            Fill="#404040"
            Data="M 4 0 L 8 4 L 4 8 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsChecked"
               Value="True">
            <Setter Property="Data"
                TargetName="ExpandPath"
                Value="M 0 4 L 8 4 L 4 8 Z"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
<Style TargetType="{x:Type TreeViewItem}">
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="{x:Type TreeViewItem}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="19" Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
          </Grid.RowDefinitions>
          <ToggleButton 
            x:Name="Expander"
            Style="{StaticResource ExpandCollapseToggleStyle}"
            IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press"/>
          <Border 
            Name="Border" 
            Grid.Column="1" 
            Padding="1">
            <ContentPresenter 
              x:Name="PART_Header"
              ContentSource="Header"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
          </Border>
          <ItemsPresenter 
            x:Name="ItemsHost"
            Grid.Row="1"
            Grid.Column="1"
            Grid.ColumnSpan="2"/>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="IsExpanded" Value="false">
            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
          </Trigger>
          <Trigger Property="HasItems" Value="false">
            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
          </Trigger>
          <Trigger Property="IsSelected" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#DDDDDD"/>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>
</Style>
]]></Snippet>
    <Snippet Name="Complete Theme" Shortcut="ss theme"><![CDATA[  <!-- Normal Brush -->

  <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#CCC" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- Light Brush -->

  <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- Dark Brush -->

  <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#AAA" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- Pressed Brush -->

  <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#BBB" Offset="0.0"/>
        <GradientStop Color="#EEE" Offset="0.1"/>
        <GradientStop Color="#EEE" Offset="0.9"/>
        <GradientStop Color="#FFF" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#444" Offset="0.0"/>
        <GradientStop Color="#888" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- Defaulted Brush -->

  <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#777" Offset="0.0"/>
        <GradientStop Color="#000" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>

  <!-- Disabled Brush -->

  <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
  <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

  <!-- Border Brushes -->

  <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
  <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

  <!-- Miscellaneous Brushes -->

  <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
  <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
  <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
  <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

  <!-- Focus Visual -->

  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle 
              Margin="2"
              StrokeThickness="1"
              Stroke="#60000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Button -->

  <Style TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="MinHeight" Value="23"/>
    <Setter Property="MinWidth" Value="75"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border 
            x:Name="Border"  
            CornerRadius="2" 
            BorderThickness="1"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}">
            <ContentPresenter 
              Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Focus Visual -->

  <Style x:Key="CheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle 
              Margin="15,0,0,0"
              StrokeThickness="1"
              Stroke="#60000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: CheckBox -->
  
  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Border x:Name="Border"  
                Width="13" 
                Height="13" 
                CornerRadius="0" 
                Background="{StaticResource NormalBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource NormalBorderBrush}">
                <Path 
                  Width="7" Height="7" 
                  x:Name="CheckMark"
                  SnapsToDevicePixels="False" 
                  Stroke="{StaticResource GlyphBrush}"
                  StrokeThickness="2"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
              </Border>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="4,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              RecognizesAccessKey="True"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
              <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
              <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: ComboBox -->

  <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="20" />
      </Grid.ColumnDefinitions>
      <Border
        x:Name="Border" 
        Grid.ColumnSpan="2"
        CornerRadius="2"
        Background="{StaticResource NormalBrush}"
        BorderBrush="{StaticResource NormalBorderBrush}"
        BorderThickness="1" />
      <Border 
        Grid.Column="0"
        CornerRadius="2,0,0,2" 
        Margin="1" 
        Background="{StaticResource WindowBackgroundBrush}" 
        BorderBrush="{StaticResource NormalBorderBrush}"
        BorderThickness="0,0,1,0" />
      <Path 
        x:Name="Arrow"
        Grid.Column="1"     
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 4 4 L 8 0 Z"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsMouseOver" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
  </ControlTemplate>

  <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="MinWidth" Value="120"/>
    <Setter Property="MinHeight" Value="20"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid>
            <ToggleButton 
              Name="ToggleButton" 
              Template="{StaticResource ComboBoxToggleButton}" 
              Grid.Column="2" 
              Focusable="false"
              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press">
            </ToggleButton>
            <ContentPresenter
              Name="ContentSite"
              IsHitTestVisible="False" 
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              Margin="3,3,23,3"
              VerticalAlignment="Center"
              HorizontalAlignment="Left" />
            <TextBox x:Name="PART_EditableTextBox"
              Style="{x:Null}" 
              Template="{StaticResource ComboBoxTextBox}" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="3,3,23,3"
              Focusable="True" 
              Background="Transparent"
              Visibility="Hidden"
              IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup 
              Name="Popup"
              Placement="Bottom"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True" 
              Focusable="False"
              PopupAnimation="Slide">
              <Grid 
                Name="DropDown"
                SnapsToDevicePixels="True"                
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border 
                  x:Name="DropDownBorder"
                  Background="{StaticResource WindowBackgroundBrush}"
                  BorderThickness="1"
                  BorderBrush="{StaticResource SolidBorderBrush}"/>
                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
              <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
              <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"
                 Value="true">
              <Setter Property="IsTabStop" Value="false"/>
              <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
              <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
    </Style.Triggers>
  </Style>

  <!-- SimpleStyles: ComboBoxItem -->

  <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border 
            Name="Border"
            Padding="2"
            SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Expander -->

  <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
    <Border
      Name="Border" 
      CornerRadius="2,0,0,0"
      Background="Transparent"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="0,0,1,0">
      <Path 
        Name="Arrow"
        Fill="{StaticResource GlyphBrush}"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 4 4 L 8 0 Z"/>
    </Border>
      <ControlTemplate.Triggers>
      <Trigger Property="ToggleButton.IsMouseOver" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type Expander}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Name="ContentRow" Height="0"/>
            </Grid.RowDefinitions>
            <Border 
              Name="Border" 
              Grid.Row="0" 
              Background="{StaticResource LightBrush}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              BorderThickness="1" 
              CornerRadius="2,2,0,0" >
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton
                  IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                  OverridesDefaultStyle="True" 
                  Template="{StaticResource ExpanderToggleButton}" 
                  Background="{StaticResource NormalBrush}" />
                <ContentPresenter 
                  Grid.Column="1"
                  Margin="4" 
                  ContentSource="Header" 
                  RecognizesAccessKey="True" />
              </Grid>
            </Border>
            <Border 
              Name="Content" 
              Grid.Row="1" 
              Background="{StaticResource WindowBackgroundBrush}"
              BorderBrush="{StaticResource SolidBorderBrush}" 
              BorderThickness="1,0,1,1" 
              CornerRadius="0,0,2,2" >
              <ContentPresenter Margin="4" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: GroupBox -->

  <Style TargetType="{x:Type GroupBox}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border 
              Grid.Row="0" 
              Background="{StaticResource LightBrush}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              BorderThickness="1" 
              CornerRadius="2,2,0,0" >
              <ContentPresenter 
                Margin="4" 
                ContentSource="Header" 
                RecognizesAccessKey="True" />
            </Border>
            <Border 
              Grid.Row="1" 
              Background="{StaticResource WindowBackgroundBrush}"
              BorderBrush="{StaticResource SolidBorderBrush}" 
              BorderThickness="1,0,1,1" 
              CornerRadius="0,0,2,2" >
              <ContentPresenter 
                Margin="4" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Label -->
  
  <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Top"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border>
            <ContentPresenter 
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: ListBox -->
  
  <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <!-- Setter Property="FocusVisualStyle"	Value="{StaticResource ListBoxFocusVisual}"/ -->
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="MinWidth" Value="120"/>
    <Setter Property="MinHeight" Value="95"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border 
            Name="Border" 
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1"
            CornerRadius="2">
            <ScrollViewer 
              Margin="0"
              Focusable="false">
              <StackPanel Margin="2" IsItemsHost="True" />
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- SimpleStyles: ListBoxItem -->
  
  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border 
            Name="Border"
            Padding="2"
            SnapsToDevicePixels="true">
            <ContentPresenter />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Menu -->
  
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border 
            Background="{StaticResource LightBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="1">
            <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: ContextMenu -->

  <Style TargetType="{x:Type ContextMenu}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="HasDropShadow" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Border 
            Name="Border"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
              <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: MenuItem -->
  
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Height" Value="1"/>
    <Setter Property="Margin" Value="0,4,0,4"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TopLevelHeader -->

  <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Border" >
      <Grid>
        <ContentPresenter 
          Margin="6,3,6,3" 
          ContentSource="Header"
          RecognizesAccessKey="True" />
        <Popup 
          Name="Popup"
          Placement="Bottom"
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Fade">
          <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <StackPanel  
              IsItemsHost="True" 
              KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="true">
        <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- TopLevelItem -->

  <ControlTemplate 
    x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
    <Border Name="Border" >
      <Grid>
        <ContentPresenter 
          Margin="6,3,6,3" 
          ContentSource="Header"
          RecognizesAccessKey="True" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- SubmenuItem -->
  
  <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
    TargetType="{x:Type MenuItem}">
    <Border Name="Border" >
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
          <ColumnDefinition Width="13"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter 
          Name="Icon"
          Margin="6,0,6,0"
          VerticalAlignment="Center"
          ContentSource="Icon"/>
        <Border 
          Name="Check"  
          Width="13" Height="13" 
          Visibility="Collapsed"
          Margin="6,0,6,0" 
          Background="{StaticResource NormalBrush}"
          BorderThickness="1"
          BorderBrush="{StaticResource NormalBorderBrush}">
          <Path 
            Name="CheckMark"
            Width="7" Height="7" 
            Visibility="Hidden" 
            SnapsToDevicePixels="False" 
            Stroke="{StaticResource GlyphBrush}"
            StrokeThickness="2"
            Data="M 0 0 L 7 7 M 0 7 L 7 0" />
        </Border>
        <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True"/>
        <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="5,2,0,2"
          DockPanel.Dock="Right" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="true">
        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsCheckable" Value="true">
        <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- SubmenuHeader -->

  <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
    TargetType="{x:Type MenuItem}">
    <Border Name="Border" >
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
          <ColumnDefinition Width="13"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter 
          Name="Icon"
          Margin="6,0,6,0"
          VerticalAlignment="Center"
          ContentSource="Icon"/>
        <ContentPresenter 
          Name="HeaderHost"
          Grid.Column="1"
          ContentSource="Header"
          RecognizesAccessKey="True"/>
        <TextBlock x:Name="InputGestureText"
          Grid.Column="2"
          Text="{TemplateBinding InputGestureText}"
          Margin="5,2,2,2"
          DockPanel.Dock="Right"/>
        <Path 
          Grid.Column="3"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 0 7 L 4 3.5 Z" 
          Fill="{StaticResource GlyphBrush}" />
        <Popup 
          Name="Popup"
          Placement="Right"
          HorizontalOffset="-4" 
          IsOpen="{TemplateBinding IsSubmenuOpen}"
          AllowsTransparency="True" 
          Focusable="False"
          PopupAnimation="Fade">
          <Border 
            Name="SubmenuBorder"
            SnapsToDevicePixels="True"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <StackPanel  
              IsItemsHost="True" 
              KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="true">
        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
      </Trigger>
      <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <!-- MenuItem Style -->

  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuItem">
        <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- SimpleStyles: ProgressBar -->

  <Style x:Key="{x:Type ProgressBar}"
       TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid MinHeight="14" MinWidth="200">
            <Border 
              Name="PART_Track" 
              CornerRadius="2" 
              Background="{StaticResource PressedBrush}"
              BorderBrush="{StaticResource SolidBorderBrush}"
              BorderThickness="1" />
            <Border 
              Name="PART_Indicator" 
              CornerRadius="2" 
              Background="{StaticResource DarkBrush}" 
              BorderBrush="{StaticResource NormalBorderBrush}" 
              BorderThickness="1" 
              HorizontalAlignment="Left" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Focus Visual -->

  <Style x:Key="RadioButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle 
              Margin="15,0,0,0"
              StrokeThickness="1"
              Stroke="#60000000"
              StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: RadioButton -->

  <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="FocusVisualStyle"	Value="{StaticResource RadioButtonFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Grid Width="13" 
                Height="13" >
                <Ellipse x:Name="Border"  
                  Fill="{StaticResource NormalBrush}"
                  StrokeThickness="1"
                  Stroke="{StaticResource NormalBorderBrush}" />
                <Ellipse x:Name="CheckMark"
                  Margin="4"
                  Fill="{StaticResource GlyphBrush}" />
              </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter 
              Margin="4,0,0,0"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              RecognizesAccessKey="True"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
              <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="Border" Property="Fill" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
              <Setter TargetName="Border" Property="Stroke" Value="{StaticResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Border" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
              <Setter Property="Foreground" Value="#80000000"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border 
            Name="Border"
            Margin="1" 
            CornerRadius="2" 
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="1">
            <Path 
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Fill="{StaticResource GlyphBrush}"
              Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border 
            CornerRadius="2" 
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.RowDefinitions>
        <RowDefinition MaxHeight="18"/>
        <RowDefinition Height="0.00001*"/>
        <RowDefinition MaxHeight="18"/>
      </Grid.RowDefinitions>
      <Border
        Grid.RowSpan="3"
        CornerRadius="2" 
        Background="#F0F0F0" />
      <RepeatButton 
        Grid.Row="0"                           
        Style="{StaticResource ScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineUpCommand"
        Content="M 0 4 L 8 4 L 4 0 Z" />
      <Track 
        Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource ScrollBarPageButton}"
            Command="ScrollBar.PageUpCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb 
            Style="{StaticResource ScrollBarThumb}" 
            Margin="1,0,1,0"  
            Background="{StaticResource HorizontalNormalBrush}"
            BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource ScrollBarPageButton}"
            Command="ScrollBar.PageDownCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton 
        Grid.Row="3" 
        Style="{StaticResource ScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineDownCommand"
        Content="M 0 0 L 4 4 L 8 0 Z"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
    <Grid >
      <Grid.ColumnDefinitions>
        <ColumnDefinition MaxWidth="18"/>
        <ColumnDefinition Width="0.00001*"/>
        <ColumnDefinition MaxWidth="18"/>
      </Grid.ColumnDefinitions>
      <Border
        Grid.ColumnSpan="3"
        CornerRadius="2" 
        Background="#F0F0F0" />
      <RepeatButton 
        Grid.Column="0"                           
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineLeftCommand"
        Content="M 4 0 L 4 8 L 0 4 Z" />
      <Track 
        Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource ScrollBarPageButton}"
            Command="ScrollBar.PageLeftCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb 
            Style="{StaticResource ScrollBarThumb}" 
            Margin="0,1,0,1"  
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource ScrollBarPageButton}"
            Command="ScrollBar.PageRightCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton 
        Grid.Column="3" 
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineRightCommand"
        Content="M 0 0 L 4 4 L 0 8 Z"/>
    </Grid>
  </ControlTemplate>

  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="18" />
        <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- SimpleStyles: Separator  -->
  
  <Style TargetType="{x:Type Separator}">
    <Setter Property="Height" Value="1" />
    <Setter Property="Margin" Value="0,2,0,2" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border BorderBrush="{StaticResource SolidBorderColor}" BorderThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: Slider -->
  
  <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Focusable" Value="false"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Height" Value="14"/>
    <Setter Property="Width" Value="14"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Ellipse 
            Name="Ellipse" 
            Fill="{StaticResource NormalBrush}"
            Stroke="{StaticResource NormalBorderBrush}"
            StrokeThickness="1" />
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DarkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <TickBar 
        Name="TopTick"
        SnapsToDevicePixels="True" 
        Placement="Top"
        Fill="{StaticResource GlyphBrush}"
        Height="4"
        Visibility="Collapsed" />
      <Border 
        Name="TrackBackground"
        Margin="0"
        CornerRadius="2" 
        Height="4"
        Grid.Row="1"
        Background="{StaticResource LightBrush}" 
        BorderBrush="{StaticResource NormalBorderBrush}"
        BorderThickness="1" />
      <Track Grid.Row="1" Name="PART_Track">
        <Track.DecreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource SliderButtonStyle}"
            Command="Slider.DecreaseLarge" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource SliderThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource SliderButtonStyle}"
            Command="Slider.IncreaseLarge" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar 
        Name="BottomTick"
        SnapsToDevicePixels="True" 
        Grid.Row="2"
        Fill="{TemplateBinding Foreground}"
        Placement="Bottom"
        Height="4"
        Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TickBar 
        Name="TopTick"
        SnapsToDevicePixels="True" 
        Placement="Left"
        Fill="{StaticResource GlyphBrush}"
        Width="4"
        Visibility="Collapsed" />
      <Border 
        Name="TrackBackground"
        Margin="0"
        CornerRadius="2" 
        Width="4"
        Grid.Column="1"
        Background="{StaticResource HorizontalLightBrush}" 
        BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
        BorderThickness="1" />
      <Track Grid.Column="1" Name="PART_Track">
        <Track.DecreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource SliderButtonStyle}"
            Command="Slider.DecreaseLarge" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb Style="{StaticResource SliderThumbStyle}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton 
            Style="{StaticResource SliderButtonStyle}"
            Command="Slider.IncreaseLarge" />
        </Track.IncreaseRepeatButton>
      </Track>
      <TickBar 
        Name="BottomTick"
        SnapsToDevicePixels="True" 
        Grid.Column="2"
        Fill="{TemplateBinding Foreground}"
        Placement="Right"
        Width="4"
        Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TickPlacement" Value="TopLeft">
        <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="TickPlacement" Value="BottomRight">
        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
      </Trigger>
      <Trigger Property="TickPlacement" Value="Both">
        <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
        <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type Slider}">
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="MinWidth" Value="104" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
      </Trigger>
      <Trigger Property="Orientation" Value="Vertical">
        <Setter Property="MinWidth" Value="21" />
        <Setter Property="MinHeight" Value="104" />
        <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- SimpleStyles: TabControl -->
  
  <Style  TargetType="{x:Type TabControl}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel 
              Name="HeaderPanel"
              Grid.Row="0"
              Panel.ZIndex="1" 
              Margin="0,0,4,-1" 
              IsItemsHost="True"
              KeyboardNavigation.TabIndex="1"
              Background="Transparent" />
            <Border 
              Name="Border" 
              Grid.Row="1" 
              Background="{StaticResource WindowBackgroundBrush}" 
              BorderBrush="{StaticResource SolidBorderBrush}" 
              BorderThickness="1" 
              CornerRadius="2" 
              KeyboardNavigation.TabNavigation="Local"
              KeyboardNavigation.DirectionalNavigation="Contained"
              KeyboardNavigation.TabIndex="2" >
              <ContentPresenter 
                Name="PART_SelectedContentHost"
                Margin="4"
                ContentSource="SelectedContent" />
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- SimpleStyles: TabItem -->
  
  <Style TargetType="{x:Type TabItem}">
    <!-- Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/ -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid>
          <Border 
            Name="Border"
            Margin="0,0,-4,0" 
            Background="{StaticResource LightBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}" 
            BorderThickness="1,1,1,1" 
            CornerRadius="2,12,0,0" >
            <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="12,2,12,2"
              RecognizesAccessKey="True"/>
          </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Panel.ZIndex" Value="100" />
              <Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: TextBox -->

  <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="MinWidth" Value="120"/>
    <Setter Property="MinHeight" Value="20"/>
    <Setter Property="AllowDrop" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border 
            Name="Border"
            CornerRadius="2" 
            Padding="2"
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
              <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: ToolTip -->
  
  <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="HasDropShadow" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <Border Name="Border"
            Background="{StaticResource LightBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}">
            <ContentPresenter
              Margin="4" 
              HorizontalAlignment="Left"
              VerticalAlignment="Top" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="true">
              <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
              <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: TreeView -->

  <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border 
            Name="Border" 
            CornerRadius="1" 
            Background="{StaticResource WindowBackgroundBrush}"
            BorderBrush="{StaticResource SolidBorderBrush}"
            BorderThickness="1" >
            <ScrollViewer 
              Focusable="False"
              CanContentScroll="False"
              Padding="4">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SimpleStyles: TreeViewItem -->

  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid
            Width="15"
            Height="13"
            Background="Transparent">
            <Path x:Name="ExpandPath"
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="1,1,1,1"
              Fill="{StaticResource GlyphBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                 Value="True">
              <Setter Property="Data"
                  TargetName="ExpandPath"
                  Value="M 0 4 L 8 4 L 4 8 Z"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TreeViewItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton 
              x:Name="Expander"
              Style="{StaticResource ExpandCollapseToggleStyle}"
              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press"/>
            <Border 
              Name="Border" 
              Grid.Column="1" 
              Padding="1">
              <ContentPresenter 
                x:Name="PART_Header"
                ContentSource="Header"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </Border>
            <ItemsPresenter 
              x:Name="ItemsHost"
              Grid.Row="1"
              Grid.Column="1"
              Grid.ColumnSpan="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
]]></Snippet>
  </Category>
  <Category Name="Brushes">
    <Snippet Name="Simple Horizontal Gradient" Shortcut="horiz"><![CDATA[<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
  <GradientStop Color="OrangeRed" Offset="0" />
  <GradientStop Color="Brown" Offset="1" />
</LinearGradientBrush>]]></Snippet>
    <Snippet Name="Simple Vertical Gradient" Shortcut="vert"><![CDATA[<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
  <GradientStop Color="OrangeRed" Offset="0" />
  <GradientStop Color="Brown" Offset="1" />
</LinearGradientBrush>]]></Snippet>
    <Snippet Name="Shiny VerticalGradient" Shortcut="vert shiny"><![CDATA[<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
	<GradientStop Color="#FF343434" Offset="1"/>
	<GradientStop Color="#FF858585" Offset="0.5"/>
	<GradientStop Color="#FF6D6D6D" Offset="0.5"/>
	<GradientStop Color="#FFDBDBDB" Offset="0"/>
</LinearGradientBrush>
]]></Snippet>
    <Snippet Name="Simple RadiaGradient" Shortcut="radial"><![CDATA[<RadialGradientBrush>
  <GradientStop Color="OrangeRed" Offset="0"/>
  <GradientStop Color="Brown" Offset="1"/>
</RadialGradientBrush>
]]></Snippet>
    <Snippet Name="RadialGradient with Offset Origin" Shortcut="radial offset"><![CDATA[<RadialGradientBrush GradientOrigin="0.5,0">
  <GradientStop Color="OrangeRed" Offset="0"/>
  <GradientStop Color="Brown" Offset="1"/>
</RadialGradientBrush>]]></Snippet>
    <Snippet Name="RadialGradient with Transform" Shortcut="radial trans"><![CDATA[<RadialGradientBrush>
	<RadialGradientBrush.RelativeTransform>
		<TransformGroup>
			<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.15" ScaleY="1.15"/>
			<TranslateTransform X="-0.08" Y="-0.08"/>
		</TransformGroup>
	</RadialGradientBrush.RelativeTransform>
	<GradientStop Color="#FF000000" Offset="1"/>
	<GradientStop Color="#FFFFFFFF" Offset="0"/>
</RadialGradientBrush>]]></Snippet>
  </Category>
  <Category Name="Samples">
    <Snippet Name="3D Kaxaml Logo" Shortcut="3d logo"><![CDATA[<Viewport3D Width="400" Height="400"  VerticalAlignment="Center" HorizontalAlignment="Center">

  <Viewport3D.Camera>
    <PerspectiveCamera FarPlaneDistance="10" LookDirection="0,0,-1" UpDirection="0,1,0" NearPlaneDistance="2" Position="0.124657,-0.174384,2.75842" FieldOfView="39.5978" />
  </Viewport3D.Camera>

  <ModelVisual3D>
    <ModelVisual3D.Content>
      <Model3DGroup x:Name="Scene">
        <!-- Scene (XAML Path = ) -->
        <Model3DGroup.Transform>
          <Transform3DGroup>
            <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0"/>
            <ScaleTransform3D ScaleX="1" ScaleY="1" ScaleZ="1"/>
            <RotateTransform3D>
              <RotateTransform3D.Rotation>
                <AxisAngleRotation3D Angle="0" Axis="0 1 0"/>
              </RotateTransform3D.Rotation>
            </RotateTransform3D>
            <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0"/>
          </Transform3DGroup>
        </Model3DGroup.Transform>
        <AmbientLight Color="#333333" />
        <DirectionalLight Color="#FFFFFF" Direction="-0.905267,0.206955,-0.371027" />
        <DirectionalLight Color="#FFFFFF" Direction="-0.96684,-0.253947,0.0270275" />
        <DirectionalLight Color="#FFFFFF" Direction="-0.568225,0.185842,0.801613" />
        <DirectionalLight Color="#FFFFFF" Direction="0,0,-1" />
        <Model3DGroup x:Name="Group_of_2_ObjectsOR12">
          <!-- Group of 2 Objects (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5]) -->
          <Model3DGroup.Transform>
            <Transform3DGroup>
              <TranslateTransform3D OffsetX="-0.194132" OffsetY="0.157068" OffsetZ="-2.98023e-008"/>
              <ScaleTransform3D ScaleX="1" ScaleY="1" ScaleZ="1"/>
              <RotateTransform3D>
                <RotateTransform3D.Rotation>
                  <AxisAngleRotation3D Angle="14.25527793" Axis="0.9586304321 0.2826302375 0"/>
                </RotateTransform3D.Rotation>
              </RotateTransform3D>
              <TranslateTransform3D OffsetX="0.194132" OffsetY="-0.157068" OffsetZ="2.98023e-008"/>
            </Transform3DGroup>
          </Model3DGroup.Transform>
          <Model3DGroup x:Name="Group_of_2_ObjectsOR14">
            <!-- Group of 2 Objects (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5].(Model3DGroup.Children)[0]) -->
            <Model3DGroup.Transform>
              <Transform3DGroup>
                <TranslateTransform3D OffsetX="-0.194132" OffsetY="0.157068" OffsetZ="-2.98023e-008"/>
                <ScaleTransform3D ScaleX="1" ScaleY="1" ScaleZ="1"/>
                <RotateTransform3D>
                  <RotateTransform3D.Rotation>
                    <AxisAngleRotation3D Angle="0" Axis="0 1 0"/>
                  </RotateTransform3D.Rotation>
                </RotateTransform3D>
                <TranslateTransform3D OffsetX="0.194132" OffsetY="-0.157068" OffsetZ="2.98023e-008"/>
              </Transform3DGroup>
            </Model3DGroup.Transform>
            <Model3DGroup x:Name="Group_of_2_ObjectsOR16">
              <!-- Group of 2 Objects (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0]) -->
              <Model3DGroup.Transform>
                <Transform3DGroup>
                  <TranslateTransform3D OffsetX="-0.194132" OffsetY="0.157068" OffsetZ="-2.98023e-008"/>
                  <ScaleTransform3D ScaleX="1" ScaleY="1" ScaleZ="1"/>
                  <RotateTransform3D>
                    <RotateTransform3D.Rotation>
                      <AxisAngleRotation3D Angle="0" Axis="0 1 0"/>
                    </RotateTransform3D.Rotation>
                  </RotateTransform3D>
                  <TranslateTransform3D OffsetX="0.194132" OffsetY="-0.157068" OffsetZ="2.98023e-008"/>
                </Transform3DGroup>
              </Model3DGroup.Transform>
              <Model3DGroup x:Name="Text04OR18">
                <!-- Text04 (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0]) -->
                <Model3DGroup.Transform>
                  <Transform3DGroup>
                    <TranslateTransform3D OffsetX="-0.00805664" OffsetY="0" OffsetZ="0"/>
                    <ScaleTransform3D ScaleX="0.8" ScaleY="0.8" ScaleZ="0.8"/>
                    <RotateTransform3D>
                      <RotateTransform3D.Rotation>
                        <AxisAngleRotation3D Angle="39.90768975" Axis="0 1 0"/>
                      </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                    <TranslateTransform3D OffsetX="0.0589366" OffsetY="-0.156717" OffsetZ="0.10852"/>
                  </Transform3DGroup>
                </Model3DGroup.Transform>
                <Model3DGroup x:Name="Character04OR20">
                  <!-- Character04 (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0]) -->
                  <Model3DGroup.Transform>
                    <Transform3DGroup>
                      <TranslateTransform3D OffsetX="-0.310059" OffsetY="-0.350098" OffsetZ="0"/>
                      <ScaleTransform3D ScaleX="1" ScaleY="1" ScaleZ="1"/>
                      <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                          <AxisAngleRotation3D Angle="0" Axis="0 1 0"/>
                        </RotateTransform3D.Rotation>
                      </RotateTransform3D>
                      <TranslateTransform3D OffsetX="0.0324707" OffsetY="0" OffsetZ="0"/>
                    </Transform3DGroup>
                  </Model3DGroup.Transform>
                  <GeometryModel3D x:Name="Character04OR20GR21">
                    <GeometryModel3D.Material>
                      <MaterialGroup>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <SolidColorBrush Color="#F47A00" Opacity="1.000000"/>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                        <SpecularMaterial SpecularPower="61.8667">
                          <SpecularMaterial.Brush>
                            <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                          </SpecularMaterial.Brush>
                        </SpecularMaterial>
                      </MaterialGroup>
                    </GeometryModel3D.Material>
                    <GeometryModel3D.BackMaterial>
                      <MaterialGroup>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <SolidColorBrush Color="#F47A00" Opacity="1.000000"/>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                        <SpecularMaterial SpecularPower="61.8667">
                          <SpecularMaterial.Brush>
                            <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                          </SpecularMaterial.Brush>
                        </SpecularMaterial>
                      </MaterialGroup>
                    </GeometryModel3D.BackMaterial>
                    <GeometryModel3D.Geometry>
                      <MeshGeometry3D
                        TriangleIndices="0,1,2 3,0,4 0,3,1 1,5,2 6,2,7 6,7,8 9,6,10 9,0,6 6,0,2 11,12,13 14,13,15 12,15,13 11,16,12 17,11,18 19,17,18 20,18,21 18,13,21 11,13,18 "
                        Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 "
                        Positions="0.221191,0.244141,0.1 0.0649414,0,0.1 0.223145,0.212891,0.1 0.0649414,0.700195,0.1 0.221191,0.700195,0.1 0.221191,0,0.1 0.384766,0.22998,0.1 0.370117,0,0.1 0.555176,0,0.1 0.362793,0.448242,0.1 0.545898,0.448242,0.1 0.223145,0.212891,-0.1 0.0649414,0,-0.1 0.221191,0.244141,-0.1 0.221191,0.700195,-0.1 0.0649414,0.700195,-0.1 0.221191,0,-0.1 0.370117,0,-0.1 0.384766,0.22998,-0.1 0.555176,0,-0.1 0.545898,0.448242,-0.1 0.362793,0.448242,-0.1 "
								/>
                    </GeometryModel3D.Geometry>
                  </GeometryModel3D>
                  <GeometryModel3D x:Name="Character04OR20GR23">
                    <GeometryModel3D.Material>
                      <MaterialGroup>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <SolidColorBrush Color="#F47A00" Opacity="1.000000"/>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                        <SpecularMaterial SpecularPower="61.8667">
                          <SpecularMaterial.Brush>
                            <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                          </SpecularMaterial.Brush>
                        </SpecularMaterial>
                      </MaterialGroup>
                    </GeometryModel3D.Material>
                    <GeometryModel3D.BackMaterial>
                      <MaterialGroup>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <SolidColorBrush Color="#F47A00" Opacity="1.000000"/>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                        <SpecularMaterial SpecularPower="61.8667">
                          <SpecularMaterial.Brush>
                            <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                          </SpecularMaterial.Brush>
                        </SpecularMaterial>
                      </MaterialGroup>
                    </GeometryModel3D.BackMaterial>
                    <GeometryModel3D.Geometry>
                      <MeshGeometry3D
                        TriangleIndices="0,1,2 2,3,0 4,5,6 6,7,4 8,9,10 10,11,8 12,13,14 14,15,12 16,17,18 18,19,16 20,21,22 22,23,20 24,25,26 26,27,24 28,29,30 30,31,28 32,33,34 34,35,32 36,37,38 38,39,36 40,41,42 42,43,40 "
                        Normals="0,-1,0 0,-1,0 0,-1,0 0,-1,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 0.999958,-0.00917393,0 0.999958,-0.00917393,0 0.999958,-0.00917393,0 0.999958,-0.00917393,0 0,-1,0 0,-1,0 0,-1,0 0,-1,0 -1,0,0 -1,0,0 -1,0,0 -1,0,0 0,1,0 0,1,0 0,1,0 0,1,0 1,0,0 1,0,0 1,0,0 1,0,0 -0.821626,0.570027,0 -0.821626,0.570027,0 -0.821626,0.570027,0 -0.821626,0.570027,0 0,1,0 0,1,0 0,1,0 0,1,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.803466,0.59535,0 0.803466,0.59535,0 0.803466,0.59535,0 0.803466,0.59535,0 "
                        Positions="0.555176,0,-0.1 0.555176,0,0.1 0.370117,0,0.1 0.370117,0,-0.1 0.370117,0,-0.1 0.370117,0,0.1 0.223145,0.212891,0.1 0.223145,0.212891,-0.1 0.223145,0.212891,-0.1 0.223145,0.212891,0.1 0.221191,0,0.1 0.221191,0,-0.1 0.221191,0,-0.1 0.221191,0,0.1 0.0649414,0,0.1 0.0649414,0,-0.1 0.0649414,0,-0.1 0.0649414,0,0.1 0.0649414,0.700195,0.1 0.0649414,0.700195,-0.1 0.0649414,0.700195,-0.1 0.0649414,0.700195,0.1 0.221191,0.700195,0.1 0.221191,0.700195,-0.1 0.221191,0.700195,-0.1 0.221191,0.700195,0.1 0.221191,0.244141,0.1 0.221191,0.244141,-0.1 0.221191,0.244141,-0.1 0.221191,0.244141,0.1 0.362793,0.448242,0.1 0.362793,0.448242,-0.1 0.362793,0.448242,-0.1 0.362793,0.448242,0.1 0.545898,0.448242,0.1 0.545898,0.448242,-0.1 0.545898,0.448242,-0.1 0.545898,0.448242,0.1 0.384766,0.22998,0.1 0.384766,0.22998,-0.1 0.384766,0.22998,-0.1 0.384766,0.22998,0.1 0.555176,0,0.1 0.555176,0,-0.1 "
								/>
                    </GeometryModel3D.Geometry>
                  </GeometryModel3D>
                </Model3DGroup>
              </Model3DGroup>
              <Model3DGroup x:Name="Extrusion01OR28">
                <!-- Extrusion01 (XAML Path = (Viewport3D.Children)[0].(ModelVisual3D.Content).(Model3DGroup.Children)[5].(Model3DGroup.Children)[0].(Model3DGroup.Children)[0].(Model3DGroup.Children)[1]) -->
                <Model3DGroup.Transform>
                  <Transform3DGroup>
                    <TranslateTransform3D OffsetX="-0.00805664" OffsetY="0" OffsetZ="0"/>
                    <ScaleTransform3D ScaleX="0.8" ScaleY="0.8" ScaleZ="0.8"/>
                    <RotateTransform3D>
                      <RotateTransform3D.Rotation>
                        <AxisAngleRotation3D Angle="219.9076898" Axis="0 1 0"/>
                      </RotateTransform3D.Rotation>
                    </RotateTransform3D>
                    <TranslateTransform3D OffsetX="0.425211" OffsetY="-0.15742" OffsetZ="-0.188714"/>
                  </Transform3DGroup>
                </Model3DGroup.Transform>
                <GeometryModel3D x:Name="Extrusion01OR28GR29">
                  <GeometryModel3D.Material>
                    <MaterialGroup>
                      <DiffuseMaterial>
                        <DiffuseMaterial.Brush>
                          <SolidColorBrush Color="#666666" Opacity="1.000000"/>
                        </DiffuseMaterial.Brush>
                      </DiffuseMaterial>
                      <SpecularMaterial SpecularPower="66.56">
                        <SpecularMaterial.Brush>
                          <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                        </SpecularMaterial.Brush>
                      </SpecularMaterial>
                    </MaterialGroup>
                  </GeometryModel3D.Material>
                  <GeometryModel3D.BackMaterial>
                    <MaterialGroup>
                      <DiffuseMaterial>
                        <DiffuseMaterial.Brush>
                          <SolidColorBrush Color="#666666" Opacity="1.000000"/>
                        </DiffuseMaterial.Brush>
                      </DiffuseMaterial>
                      <SpecularMaterial SpecularPower="66.56">
                        <SpecularMaterial.Brush>
                          <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                        </SpecularMaterial.Brush>
                      </SpecularMaterial>
                    </MaterialGroup>
                  </GeometryModel3D.BackMaterial>
                  <GeometryModel3D.Geometry>
                    <MeshGeometry3D
                      TriangleIndices="0,1,2 2,1,3 4,5,2 2,6,0 4,2,3 7,8,9 10,8,7 7,11,12 9,13,7 10,7,12 "
                      Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 0,0,-1 "
                      Positions="0.0852051,0.0981445,0.1 -0.0563965,-0.105957,0.1 0.107178,-0.120117,0.1 -0.0544434,-0.137207,0.1 0.0925293,-0.350098,0.1 0.277588,-0.350098,0.1 0.268311,0.0981445,0.1 0.107178,-0.120117,-0.1 -0.0563965,-0.105957,-0.1 0.0852051,0.0981445,-0.1 -0.0544434,-0.137207,-0.1 0.277588,-0.350098,-0.1 0.0925293,-0.350098,-0.1 0.268311,0.0981445,-0.1 "
							/>
                  </GeometryModel3D.Geometry>
                </GeometryModel3D>
                <GeometryModel3D x:Name="Extrusion01OR28GR31">
                  <GeometryModel3D.Material>
                    <MaterialGroup>
                      <DiffuseMaterial>
                        <DiffuseMaterial.Brush>
                          <SolidColorBrush Color="#666666" Opacity="1.000000"/>
                        </DiffuseMaterial.Brush>
                      </DiffuseMaterial>
                      <SpecularMaterial SpecularPower="66.56">
                        <SpecularMaterial.Brush>
                          <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                        </SpecularMaterial.Brush>
                      </SpecularMaterial>
                    </MaterialGroup>
                  </GeometryModel3D.Material>
                  <GeometryModel3D.BackMaterial>
                    <MaterialGroup>
                      <DiffuseMaterial>
                        <DiffuseMaterial.Brush>
                          <SolidColorBrush Color="#666666" Opacity="1.000000"/>
                        </DiffuseMaterial.Brush>
                      </DiffuseMaterial>
                      <SpecularMaterial SpecularPower="66.56">
                        <SpecularMaterial.Brush>
                          <SolidColorBrush Color="#FFFFFF" Opacity="1.000000"/>
                        </SpecularMaterial.Brush>
                      </SpecularMaterial>
                    </MaterialGroup>
                  </GeometryModel3D.BackMaterial>
                  <GeometryModel3D.Geometry>
                    <MeshGeometry3D
                      TriangleIndices="0,1,2 2,3,0 4,5,6 6,7,4 8,9,10 10,11,8 12,13,14 14,15,12 16,17,18 18,19,16 20,21,22 22,23,20 24,25,26 26,27,24 "
                      Normals="0,-1,0 0,-1,0 0,-1,0 0,-1,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 -0.822939,-0.56813,0 -0.998053,-0.0623783,0 -0.998053,-0.0623783,0 -0.998053,-0.0623783,0 -0.998053,-0.0623783,0 -0.821626,0.570027,0 -0.821626,0.570027,0 -0.821626,0.570027,0 -0.821626,0.570027,0 0,1,0 0,1,0 0,1,0 0,1,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.804513,-0.593935,0 0.803466,0.59535,0 0.803466,0.59535,0 0.803466,0.59535,0 0.803466,0.59535,0 "
                      Positions="0.277588,-0.350098,-0.1 0.277588,-0.350098,0.1 0.0925293,-0.350098,0.1 0.0925293,-0.350098,-0.1 0.0925293,-0.350098,-0.1 0.0925293,-0.350098,0.1 -0.0544434,-0.137207,0.1 -0.0544434,-0.137207,-0.1 -0.0544434,-0.137207,-0.1 -0.0544434,-0.137207,0.1 -0.0563965,-0.105957,0.1 -0.0563965,-0.105957,-0.1 -0.0563965,-0.105957,-0.1 -0.0563965,-0.105957,0.1 0.0852051,0.0981445,0.1 0.0852051,0.0981445,-0.1 0.0852051,0.0981445,-0.1 0.0852051,0.0981445,0.1 0.268311,0.0981445,0.1 0.268311,0.0981445,-0.1 0.268311,0.0981445,-0.1 0.268311,0.0981445,0.1 0.107178,-0.120117,0.1 0.107178,-0.120117,-0.1 0.107178,-0.120117,-0.1 0.107178,-0.120117,0.1 0.277588,-0.350098,0.1 0.277588,-0.350098,-0.1 " />
                  </GeometryModel3D.Geometry>
                </GeometryModel3D>
              </Model3DGroup>
            </Model3DGroup>
          </Model3DGroup>
        </Model3DGroup>
      </Model3DGroup>
    </ModelVisual3D.Content>
  </ModelVisual3D>
</Viewport3D>
]]></Snippet>
  </Category>
</Snippets>