<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	elementFormDefault="qualified" 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	>
	<!-- Avalon relies on several XAML language features, so this schema must import the XAML schema -->
	<xs:import namespace="http://schemas.microsoft.com/winfx/2006/xaml" schemaLocation="xaml2006.xsd"/>

<!-- 
This schema has been autogenerated using:
    1) The set of rules of how CLR types can be used in XAML
    2) The set of Assemblies who have an XmlnsDefinitionAttribute for http://schemas.microsoft.com/winfx/2006/xaml/presentation
http://schemas.microsoft.com/winfx/2006/xaml/presentation is defined by the typesThese are the assemblies and clr namespaces that contribute types to this namespace:
	Assembly: PresentationCore, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
		System.Windows.Media.Animation
		System.Windows.Media.Effects
		System.Windows.Media.Media3D
		System.Windows
		System.Windows.Media
		System.Windows.Media.TextFormatting
		System.Windows.Input
		System.Windows.Automation
		System.Windows.Media.Imaging
		System.Windows.Ink
		System.Windows.Documents
	Assembly: PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
		System.Windows.Input
		System.Windows.Media.Animation
		System.Windows.Controls.Primitives
		System.Windows
		System.Windows.Data
		System.Windows.Navigation
		System.Windows.Shapes
		System.Windows.Documents
		System.Windows.Controls
	Assembly: WindowsBase, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
		System.Windows.Media
		System.Windows.Input
		System.Windows
		System.Windows.Threading
		System.Windows.Markup
		System.Collections.ObjectModel
		System.Windows.Data
		System.ComponentModel
-->

<!-- Element Section #1 -->

	<xs:element name="sgIAnimatable" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAnimatable" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAnimationClock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAnimationException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTimeline" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAnimationTimeline" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClockController" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClockGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClockState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDoubleAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDoubleAnimationUsingPath" type="xs:anyType" abstract="true"/>
	<xs:element name="DoubleAnimationUsingPath" type="dDoubleAnimationUsingPath" substitutionGroup="sgDoubleAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Double property between two or more target values using a PathGeometry to specify those values. This animation can be used to move a visual object along a path. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTimeSeekOrigin" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFillBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBooleanAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIKeyFrameAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBooleanAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="BooleanAnimationUsingKeyFrames" type="dBooleanAnimationUsingKeyFrames" substitutionGroup="sgBooleanAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a property that takes a Boolean along a set of KeyFrames over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBooleanKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="BooleanKeyFrameCollection" type="dBooleanKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of BooleanKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgByteAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgByteAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="ByteAnimation" type="dByteAnimation" substitutionGroup="sgByteAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Byte property between two target values using linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgByteAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="ByteAnimationUsingKeyFrames" type="dByteAnimationUsingKeyFrames" substitutionGroup="sgByteAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Byte property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgByteKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="ByteKeyFrameCollection" type="dByteKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of ByteKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCharAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCharAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="CharAnimationUsingKeyFrames" type="dCharAnimationUsingKeyFrames" substitutionGroup="sgCharAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Char property along a set of KeyFrames over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCharKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="CharKeyFrameCollection" type="dCharKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of CharKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColorAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="ColorAnimation" type="dColorAnimation" substitutionGroup="sgColorAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Color property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="ColorAnimationUsingKeyFrames" type="dColorAnimationUsingKeyFrames" substitutionGroup="sgColorAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Color property along a set of KeyFrames over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="ColorKeyFrameCollection" type="dColorKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of ColorKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDecimalAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDecimalAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="DecimalAnimation" type="dDecimalAnimation" substitutionGroup="sgDecimalAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Decimal property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDecimalAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="DecimalAnimationUsingKeyFrames" type="dDecimalAnimationUsingKeyFrames" substitutionGroup="sgDecimalAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Decimal property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDecimalKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="DecimalKeyFrameCollection" type="dDecimalKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of DecimalKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBooleanKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteBooleanKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteBooleanKeyFrame" type="dDiscreteBooleanKeyFrame" substitutionGroup="sgBooleanKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Boolean value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgByteKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteByteKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteByteKeyFrame" type="dDiscreteByteKeyFrame" substitutionGroup="sgByteKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Byte value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCharKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteCharKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteCharKeyFrame" type="dDiscreteCharKeyFrame" substitutionGroup="sgCharKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Char value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteColorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteColorKeyFrame" type="dDiscreteColorKeyFrame" substitutionGroup="sgColorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Color value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDecimalKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteDecimalKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteDecimalKeyFrame" type="dDiscreteDecimalKeyFrame" substitutionGroup="sgDecimalKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Decimal value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDoubleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteDoubleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteDoubleKeyFrame" type="dDiscreteDoubleKeyFrame" substitutionGroup="sgDoubleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Double value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt16KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteInt16KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteInt16KeyFrame" type="dDiscreteInt16KeyFrame" substitutionGroup="sgInt16KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int16 value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteInt32KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteInt32KeyFrame" type="dDiscreteInt32KeyFrame" substitutionGroup="sgInt32KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int32 value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt64KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteInt64KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteInt64KeyFrame" type="dDiscreteInt64KeyFrame" substitutionGroup="sgInt64KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int64 value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteMatrixKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteMatrixKeyFrame" type="dDiscreteMatrixKeyFrame" substitutionGroup="sgMatrixKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Matrix value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgObjectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteObjectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteObjectKeyFrame" type="dDiscreteObjectKeyFrame" substitutionGroup="sgObjectKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Object value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscretePointKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscretePointKeyFrame" type="dDiscretePointKeyFrame" substitutionGroup="sgPointKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscretePoint3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscretePoint3DKeyFrame" type="dDiscretePoint3DKeyFrame" substitutionGroup="sgPoint3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point3D value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternionKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteQuaternionKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteQuaternionKeyFrame" type="dDiscreteQuaternionKeyFrame" substitutionGroup="sgQuaternionKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Quaternion value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotation3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteRotation3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteRotation3DKeyFrame" type="dDiscreteRotation3DKeyFrame" substitutionGroup="sgRotation3DKeyFrame">
		<xs:annotation>
			<xs:documentation> Animates from the Rotation3D value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteRectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteRectKeyFrame" type="dDiscreteRectKeyFrame" substitutionGroup="sgRectKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Rect value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSingleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteSingleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteSingleKeyFrame" type="dDiscreteSingleKeyFrame" substitutionGroup="sgSingleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Single value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSizeKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteSizeKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteSizeKeyFrame" type="dDiscreteSizeKeyFrame" substitutionGroup="sgSizeKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Size value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStringKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteStringKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteStringKeyFrame" type="dDiscreteStringKeyFrame" substitutionGroup="sgStringKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the String value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteVectorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteVectorKeyFrame" type="dDiscreteVectorKeyFrame" substitutionGroup="sgVectorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteVector3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteVector3DKeyFrame" type="dDiscreteVector3DKeyFrame" substitutionGroup="sgVector3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector3D value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDoubleAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="DoubleAnimation" type="dDoubleAnimation" substitutionGroup="sgDoubleAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Double property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDoubleAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="DoubleAnimationUsingKeyFrames" type="dDoubleAnimationUsingKeyFrames" substitutionGroup="sgDoubleAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Double property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDoubleKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="DoubleKeyFrameCollection" type="dDoubleKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of DoubleKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt16AnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInt16Animation" type="xs:anyType" abstract="true"/>
	<xs:element name="Int16Animation" type="dInt16Animation" substitutionGroup="sgInt16AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Int16 property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt16AnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Int16AnimationUsingKeyFrames" type="dInt16AnimationUsingKeyFrames" substitutionGroup="sgInt16AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Int16 property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt16KeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Int16KeyFrameCollection" type="dInt16KeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Int16KeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32AnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInt32Animation" type="xs:anyType" abstract="true"/>
	<xs:element name="Int32Animation" type="dInt32Animation" substitutionGroup="sgInt32AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of an  Int32 property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32AnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Int32AnimationUsingKeyFrames" type="dInt32AnimationUsingKeyFrames" substitutionGroup="sgInt32AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Int32 property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32KeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Int32KeyFrameCollection" type="dInt32KeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Int32KeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt64AnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInt64Animation" type="xs:anyType" abstract="true"/>
	<xs:element name="Int64Animation" type="dInt64Animation" substitutionGroup="sgInt64AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Int64 property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt64AnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Int64AnimationUsingKeyFrames" type="dInt64AnimationUsingKeyFrames" substitutionGroup="sgInt64AnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Int64 property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt64KeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Int64KeyFrameCollection" type="dInt64KeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Int64KeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearByteKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearByteKeyFrame" type="dLinearByteKeyFrame" substitutionGroup="sgByteKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Byte value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearColorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearColorKeyFrame" type="dLinearColorKeyFrame" substitutionGroup="sgColorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Color value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearDecimalKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearDecimalKeyFrame" type="dLinearDecimalKeyFrame" substitutionGroup="sgDecimalKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Decimal value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearDoubleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearDoubleKeyFrame" type="dLinearDoubleKeyFrame" substitutionGroup="sgDoubleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Double value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearInt16KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearInt16KeyFrame" type="dLinearInt16KeyFrame" substitutionGroup="sgInt16KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int16 value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearInt32KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearInt32KeyFrame" type="dLinearInt32KeyFrame" substitutionGroup="sgInt32KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int32 value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearInt64KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearInt64KeyFrame" type="dLinearInt64KeyFrame" substitutionGroup="sgInt64KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int64 value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearPointKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearPointKeyFrame" type="dLinearPointKeyFrame" substitutionGroup="sgPointKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearPoint3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearPoint3DKeyFrame" type="dLinearPoint3DKeyFrame" substitutionGroup="sgPoint3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point3D value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearQuaternionKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearQuaternionKeyFrame" type="dLinearQuaternionKeyFrame" substitutionGroup="sgQuaternionKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Quaternion value of the previous key frame to its own Value using linear interpolation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearRotation3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearRotation3DKeyFrame" type="dLinearRotation3DKeyFrame" substitutionGroup="sgRotation3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Rotation3D value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearRectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearRectKeyFrame" type="dLinearRectKeyFrame" substitutionGroup="sgRectKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Rect value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearSingleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearSingleKeyFrame" type="dLinearSingleKeyFrame" substitutionGroup="sgSingleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Single value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearSizeKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearSizeKeyFrame" type="dLinearSizeKeyFrame" substitutionGroup="sgSizeKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Size value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearVectorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearVectorKeyFrame" type="dLinearVectorKeyFrame" substitutionGroup="sgVectorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearVector3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearVector3DKeyFrame" type="dLinearVector3DKeyFrame" substitutionGroup="sgVector3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector3D value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMatrixAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixAnimationUsingKeyFrames" type="dMatrixAnimationUsingKeyFrames" substitutionGroup="sgMatrixAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Matrix property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixKeyFrameCollection" type="dMatrixKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of MatrixKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgObjectAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgObjectAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="ObjectAnimationUsingKeyFrames" type="dObjectAnimationUsingKeyFrames" substitutionGroup="sgObjectAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of an Object property along a set of KeyFrames over a specified Duration.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgObjectKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="ObjectKeyFrameCollection" type="dObjectKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of ObjectKeyFrame objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTimelineGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="sgParallelTimeline" type="xs:anyType" abstract="true"/>
	<xs:element name="ParallelTimeline" type="dParallelTimeline" substitutionGroup="sgTimelineGroup">
		<xs:annotation>
			<xs:documentation>Defines a segment of time that may contain child Timeline objects. These child timelines become active according to their respective BeginTime properties. Also, child timelines are able to overlap (run in parallel) with each other.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPoint3DAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="Point3DAnimation" type="dPoint3DAnimation" substitutionGroup="sgPoint3DAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Point3D property using linear interpolation between two values. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Point3DAnimationUsingKeyFrames" type="dPoint3DAnimationUsingKeyFrames" substitutionGroup="sgPoint3DAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Point3D property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Point3DKeyFrameCollection" type="dPoint3DKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Point3DKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="PointAnimation" type="dPointAnimation" substitutionGroup="sgPointAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Point property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="PointAnimationUsingKeyFrames" type="dPointAnimationUsingKeyFrames" substitutionGroup="sgPointAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Point property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="PointKeyFrameCollection" type="dPointKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of PointKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternionAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQuaternionAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="QuaternionAnimation" type="dQuaternionAnimation" substitutionGroup="sgQuaternionAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Quaternion property between two target values using    linear interpolation over a specified Duration.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternionAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="QuaternionAnimationUsingKeyFrames" type="dQuaternionAnimationUsingKeyFrames" substitutionGroup="sgQuaternionAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Quaternion property along a set of KeyFrames over a specified Duration.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternionKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="QuaternionKeyFrameCollection" type="dQuaternionKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of QuaternionKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRectAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="RectAnimation" type="dRectAnimation" substitutionGroup="sgRectAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Rect property between two target values using      linear interpolation. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="RectAnimationUsingKeyFrames" type="dRectAnimationUsingKeyFrames" substitutionGroup="sgRectAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a property that takes a Rect along a set of key frames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="RectKeyFrameCollection" type="dRectKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of RectKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotation3DAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRotation3DAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="Rotation3DAnimation" type="dRotation3DAnimation" substitutionGroup="sgRotation3DAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Rotation3D property using linear interpolation between two values determined by the combination of From, To, or By properties that are set for the animation. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotation3DAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Rotation3DAnimationUsingKeyFrames" type="dRotation3DAnimationUsingKeyFrames" substitutionGroup="sgRotation3DAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Rotation3D property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotation3DKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Rotation3DKeyFrameCollection" type="dRotation3DKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Rotation3DKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSingleAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSingleAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="SingleAnimation" type="dSingleAnimation" substitutionGroup="sgSingleAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Single property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSingleAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="SingleAnimationUsingKeyFrames" type="dSingleAnimationUsingKeyFrames" substitutionGroup="sgSingleAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Single property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSingleKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="SingleKeyFrameCollection" type="dSingleKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of SingleKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSizeAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSizeAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="SizeAnimation" type="dSizeAnimation" substitutionGroup="sgSizeAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Size property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSizeAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="SizeAnimationUsingKeyFrames" type="dSizeAnimationUsingKeyFrames" substitutionGroup="sgSizeAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Size property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSizeKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="SizeKeyFrameCollection" type="dSizeKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of SizeKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineByteKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineByteKeyFrame" type="dSplineByteKeyFrame" substitutionGroup="sgByteKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Byte value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineColorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineColorKeyFrame" type="dSplineColorKeyFrame" substitutionGroup="sgColorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Color value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineDecimalKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineDecimalKeyFrame" type="dSplineDecimalKeyFrame" substitutionGroup="sgDecimalKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Decimal value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineDoubleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineDoubleKeyFrame" type="dSplineDoubleKeyFrame" substitutionGroup="sgDoubleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Double value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineInt16KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineInt16KeyFrame" type="dSplineInt16KeyFrame" substitutionGroup="sgInt16KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int16 value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineInt32KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineInt32KeyFrame" type="dSplineInt32KeyFrame" substitutionGroup="sgInt32KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int32 value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineInt64KeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineInt64KeyFrame" type="dSplineInt64KeyFrame" substitutionGroup="sgInt64KeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Int64 value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplinePointKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplinePointKeyFrame" type="dSplinePointKeyFrame" substitutionGroup="sgPointKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplinePoint3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplinePoint3DKeyFrame" type="dSplinePoint3DKeyFrame" substitutionGroup="sgPoint3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Point3D value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineQuaternionKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineQuaternionKeyFrame" type="dSplineQuaternionKeyFrame" substitutionGroup="sgQuaternionKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Quaternion value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineRotation3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineRotation3DKeyFrame" type="dSplineRotation3DKeyFrame" substitutionGroup="sgRotation3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Rotation3D value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineRectKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineRectKeyFrame" type="dSplineRectKeyFrame" substitutionGroup="sgRectKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Rect value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineSingleKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineSingleKeyFrame" type="dSplineSingleKeyFrame" substitutionGroup="sgSingleKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Single value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineSizeKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineSizeKeyFrame" type="dSplineSizeKeyFrame" substitutionGroup="sgSizeKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Size value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineVectorKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineVectorKeyFrame" type="dSplineVectorKeyFrame" substitutionGroup="sgVectorKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineVector3DKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineVector3DKeyFrame" type="dSplineVector3DKeyFrame" substitutionGroup="sgVector3DKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Vector3D value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStringAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStringAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="StringAnimationUsingKeyFrames" type="dStringAnimationUsingKeyFrames" substitutionGroup="sgStringAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a String property along a set of KeyFrames over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStringKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="StringKeyFrameCollection" type="dStringKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of StringKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTimelineCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="TimelineCollection" type="dTimelineCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Timeline objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVector3DAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector3DAnimation" type="dVector3DAnimation" substitutionGroup="sgVector3DAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Vector3D property using linear interpolation between two values. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector3DAnimationUsingKeyFrames" type="dVector3DAnimationUsingKeyFrames" substitutionGroup="sgVector3DAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Vector3D property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector3DKeyFrameCollection" type="dVector3DKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Vector3DKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVectorAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="VectorAnimation" type="dVectorAnimation" substitutionGroup="sgVectorAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Vector property between two target values using linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="VectorAnimationUsingKeyFrames" type="dVectorAnimationUsingKeyFrames" substitutionGroup="sgVectorAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Vector property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="VectorKeyFrameCollection" type="dVectorKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of VectorKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHandoffBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeySpline" type="xs:anyType" abstract="true"/>
	<xs:element name="KeySpline" type="dKeySpline" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>This class is used by a spline key frame to define animation progress. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeyTime" type="xs:anyType" abstract="true"/>
	<xs:element name="KeyTime" type="dKeyTime" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>During the relative course of an animation, a KeyTime instance specifies the precise timing when a particular key frame should take place. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeyTimeType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMatrixAnimationUsingPath" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixAnimationUsingPath" type="dMatrixAnimationUsingPath" substitutionGroup="sgMatrixAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Matrix property between two or more target values using a PathGeometry to specify those values. This animation can be used to move a visual object along a path. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPathAnimationSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointAnimationUsingPath" type="xs:anyType" abstract="true"/>
	<xs:element name="PointAnimationUsingPath" type="dPointAnimationUsingPath" substitutionGroup="sgPointAnimationBase">
		<xs:annotation>
			<xs:documentation>Animates the value of a Point property between two or more target values using a PathGeometry to specify those values. This animation can be used to move a visual object along a path.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRepeatBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="RepeatBehavior" type="dRepeatBehavior" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes how a Timeline repeats its simple duration.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRepeatBehaviorConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSlipBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClockCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapEffectGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapEffectGroup" type="dBitmapEffectGroup" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Represents a group of BitmapEffect objects that is used to apply multiple effects to a visible object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBitmapEffectInput" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapEffectInput" type="dBitmapEffectInput" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Applies the BitmapEffect given in the BitmapEffect property to a specified region of the visual object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBevelBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="BevelBitmapEffect" type="dBevelBitmapEffect" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Creates a bevel which raises the surface of the image according to a specified curve.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBlurBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="BlurBitmapEffect" type="dBlurBitmapEffect" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Simulates looking at an object through an out-of-focus lens.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDropShadowBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="DropShadowBitmapEffect" type="dDropShadowBitmapEffect" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Applies a shadow behind a visual object at a slight offset. The offset is determined by mimicking a casting shadow from an imaginary light source.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgEmbossBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="EmbossBitmapEffect" type="dEmbossBitmapEffect" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Creates a bump mapping of the visual object to give the impression of depth and texture from an artificial light source.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgOuterGlowBitmapEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="OuterGlowBitmapEffect" type="dOuterGlowBitmapEffect" substitutionGroup="sgBitmapEffect">
		<xs:annotation>
			<xs:documentation>Creates a halo of color around objects or areas of color.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBitmapEffectCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapEffectCollection" type="dBitmapEffectCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of BitmapEffect objects. This collection is used as part of a BitmapEffectGroup to apply multiple bitmap effects to visual content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKernelType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEdgeProfile" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAffineTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModel3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLight" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAmbientLight" type="xs:anyType" abstract="true"/>
	<xs:element name="AmbientLight" type="dAmbientLight" substitutionGroup="sgLight">
		<xs:annotation>
			<xs:documentation> Light object that applies light to objects uniformly, regardless of their shape. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotation3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAxisAngleRotation3D" type="xs:anyType" abstract="true"/>
	<xs:element name="AxisAngleRotation3D" type="dAxisAngleRotation3D" substitutionGroup="sgRotation3D">
		<xs:annotation>
			<xs:documentation>Represents a 3-D rotation of a specified angle about a specified axis.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCamera" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMaterial" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiffuseMaterial" type="xs:anyType" abstract="true"/>
	<xs:element name="DiffuseMaterial" type="dDiffuseMaterial" substitutionGroup="sgMaterial">
		<xs:annotation>
			<xs:documentation> Allows the application of a 2-D brush, like a SolidColorBrush or TileBrush, to a diffusely-lit 3-D model. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDirectionalLight" type="xs:anyType" abstract="true"/>
	<xs:element name="DirectionalLight" type="dDirectionalLight" substitutionGroup="sgLight">
		<xs:annotation>
			<xs:documentation>Light object that projects its effect along a direction specified by a Vector3D. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgEmissiveMaterial" type="xs:anyType" abstract="true"/>
	<xs:element name="EmissiveMaterial" type="dEmissiveMaterial" substitutionGroup="sgMaterial">
		<xs:annotation>
			<xs:documentation>Applies a Brush to a 3-D model so that it participates in lighting calculations as if the Material were emitting light equal to the color of the Brush. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGeometry3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometryModel3D" type="xs:anyType" abstract="true"/>
	<xs:element name="GeometryModel3D" type="dGeometryModel3D" substitutionGroup="sgModel3D">
		<xs:annotation>
			<xs:documentation>Creates a 3-D model comprised of a MeshGeometry3D and a Material. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHitTestParameters3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMaterialGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="MaterialGroup" type="dMaterialGroup" substitutionGroup="sgMaterial">
		<xs:annotation>
			<xs:documentation>Represents a Material that is a composite of the Materials in its collection.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrix3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Matrix3D" type="dMatrix3D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Represents a 4 x 4 matrix used for transformations in 3-D space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixCamera" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixCamera" type="dMatrixCamera" substitutionGroup="sgCamera">
		<xs:annotation>
			<xs:documentation>Camera which specifies the view and projection transforms as Matrix3D objects </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixTransform3D" type="dMatrixTransform3D" substitutionGroup="sgTransform3D">
		<xs:annotation>
			<xs:documentation> Creates a transformation specified by a Matrix3D, used to manipulate objects or coordinate systems in 3-D world space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMeshGeometry3D" type="xs:anyType" abstract="true"/>
	<xs:element name="MeshGeometry3D" type="dMeshGeometry3D" substitutionGroup="sgGeometry3D">
		<xs:annotation>
			<xs:documentation>Triangle primitive for building a 3-D shape. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgModel3DGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="Model3DGroup" type="dModel3DGroup" substitutionGroup="sgModel3D">
		<xs:annotation>
			<xs:documentation>Collection of 3-D models.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVisual3D" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModelVisual3D" type="xs:anyType" abstract="true"/>
	<xs:element name="ModelVisual3D" type="dModelVisual3D" substitutionGroup="sgVisual3D">
		<xs:annotation>
			<xs:documentation>Visual that contains 3-D models. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Point3D" type="dPoint3D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Defines an x-, y-, and z-coordinate in 3-D space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Point3DCollection" type="dPoint3DCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of Point3D objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector3DCollection" type="dVector3DCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation> Collection of Vector3D objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint4D" type="xs:anyType" abstract="true"/>
	<xs:element name="Point4D" type="dPoint4D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents an x-, y-, z-, and w-coordinate point in world space used in performing transformations with non-affine 3-D matrices. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointLightBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointLight" type="xs:anyType" abstract="true"/>
	<xs:element name="PointLight" type="dPointLight" substitutionGroup="sgPointLightBase">
		<xs:annotation>
			<xs:documentation>Represents a light source that has a specified position in space and projects its light in all directions.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgProjectionCamera" type="xs:anyType" abstract="true"/>
	<xs:element name="sgOrthographicCamera" type="xs:anyType" abstract="true"/>
	<xs:element name="OrthographicCamera" type="dOrthographicCamera" substitutionGroup="sgProjectionCamera">
		<xs:annotation>
			<xs:documentation> Represents an orthographic projection camera. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPerspectiveCamera" type="xs:anyType" abstract="true"/>
	<xs:element name="PerspectiveCamera" type="dPerspectiveCamera" substitutionGroup="sgProjectionCamera">
		<xs:annotation>
			<xs:documentation> Represents a perspective projection camera. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternion" type="xs:anyType" abstract="true"/>
	<xs:element name="Quaternion" type="dQuaternion" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Structure that represents a rotation in three dimensions. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuaternionRotation3D" type="xs:anyType" abstract="true"/>
	<xs:element name="QuaternionRotation3D" type="dQuaternionRotation3D" substitutionGroup="sgRotation3D">
		<xs:annotation>
			<xs:documentation>Represents a rotation transformation defined as a quaternion.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRayHitTestResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRayHitTestParameters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRayMeshGeometry3DHitTestResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRect3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Rect3D" type="dRect3D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents a 3-D rectangle: for example, a cube. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotateTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="RotateTransform3D" type="dRotateTransform3D" substitutionGroup="sgAffineTransform3D">
		<xs:annotation>
			<xs:documentation> Specifies a rotation transformation. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScaleTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="ScaleTransform3D" type="dScaleTransform3D" substitutionGroup="sgAffineTransform3D">
		<xs:annotation>
			<xs:documentation>Scales an object in the three-dimensional x-y-z plane, starting from a defined center point. Scale factors are defined in x-, y-, and z- directions from this center point. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSize3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Size3D" type="dSize3D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Data structure used to describe the size of a three-dimensional object. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSpecularMaterial" type="xs:anyType" abstract="true"/>
	<xs:element name="SpecularMaterial" type="dSpecularMaterial" substitutionGroup="sgMaterial">
		<xs:annotation>
			<xs:documentation> Allows a 2-D brush, like a SolidColorBrush or TileBrush, to be applied to a specularly-lit 3-D model.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSpotLight" type="xs:anyType" abstract="true"/>
	<xs:element name="SpotLight" type="dSpotLight" substitutionGroup="sgPointLightBase">
		<xs:annotation>
			<xs:documentation>Light object that projects its effect in a cone-shaped area along a specified direction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTransform3DGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="Transform3DGroup" type="dTransform3DGroup" substitutionGroup="sgTransform3D">
		<xs:annotation>
			<xs:documentation>Represents a transformation that is a composite of the Transform3D children in its Transform3DCollection. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTranslateTransform3D" type="xs:anyType" abstract="true"/>
	<xs:element name="TranslateTransform3D" type="dTranslateTransform3D" substitutionGroup="sgAffineTransform3D">
		<xs:annotation>
			<xs:documentation>Translates an object in the three-dimensional x-y-z plane. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector3D" type="dVector3D" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Represents a displacement in 3-D space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgViewport3DVisual" type="xs:anyType" abstract="true"/>
	<xs:element name="Viewport3DVisual" type="dViewport3DVisual" substitutionGroup="sgVisual">
		<xs:annotation>
			<xs:documentation>Renders the Visual3D children within the specified 2D viewport bounds.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVisual3DCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMaterialCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="MaterialCollection" type="dMaterialCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Collection of Material objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrix3DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModel3DCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Model3DCollection" type="dModel3DCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of Model3D objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPoint3DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPoint3DCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPoint4DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQuaternionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRect3DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSize3DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTransform3DCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="Transform3DCollection" type="dTransform3DCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of Transform3D objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector3DConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVector3DCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIDataObject" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAutoResizedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAutoResizedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClipboard" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIInputElement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContentElement" type="xs:anyType" abstract="true"/>
	<xs:element name="ContentElement" type="dContentElement" substitutionGroup="sgDependencyObject">
		<xs:annotation>
			<xs:documentation>Provides a WPF core-level base class for content elements. Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContentOperations" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCultureInfoIetfLanguageTagConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataFormats" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataFormat" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObject" type="xs:anyType" abstract="true"/>
	<xs:element name="DataObject" type="dDataObject" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides a basic implementation of the IDataObject interface, which defines a format-independent mechanism for transferring data.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRoutedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectCopyingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectCopyingEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectPastingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectPastingEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectSettingDataEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataObjectSettingDataEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragDrop" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragDropEffects" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDuration" type="xs:anyType" abstract="true"/>
	<xs:element name="Duration" type="dDuration" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents the duration of time that a Timeline is active.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDurationConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEventManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEventPrivateKey" type="xs:anyType" abstract="true"/>
	<xs:element name="EventPrivateKey" type="dEventPrivateKey" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides unique identification for events whose handlers are stored into an internal hashtable. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgEventRoute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="FontStyle" type="dFontStyle" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Defines a structure that represents the style of a font face as normal, italic, or oblique.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontStyleConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontStyles" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontStretch" type="xs:anyType" abstract="true"/>
	<xs:element name="FontStretch" type="dFontStretch" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes the degree to which a font has been stretched compared to a font&apos;s normal aspect ratio.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontStretchConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontStretches" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontWeight" type="xs:anyType" abstract="true"/>
	<xs:element name="FontWeight" type="dFontWeight" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Refers to the density of a typeface, in terms of the lightness or heaviness of the strokes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontWeightConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontWeights" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFreezableCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="FreezableCollection" type="dFreezableCollectionOfT" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of DependencyObject, Freezable, or Animatable objects. FreezableCollection is itself an Animatable type. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgUIElement" type="xs:anyType" abstract="true"/>
	<xs:element name="UIElement" type="dUIElement" substitutionGroup="sgVisual">
		<xs:annotation>
			<xs:documentation>UIElement is a base class for frameworks building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGiveFeedbackEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGiveFeedbackEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIContentHost" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragDropKeyStates" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLocalizabilityAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLocalizationCategory" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModifiability" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQueryContinueDragEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQueryContinueDragEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgReadability" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedEventHandlerInfo" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedEvent" type="xs:anyType" abstract="true"/>
	<xs:element name="RoutedEvent" type="dRoutedEvent" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents and identifies a routed event and declares its characteristics.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRoutingStrategy" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSizeChangedInfo" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSizeToContent" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextDataFormat" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextDecorations" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextDecoration" type="xs:anyType" abstract="true"/>
	<xs:element name="TextDecoration" type="dTextDecoration" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>A TextDecoration object is a visual ornamentation you can add to text. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextDecorationCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="TextDecorationCollection" type="dTextDecorationCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of TextDecoration instances.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextDecorationCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextDecorationLocation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextDecorationUnit" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPresentationSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUIPropertyMetadata" type="xs:anyType" abstract="true"/>
	<xs:element name="UIPropertyMetadata" type="dUIPropertyMetadata" substitutionGroup="sgPropertyMetadata">
		<xs:annotation>
			<xs:documentation> Provides property metadata for non-framework properties that do have rendering/user interface impact at the core level. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeySplineConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyTimeConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSourceChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSourceChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBaselineAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFlowDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLineBreakCondition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextMarkerStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextWrapping" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextTrimming" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontVariants" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontCapitals" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontFraction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontNumeralStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontNumeralAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontEastAsianWidths" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontEastAsianLanguage" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisibility" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisual" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContainerVisual" type="xs:anyType" abstract="true"/>
	<xs:element name="ContainerVisual" type="dContainerVisual" substitutionGroup="sgVisual">
		<xs:annotation>
			<xs:documentation>Manages a collection of Visual objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingVisual" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingVisual" type="dDrawingVisual" substitutionGroup="sgContainerVisual">
		<xs:annotation>
			<xs:documentation>DrawingVisual is a visual object that can be used to render vector graphics on the screen. The content is persisted by the system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStreamGeometryContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHostVisual" type="xs:anyType" abstract="true"/>
	<xs:element name="HostVisual" type="dHostVisual" substitutionGroup="sgContainerVisual">
		<xs:annotation>
			<xs:documentation>Represents a Visual object that can be connected anywhere to a parent visual tree.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCompositionTarget" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPathSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgArcSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="ArcSegment" type="dArcSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation> Represents an elliptical arc between two points. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBezierSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="BezierSegment" type="dBezierSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation>Represents a cubic Bezier curve drawn between two points. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="Brush" type="dBrush" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Defines objects used to paint graphical objects. Classes that derive from Brush describe how the area is painted.       </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBrushes" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColor" type="xs:anyType" abstract="true"/>
	<xs:element name="Color" type="dColor" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Describes a color in terms of alpha, red, green, and blue channels. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColorConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="Geometry" type="dGeometry" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Classes that derive from this abstract base class define geometric shapes. Geometry objects can be used for clipping, hit-testing, and rendering 2-D graphic data. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCombinedGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="CombinedGeometry" type="dCombinedGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Represents a 2-D geometric shape defined by the combination of two Geometry objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLanguageSpecificStringDictionary" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDashStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="DashStyle" type="dDashStyle" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Represents the sequence of dashes and gaps that will be applied by a Pen. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDashStyles" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCharacterMetrics" type="xs:anyType" abstract="true"/>
	<xs:element name="CharacterMetrics" type="dCharacterMetrics" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents the metrics used to lay out a character in a device font.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCharacterMetricsDictionary" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDrawing" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTileBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="TileBrush" type="dTileBrush" substitutionGroup="sgBrush">
		<xs:annotation>
			<xs:documentation>Describes a way to paint a region by using one or more tiles. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingBrush" type="dDrawingBrush" substitutionGroup="sgTileBrush">
		<xs:annotation>
			<xs:documentation>Paints an area with a Drawing, which can include shapes, text, video, images, or other drawings. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingCollection" type="dDrawingCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of Drawing objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingGroup" type="dDrawingGroup" substitutionGroup="sgDrawing">
		<xs:annotation>
			<xs:documentation>Represents a collection of drawings that can be operated upon as a single drawing. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgImageSource" type="xs:anyType" abstract="true"/>
	<xs:element name="ImageSource" type="dImageSource" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a object type that has a width, height, and ImageMetadata such as a  BitmapSource and a DrawingImage. This is an abstract class.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDrawingImage" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingImage" type="dDrawingImage" substitutionGroup="sgImageSource">
		<xs:annotation>
			<xs:documentation> An ImageSource that uses a Drawing for content. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGeneralTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEllipseGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="EllipseGeometry" type="dEllipseGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Represents the geometry of a circle or ellipse. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontFamilyMap" type="xs:anyType" abstract="true"/>
	<xs:element name="FontFamilyMap" type="dFontFamilyMap" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Defines which FontFamily to use for a specified set of Unicode code points and a culture-specific language.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontFamilyMapCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFamilyTypeface" type="xs:anyType" abstract="true"/>
	<xs:element name="FamilyTypeface" type="dFamilyTypeface" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Specifies the details of a single typeface supported by a FontFamily.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFamilyTypefaceCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontEmbeddingManager" type="xs:anyType" abstract="true"/>
	<xs:element name="FontEmbeddingManager" type="dFontEmbeddingManager" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides functionality for physical and composite font embedding.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontEmbeddingRight" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontFamily" type="xs:anyType" abstract="true"/>
	<xs:element name="FontFamily" type="dFontFamily" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a family of related fonts.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFontFamilyConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontFamilyValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="FontFamilyValueSerializer" type="dFontFamilyValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of FontFamily.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFonts" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFormattedText" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeneralTransformGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="GeneralTransformGroup" type="dGeneralTransformGroup" substitutionGroup="sgGeneralTransform">
		<xs:annotation>
			<xs:documentation>Represents a GeneralTransform that is a composite of the transforms in its GeneralTransformCollection.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgAlignmentX" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAlignmentY" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBrushConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBrushMappingMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCachingHint" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColorInterpolationMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometryCombineMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDoubleCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="DoubleCollection" type="dDoubleCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation> Represents an ordered collection of Double objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDoubleCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEdgeMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapScalingMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFillRule" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeneralTransformCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="GeneralTransformCollection" type="dGeneralTransformCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of GeneralTransform objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGeometryCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="GeometryCollection" type="dGeometryCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Represents a collection of Geometry objects. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGeometryConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometryDrawing" type="xs:anyType" abstract="true"/>
	<xs:element name="GeometryDrawing" type="dGeometryDrawing" substitutionGroup="sgDrawing">
		<xs:annotation>
			<xs:documentation>Draws a Geometry using the specified Brush and Pen.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGeometryGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="GeometryGroup" type="dGeometryGroup" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Represents a composite geometry, composed of other Geometry objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGlyphRunDrawing" type="xs:anyType" abstract="true"/>
	<xs:element name="GlyphRunDrawing" type="dGlyphRunDrawing" substitutionGroup="sgDrawing">
		<xs:annotation>
			<xs:documentation>Represents a Drawing object that renders a GlyphRun. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGradientBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="GradientBrush" type="dGradientBrush" substitutionGroup="sgBrush">
		<xs:annotation>
			<xs:documentation> An abstract class that describes a gradient, composed of gradient stops. Classes that inherit from GradientBrush describe different ways of interpreting gradient stops. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGradientSpreadMethod" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGradientStop" type="xs:anyType" abstract="true"/>
	<xs:element name="GradientStop" type="dGradientStop" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Describes the location and color of a transition point in a gradient. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGradientStopCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="GradientStopCollection" type="dGradientStopCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of GradientStop objects that can be individually accessed by index. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgImageBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="ImageBrush" type="dImageBrush" substitutionGroup="sgTileBrush">
		<xs:annotation>
			<xs:documentation>Paints an area with an image. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgImageDrawing" type="xs:anyType" abstract="true"/>
	<xs:element name="ImageDrawing" type="dImageDrawing" substitutionGroup="sgDrawing">
		<xs:annotation>
			<xs:documentation> Draws an image within a region defined by a Rect. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32Collection" type="xs:anyType" abstract="true"/>
	<xs:element name="Int32Collection" type="dInt32Collection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of Int32 objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInt32CollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLinearGradientBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearGradientBrush" type="dLinearGradientBrush" substitutionGroup="sgGradientBrush">
		<xs:annotation>
			<xs:documentation>Paints an area with a linear gradient. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLineGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="LineGeometry" type="dLineGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Represents the geometry of a line. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLineSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="LineSegment" type="dLineSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation>Draws a line between two points in a PathFigure.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="Transform" type="dTransform" substitutionGroup="sgGeneralTransform">
		<xs:annotation>
			<xs:documentation>Defines functionality that enables transformations in a 2-D plane. Transformations include rotation (RotateTransform), scale (ScaleTransform), skew (SkewTransform), and translation (TranslateTransform). This class hierarchy differs from the Matrix structure because it is a class and it supports animation and enumeration semantics. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="MatrixTransform" type="dMatrixTransform" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a 2-D plane. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMediaTimeline" type="xs:anyType" abstract="true"/>
	<xs:element name="MediaTimeline" type="dMediaTimeline" substitutionGroup="sgTimeline">
		<xs:annotation>
			<xs:documentation>Provides a Timeline for media content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPathFigure" type="xs:anyType" abstract="true"/>
	<xs:element name="PathFigure" type="dPathFigure" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a subsection of a geometry, a single connected series of two-dimensional geometric segments. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPathFigureCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="PathFigureCollection" type="dPathFigureCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Represents a collection of PathFigure objects that collectively make up the geometry of a PathGeometry. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPathFigureCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPathGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="PathGeometry" type="dPathGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Represents a complex shape that may be composed of arcs, curves, ellipses, lines, and rectangles. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPathSegmentCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="PathSegmentCollection" type="dPathSegmentCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of PathSegment objects that can be individually accessed by index.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPen" type="xs:anyType" abstract="true"/>
	<xs:element name="Pen" type="dPen" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Describes how a shape is outlined. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPenLineCap" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPenLineJoin" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="PointCollection" type="dPointCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation> Represents a collection of Point objects that can be individually accessed by index. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPointCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPolyBezierSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="PolyBezierSegment" type="dPolyBezierSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation>Represents one or more cubic Bezier curves.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPolyLineSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="PolyLineSegment" type="dPolyLineSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation> Represents a set of line segments defined by a PointCollection with each Point specifying the end point of a line segment. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPolyQuadraticBezierSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="PolyQuadraticBezierSegment" type="dPolyQuadraticBezierSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation> Represents a set of quadratic Bezier segments. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgQuadraticBezierSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="QuadraticBezierSegment" type="dQuadraticBezierSegment" substitutionGroup="sgPathSegment">
		<xs:annotation>
			<xs:documentation> Represents a quadratic Bezier curve drawn between two points. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRadialGradientBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="RadialGradientBrush" type="dRadialGradientBrush" substitutionGroup="sgGradientBrush">
		<xs:annotation>
			<xs:documentation> Paints an area with a radial gradient. A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectangleGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="RectangleGeometry" type="dRectangleGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation> Describes a two-dimensional rectangle. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRotateTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="RotateTransform" type="dRotateTransform" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Rotates an object clockwise about a specified point in a 2-D x-y coordinate system. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScaleTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="ScaleTransform" type="dScaleTransform" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Scales an object in the 2-D x-y coordinate system. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSkewTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="SkewTransform" type="dSkewTransform" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Represents a 2-Dskew. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSolidColorBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="SolidColorBrush" type="dSolidColorBrush" substitutionGroup="sgBrush">
		<xs:annotation>
			<xs:documentation> Paints an area with a solid color. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStreamGeometry" type="xs:anyType" abstract="true"/>
	<xs:element name="StreamGeometry" type="dStreamGeometry" substitutionGroup="sgGeometry">
		<xs:annotation>
			<xs:documentation>Defines a geometric shape, described using a StreamGeometryContext. This geometry is light-weight alternative to PathGeometry: it does not support data binding, animation, or modification.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStretch" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSweepDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEffect" type="xs:anyType" abstract="true"/>
	<xs:element name="TextEffect" type="dTextEffect" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a text effect that can be applied to text objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextEffectCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="TextEffectCollection" type="dTextEffectCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>A collection of TextEffect objects. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTileMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToleranceType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTransformCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="TransformCollection" type="dTransformCollection" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation> Represents a collection of Transform objects that can be individually accessed by index. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTransformConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTransformGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="TransformGroup" type="dTransformGroup" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Represents a composite Transform composed of other Transform objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTranslateTransform" type="xs:anyType" abstract="true"/>
	<xs:element name="TranslateTransform" type="dTranslateTransform" substitutionGroup="sgTransform">
		<xs:annotation>
			<xs:documentation>Translates (moves) an object in the 2-D x-y coordinate system. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="VectorCollection" type="dVectorCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation> Represents an ordered collection of Vector structures. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVectorCollectionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisualBrush" type="xs:anyType" abstract="true"/>
	<xs:element name="VisualBrush" type="dVisualBrush" substitutionGroup="sgTileBrush">
		<xs:annotation>
			<xs:documentation> Paints an area with a Visual. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVideoDrawing" type="xs:anyType" abstract="true"/>
	<xs:element name="VideoDrawing" type="dVideoDrawing" substitutionGroup="sgDrawing">
		<xs:annotation>
			<xs:documentation>Plays a media file. If the media is a video file, the VideoDrawing draws it to the specified rectangle.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGuidelineSet" type="xs:anyType" abstract="true"/>
	<xs:element name="GuidelineSet" type="dGuidelineSet" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Represents a collection of guide lines that can assist in adjusting rendered figures to a device pixel grid.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHitTestParameters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometryHitTestParameters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHitTestResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeometryHitTestResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGlyphRun" type="xs:anyType" abstract="true"/>
	<xs:element name="GlyphRun" type="dGlyphRun" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGlyphTypeface" type="xs:anyType" abstract="true"/>
	<xs:element name="GlyphTypeface" type="dGlyphTypeface" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Specifies a physical font face that corresponds to a font file on the disk.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHitTestFilterBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHitTestFilterCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHitTestResultBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHitTestResultCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgImageMetadata" type="xs:anyType" abstract="true"/>
	<xs:element name="sgImageSourceConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgImageSourceValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="ImageSourceValueSerializer" type="dImageSourceValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of ImageSource.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInvalidWmpVersionException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIntersectionDetail" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColors" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaClock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExceptionEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaScriptCommandEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaPlayer" type="xs:anyType" abstract="true"/>
	<xs:element name="MediaPlayer" type="dMediaPlayer" substitutionGroup="sgAnimatable">
		<xs:annotation>
			<xs:documentation>Provides media playback for drawings. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPixelFormatChannelMask" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPixelFormat" type="xs:anyType" abstract="true"/>
	<xs:element name="PixelFormat" type="dPixelFormat" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Defines a pixel format for images and pixel-based surfaces. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPixelFormatConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPixelFormats" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointHitTestResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointHitTestParameters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRenderCapability" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRenderingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRenderOptions" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStyleSimulations" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNumberSubstitution" type="xs:anyType" abstract="true"/>
	<xs:element name="NumberSubstitution" type="dNumberSubstitution" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Specifies how numbers in text are displayed in different cultures.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgNumberCultureSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNumberSubstitutionMethod" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTypeface" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisualCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisualTreeHelper" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVisualTarget" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextLine" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextRunProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextParagraphProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextRun" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextFormatter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCharacterBufferReference" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCharacterHit" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCharacterBufferRange" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCultureSpecificCharacterBufferRange" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIndexedGlyphRun" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMinMaxParagraphWidth" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextBounds" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextRunBounds" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCharacters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCollapsingProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCollapsedRange" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCollapsingStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEmbeddedObject" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEmbeddedObjectMetrics" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEndOfLine" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEndOfParagraph" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEndOfSegment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextHidden" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInvertAxes" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextLineBreak" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextMarkerProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextModifier" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextRunCache" type="xs:anyType" abstract="true"/>
	<xs:element name="TextRunCache" type="dTextRunCache" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides caching services to the TextFormatter object in order to improve performance.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextRunTypographyProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextSimpleMarkerProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextSpanOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextTabProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextTabAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextTrailingCharacterEllipsis" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextTrailingWordEllipsis" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCanExecuteRoutedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCanExecuteRoutedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputDevice" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCommandBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="CommandBinding" type="dCommandBinding" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Binds a RoutedCommand to the event handlers which implement the command. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCommandBindingCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="CommandBindingCollection" type="dCommandBindingCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a collection of CommandBinding objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCommandManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExecutedRoutedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExecutedRoutedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgICommand" type="xs:anyType" abstract="true"/>
	<xs:element name="sgICommandSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputBindingCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="InputBindingCollection" type="dInputBindingCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of InputBinding objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInputGesture" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputGestureCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="InputGestureCollection" type="dInputGestureCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents an ordered collection of InputGesture objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeyBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="KeyBinding" type="dKeyBinding" substitutionGroup="sgInputBinding">
		<xs:annotation>
			<xs:documentation>Binds a KeyGesture and an ICommand.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeyGesture" type="xs:anyType" abstract="true"/>
	<xs:element name="KeyGesture" type="dKeyGesture" substitutionGroup="sgInputGesture">
		<xs:annotation>
			<xs:documentation>Defines a keyboard combination that can be used to invoke a command.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgKeyGestureConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyGestureValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="KeyGestureValueSerializer" type="dKeyGestureValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of KeyGesture.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMouseAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseActionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseActionValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="MouseActionValueSerializer" type="dMouseActionValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of MouseAction.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMouseBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="MouseBinding" type="dMouseBinding" substitutionGroup="sgInputBinding">
		<xs:annotation>
			<xs:documentation>Binds a MouseGesture to an ICommand.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMouseGesture" type="xs:anyType" abstract="true"/>
	<xs:element name="MouseGesture" type="dMouseGesture" substitutionGroup="sgInputGesture">
		<xs:annotation>
			<xs:documentation>Defines a mouse input gesture that can be used to invoke a command.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMouseGestureConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseGestureValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="MouseGestureValueSerializer" type="dMouseGestureValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of ModifierKeys.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRoutedCommand" type="xs:anyType" abstract="true"/>
	<xs:element name="RoutedCommand" type="dRoutedCommand" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Defines an ICommand which is routed through the element tree.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRoutedUICommand" type="xs:anyType" abstract="true"/>
	<xs:element name="RoutedUICommand" type="dRoutedUICommand" substitutionGroup="sgRoutedCommand">
		<xs:annotation>
			<xs:documentation>Defines an ICommand which is routed through the element tree and contains a text property.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgApplicationCommands" type="xs:anyType" abstract="true"/>
	<xs:element name="sgComponentCommands" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaCommands" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationCommands" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAccessKeyManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAccessKeyPressedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAccessKeyPressedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAccessKeyEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCaptureMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCursor" type="xs:anyType" abstract="true"/>
	<xs:element name="Cursor" type="dCursor" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents the image used for the mouse pointer.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCursors" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCursorType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCursorConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextComposition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardFocusChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardFocusChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFocusManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIInputLanguageSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputLanguageEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputLanguageChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputLanguageChangingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputLanguageManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputLanguageEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputMethodState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSpeechMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgImeConversionModeValues" type="xs:anyType" abstract="true"/>
	<xs:element name="sgImeSentenceModeValues" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputMethod" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputMethodStateChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputMethodStateChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputReportEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputScope" type="xs:anyType" abstract="true"/>
	<xs:element name="InputScope" type="dInputScope" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents information related to the scope of data provided by an input method.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInputScopeName" type="xs:anyType" abstract="true"/>
	<xs:element name="InputScopeName" type="dInputScopeName" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Defines a name for text input patterns.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInputScopePhrase" type="xs:anyType" abstract="true"/>
	<xs:element name="InputScopePhrase" type="dInputScopePhrase" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a suggested input text pattern.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInputScopeConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputScopeNameValue" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputScopeNameConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInputType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboard" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardDevice" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyStates" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouse" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseButton" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseButtonEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseButtonEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseButtonState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseDevice" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseWheelEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMouseWheelEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNotifyInputEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNotifyInputEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgProcessInputEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPreProcessInputEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPreProcessInputEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgProcessInputEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQueryCursorEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgQueryCursorEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStagingAreaInputItem" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylus" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusButton" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusButtonCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusButtonState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusDeviceCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusDevice" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusSystemGestureEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusSystemGestureEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusButtonEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusButtonEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusDownEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusDownEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSystemGesture" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPoint" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="StylusPointCollection" type="dStylusPointCollection">
		<xs:annotation>
			<xs:documentation>Contains a collection of StylusPoint objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStylusPointDescription" type="xs:anyType" abstract="true"/>
	<xs:element name="StylusPointDescription" type="dStylusPointDescription" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Specifies the properties that are in a StylusPoint.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStylusPointProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointProperty" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointPropertyInfo" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointPropertyUnit" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTablet" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTabletDeviceCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTabletDevice" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTabletDeviceType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTabletHardwareCapabilities" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCompositionAutoComplete" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCompositionEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCompositionEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextCompositionManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAutomationProperties" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRotation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapCacheOption" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapCodecInfo" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapCreateOptions" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBmpBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBmpBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="BmpBitmapEncoder" type="dBmpBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode bitmap (BMP) format images.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBitmapSource" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapSource" type="dBitmapSource" substitutionGroup="sgImageSource">
		<xs:annotation>
			<xs:documentation>Represents a single, constant set of pixels at a certain size and resolution. This is an abstract class. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBitmapFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapFrame" type="dBitmapFrame" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Represents image data returned by a decoder and accepted by encoders. This is an abstract class.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBitmapMetadata" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapMetadataBlob" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapPalette" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapPalettes" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapSizeOptions" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBitmapImage" type="xs:anyType" abstract="true"/>
	<xs:element name="BitmapImage" type="dBitmapImage" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Provides a specialized BitmapSource that is optimized for loading images using Extensible Application Markup Language (XAML).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCachedBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="CachedBitmap" type="dCachedBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Provides caching functionality for a BitmapSource.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColorConvertedBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="ColorConvertedBitmap" type="dColorConvertedBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Changes the color space of a BitmapSource. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCroppedBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="CroppedBitmap" type="dCroppedBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Crops a BitmapSource. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDownloadProgressEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFormatConvertedBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="FormatConvertedBitmap" type="dFormatConvertedBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Provides pixel format conversion functionality for a BitmapSource. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGifBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGifBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="GifBitmapEncoder" type="dGifBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode Graphics Interchange Format (GIF) images.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIconBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInPlaceBitmapMetadataWriter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLateBoundBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgJpegBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgJpegBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="JpegBitmapEncoder" type="dJpegBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode Joint Photographics Experts Group (JPEG) format images. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPngBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPngInterlaceOption" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPngBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="PngBitmapEncoder" type="dPngBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode Portable Network Graphics (PNG) format images. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRenderTargetBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="RenderTargetBitmap" type="dRenderTargetBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Used to convert a Visual object into a bitmap. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTiffBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTiffCompressOption" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTiffBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="TiffBitmapEncoder" type="dTiffBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode Tagged Image File Format (TIFF) format images.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgWmpBitmapDecoder" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWmpBitmapEncoder" type="xs:anyType" abstract="true"/>
	<xs:element name="WmpBitmapEncoder" type="dWmpBitmapEncoder" substitutionGroup="sgBitmapEncoder">
		<xs:annotation>
			<xs:documentation>Defines an encoder that is used to encode Microsoft Windows Media Photo images.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTransformedBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="TransformedBitmap" type="dTransformedBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Scales and rotates a BitmapSource. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgWriteableBitmap" type="xs:anyType" abstract="true"/>
	<xs:element name="WriteableBitmap" type="dWriteableBitmap" substitutionGroup="sgBitmapSource">
		<xs:annotation>
			<xs:documentation>Provides a BitmapSource that can be written to and updated.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStylusShape" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEllipseStylusShape" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRectangleStylusShape" type="xs:anyType" abstract="true"/>
	<xs:element name="sgApplicationGesture" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeCollectionChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeCollectionChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPropertyDataChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPropertyDataChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDrawingAttributesReplacedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDrawingAttributesReplacedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointsReplacedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusPointsReplacedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStylusTip" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDrawingAttributes" type="xs:anyType" abstract="true"/>
	<xs:element name="DrawingAttributes" type="dDrawingAttributes" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Specifies the appearance of a Stroke</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGestureRecognitionResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGestureRecognizer" type="xs:anyType" abstract="true"/>
	<xs:element name="GestureRecognizer" type="dGestureRecognizer" substitutionGroup="sgDependencyObject">
		<xs:annotation>
			<xs:documentation>Recognizes ink gestures.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIncrementalHitTester" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIncrementalLassoHitTester" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIncrementalStrokeHitTester" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLassoSelectionChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeHitEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLassoSelectionChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeHitEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDrawingAttributeIds" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRecognitionConfidence" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStroke" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStrokeCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="StrokeCollection" type="dStrokeCollection">
		<xs:annotation>
			<xs:documentation>Represents a collection of Stroke objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContentPosition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIDocumentPaginatorSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCommandConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardNavigationMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyboardNavigation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBeginStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="BeginStoryboard" type="dBeginStoryboard" substitutionGroup="sgTriggerAction">
		<xs:annotation>
			<xs:documentation>A trigger action that begins a Storyboard and distributes its animations to their targeted objects and properties.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgControllableStoryboardAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPauseStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="PauseStoryboard" type="dPauseStoryboard" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that pauses a Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRemoveStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="RemoveStoryboard" type="dRemoveStoryboard" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that removes a Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgResumeStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="ResumeStoryboard" type="dResumeStoryboard" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>Supports a trigger action that resumes a paused Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSeekStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="SeekStoryboard" type="dSeekStoryboard" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that provides functionality for seeking (skipping) to a specified time within the active period of a Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSetStoryboardSpeedRatio" type="xs:anyType" abstract="true"/>
	<xs:element name="SetStoryboardSpeedRatio" type="dSetStoryboardSpeedRatio" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that changes the speed of a Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSkipStoryboardToFill" type="xs:anyType" abstract="true"/>
	<xs:element name="SkipStoryboardToFill" type="dSkipStoryboardToFill" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that advances a Storyboard to the end of its fill period. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStopStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="StopStoryboard" type="dStopStoryboard" substitutionGroup="sgControllableStoryboardAction">
		<xs:annotation>
			<xs:documentation>A trigger action that stops a Storyboard.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStoryboard" type="xs:anyType" abstract="true"/>
	<xs:element name="Storyboard" type="dStoryboard" substitutionGroup="sgParallelTimeline">
		<xs:annotation>
			<xs:documentation>A container timeline that provides object and property targeting information for its child animations. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThicknessKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDiscreteThicknessKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="DiscreteThicknessKeyFrame" type="dDiscreteThicknessKeyFrame" substitutionGroup="sgThicknessKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Thickness value of the previous key frame to its own Value using discrete interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinearThicknessKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="LinearThicknessKeyFrame" type="dLinearThicknessKeyFrame" substitutionGroup="sgThicknessKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Thickness value of the previous key frame to its own Value using linear interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSplineThicknessKeyFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="SplineThicknessKeyFrame" type="dSplineThicknessKeyFrame" substitutionGroup="sgThicknessKeyFrame">
		<xs:annotation>
			<xs:documentation>Animates from the Thickness value of the previous key frame to its own Value using splined interpolation.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThicknessAnimationBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgThicknessAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="ThicknessAnimation" type="dThicknessAnimation" substitutionGroup="sgThicknessAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a  Thickness property between two target values using      linear interpolation over a specified Duration. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThicknessAnimationUsingKeyFrames" type="xs:anyType" abstract="true"/>
	<xs:element name="ThicknessAnimationUsingKeyFrames" type="dThicknessAnimationUsingKeyFrames" substitutionGroup="sgThicknessAnimationBase">
		<xs:annotation>
			<xs:documentation> Animates the value of a Thickness property along a set of KeyFrames.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThicknessKeyFrameCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="ThicknessKeyFrameCollection" type="dThicknessKeyFrameCollection" substitutionGroup="sgFreezable">
		<xs:annotation>
			<xs:documentation>Represents a collection of ThicknessKeyFrame objects. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIScrollInfo" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMenuBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDocumentViewerBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgButtonBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToggleButton" type="xs:anyType" abstract="true"/>
	<xs:element name="ToggleButton" type="dToggleButton" substitutionGroup="sgButtonBase">
		<xs:annotation>
			<xs:documentation>Base class for controls that can switch states, such as CheckBox. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSelector" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridViewRowPresenterBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgThumb" type="xs:anyType" abstract="true"/>
	<xs:element name="Thumb" type="dThumb" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Represents a control that lets the user drag and resize controls. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIItemContainerGenerator" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAutoToolTipPlacement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBulletDecorator" type="xs:anyType" abstract="true"/>
	<xs:element name="BulletDecorator" type="dBulletDecorator" substitutionGroup="sgDecorator">
		<xs:annotation>
			<xs:documentation>Represents a layout control that aligns a &quot;bullet&quot; and another visual object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCustomPopupPlacement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCustomPopupPlacementCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDocumentPageView" type="xs:anyType" abstract="true"/>
	<xs:element name="DocumentPageView" type="dDocumentPageView" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a viewport for a paginated DocumentPage.    </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDragCompletedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragCompletedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragDeltaEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragDeltaEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragStartedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDragStartedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeneratorPosition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeneratorDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGeneratorStatus" type="xs:anyType" abstract="true"/>
	<xs:element name="sgItemsChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgItemsChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLayoutInformation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPlacementMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPopup" type="xs:anyType" abstract="true"/>
	<xs:element name="Popup" type="dPopup" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a control that creates a separate pop-up window that has content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPopupAnimation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPopupPrimaryAxis" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRangeBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRepeatButton" type="xs:anyType" abstract="true"/>
	<xs:element name="RepeatButton" type="dRepeatButton" substitutionGroup="sgButtonBase">
		<xs:annotation>
			<xs:documentation>Control that raises its Click event repeatedly from the time it is pressed until it is released. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgResizeGrip" type="xs:anyType" abstract="true"/>
	<xs:element name="ResizeGrip" type="dResizeGrip" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Represents an implementation of a Thumb control that enables a Window to change its size. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScrollBar" type="xs:anyType" abstract="true"/>
	<xs:element name="ScrollBar" type="dScrollBar" substitutionGroup="sgRangeBase">
		<xs:annotation>
			<xs:documentation>Represents a control that provides a scroll bar that has a sliding Thumb whose position corresponds to a value.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScrollEventType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgScrollEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgScrollEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStatusBar" type="xs:anyType" abstract="true"/>
	<xs:element name="StatusBar" type="dStatusBar" substitutionGroup="sgItemsControl">
		<xs:annotation>
			<xs:documentation>Represents a control that displays items and information in a horizontal bar in an application window.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStatusBarItem" type="xs:anyType" abstract="true"/>
	<xs:element name="StatusBarItem" type="dStatusBarItem" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Represents an item of a StatusBar control. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTabPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="TabPanel" type="dTabPanel" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation> Handles the layout of the tab buttons in a TabControl. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextBoxBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTickBarPlacement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTickBar" type="xs:anyType" abstract="true"/>
	<xs:element name="TickBar" type="dTickBar" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a control that draws a set of tick marks for a Slider control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTickPlacement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToolBarOverflowPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="ToolBarOverflowPanel" type="dToolBarOverflowPanel" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Used to arrange overflow ToolBar items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgToolBarPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="ToolBarPanel" type="dToolBarPanel" substitutionGroup="sgStackPanel">
		<xs:annotation>
			<xs:documentation>Arranges ToolBar items inside a ToolBar.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTrack" type="xs:anyType" abstract="true"/>
	<xs:element name="Track" type="dTrack" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a control primitive that handles the positioning and sizing of a Thumb control and two RepeatButton controls that are used to set a Value. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgUniformGrid" type="xs:anyType" abstract="true"/>
	<xs:element name="UniformGrid" type="dUniformGrid" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Provides a way to arrange content in a grid where all the cells in the grid have the same size.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgIFrameworkInputElement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFrameworkContentElement" type="xs:anyType" abstract="true"/>
	<xs:element name="FrameworkContentElement" type="dFrameworkContentElement" substitutionGroup="sgContentElement">
		<xs:annotation>
			<xs:documentation>FrameworkContentElement is the WPF framework-level implementation of the ContentElement base class. FrameworkContentElement adds support for additional input APIs (including tooltips and context menus), storyboards, data context for databinding, styles support, and logical tree helper APIs. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFrameworkElement" type="xs:anyType" abstract="true"/>
	<xs:element name="FrameworkElement" type="dFrameworkElement" substitutionGroup="sgUIElement">
		<xs:annotation>
			<xs:documentation>Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation built on the WPF core-level APIs defined by UIElement.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgWindow" type="xs:anyType" abstract="true"/>
	<xs:element name="Window" type="dWindow" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgApplication" type="xs:anyType" abstract="true"/>
	<xs:element name="Application" type="dApplication" substitutionGroup="sgDispatcherObject">
		<xs:annotation>
			<xs:documentation>Encapsulates a Windows Presentation Foundation (WPF) application. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStartupEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExitEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSessionEndingCancelEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgShutdownMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgReasonSessionEnding" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAttachedPropertyBrowsableForChildrenAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="AttachedPropertyBrowsableForChildrenAttribute" type="dAttachedPropertyBrowsableForChildrenAttribute" substitutionGroup="sgAttachedPropertyBrowsableAttribute">
		<xs:annotation>
			<xs:documentation>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgResourceKey" type="xs:anyType" abstract="true"/>
	<xs:element name="sgComponentResourceKey" type="xs:anyType" abstract="true"/>
	<xs:element name="ComponentResourceKey" type="dComponentResourceKey" substitutionGroup="sgResourceKey">
		<xs:annotation>
			<xs:documentation>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFrameworkTemplate" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCondition" type="xs:anyType" abstract="true"/>
	<xs:element name="Condition" type="dCondition" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a condition for the MultiTrigger and the MultiDataTrigger, which apply changes to property values based on a set of conditions. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgConditionCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="ConditionCollection" type="dConditionCollection">
		<xs:annotation>
			<xs:documentation>Represents a collection of Condition objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDataTemplate" type="xs:anyType" abstract="true"/>
	<xs:element name="DataTemplate" type="dDataTemplate" substitutionGroup="sgFrameworkTemplate">
		<xs:annotation>
			<xs:documentation>Describes the visual structure of a data object.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgExceptionRoutedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaScriptCommandRoutedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTriggerAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCornerRadius" type="xs:anyType" abstract="true"/>
	<xs:element name="CornerRadius" type="dCornerRadius" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Represents the radii of a rectangle&apos;s corners. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCornerRadiusConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTemplateKey" type="xs:anyType" abstract="true"/>
	<xs:element name="TemplateKey" type="dTemplateKey" substitutionGroup="sgResourceKey">
		<xs:annotation>
			<xs:documentation>When used as a resource key for a data template, allows the data template to participate in the lookup process.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDataTemplateKey" type="xs:anyType" abstract="true"/>
	<xs:element name="DataTemplateKey" type="dDataTemplateKey" substitutionGroup="sgTemplateKey">
		<xs:annotation>
			<xs:documentation>Represents the resource key for the DataTemplate class.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTriggerBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="DataTrigger" type="dDataTrigger" substitutionGroup="sgTriggerBase">
		<xs:annotation>
			<xs:documentation>Represents a trigger that applies property values or performs actions when the bound data meets a specified condition.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBaseValueSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValueSource" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDependencyPropertyHelper" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDialogResultConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDynamicResource" type="xs:anyType" abstract="true"/>
	<xs:element name="DynamicResource" type="dDynamicResource" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that supports dynamic resource references made from XAML. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDynamicResourceExtensionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSetterBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEventSetter" type="xs:anyType" abstract="true"/>
	<xs:element name="EventSetter" type="dEventSetter" substitutionGroup="sgSetterBase">
		<xs:annotation>
			<xs:documentation>Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgEventTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="EventTrigger" type="dEventTrigger" substitutionGroup="sgTriggerBase">
		<xs:annotation>
			<xs:documentation>Represents a trigger that applies a set of actions in response to an event.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgExitEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFigureUnitType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFigureLength" type="xs:anyType" abstract="true"/>
	<xs:element name="FigureLength" type="dFigureLength" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes the height or width of a Figure.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFigureLengthConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFontSizeConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHorizontalAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVerticalAlignment" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFrameworkElementFactory" type="xs:anyType" abstract="true"/>
	<xs:element name="FrameworkElementFactory" type="dFrameworkElementFactory" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Supports the creation of templates.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFrameworkPropertyMetadataOptions" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFrameworkPropertyMetadata" type="xs:anyType" abstract="true"/>
	<xs:element name="FrameworkPropertyMetadata" type="dFrameworkPropertyMetadata" substitutionGroup="sgUIPropertyMetadata">
		<xs:annotation>
			<xs:documentation>Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridUnitType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridLength" type="xs:anyType" abstract="true"/>
	<xs:element name="GridLength" type="dGridLength" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents the length of elements that explicitly support Star unit types. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridLengthConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHierarchicalDataTemplate" type="xs:anyType" abstract="true"/>
	<xs:element name="HierarchicalDataTemplate" type="dHierarchicalDataTemplate" substitutionGroup="sgDataTemplate">
		<xs:annotation>
			<xs:documentation>Represents a DataTemplate that supports HeaderedItemsControl, such as TreeViewItem or MenuItem.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInheritanceBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLengthConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLocalization" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLogicalTreeHelper" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLostFocusEventManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMessageBox" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMessageBoxResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMessageBoxOptions" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMessageBoxImage" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMessageBoxButton" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMultiDataTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="MultiDataTrigger" type="dMultiDataTrigger" substitutionGroup="sgTriggerBase">
		<xs:annotation>
			<xs:documentation>Represents a trigger that applies property values or performs actions when the bound data meet a set of conditions. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMultiTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="MultiTrigger" type="dMultiTrigger" substitutionGroup="sgTriggerBase">
		<xs:annotation>
			<xs:documentation>Represents a trigger that applies property values or performs actions when a set of conditions are satisfied.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgNameScope" type="xs:anyType" abstract="true"/>
	<xs:element name="NameScope" type="dNameScope" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Implements base support for the INameScope methods that store or retrieve name-object mappings into a particular namescope, and adds attached property support to make it simpler to get or set identifier namescope information dynamically at the element level..</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgNullableBoolConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPropertyPath" type="xs:anyType" abstract="true"/>
	<xs:element name="PropertyPath" type="dPropertyPath" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Implements a data structure for describing a property as a path below another property, or below an owning type. Property paths are used in data binding to objects, and in storyboards and timelines for animations.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPropertyPathConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRequestBringIntoViewEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRequestBringIntoViewEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgResourceDictionary" type="xs:anyType" abstract="true"/>
	<xs:element name="ResourceDictionary" type="dResourceDictionary" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides a hashtable / dictionary implementation that contains WPF resources used by components and other elements of a WPF application. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgResourceDictionaryLocation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColorConvertedBitmapExtension" type="xs:anyType" abstract="true"/>
	<xs:element name="ColorConvertedBitmapExtension" type="dColorConvertedBitmapExtension" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that enables ColorConvertedBitmap creation. A ColorConvertedBitmap does not have a embedded profile, the profile instead being based on source and destination values.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStaticResource" type="xs:anyType" abstract="true"/>
	<xs:element name="StaticResource" type="dStaticResource" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that supports static (load time) resource references made from XAML. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgResourceReferenceKeyNotFoundException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedPropertyChangedEventHandlerOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedPropertyChangedEventArgsOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSetter" type="xs:anyType" abstract="true"/>
	<xs:element name="Setter" type="dSetter" substitutionGroup="sgSetterBase">
		<xs:annotation>
			<xs:documentation>Represents a setter that applies a property value.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSetterBaseCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="SetterBaseCollection" type="dSetterBaseCollection">
		<xs:annotation>
			<xs:documentation>Represents a collection of SetterBase objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSizeChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSizeChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSessionEndingCancelEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStartupEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="Style" type="dStyle" substitutionGroup="sgDispatcherObject">
		<xs:annotation>
			<xs:documentation>Enables the sharing of properties, resources, and event handlers between instances of a type.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStyleTypedPropertyAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="StyleTypedPropertyAttribute" type="dStyleTypedPropertyAttribute" substitutionGroup="sgAttribute">
		<xs:annotation>
			<xs:documentation>Represents an attribute that is applied to the class definition and determines the TargetTypes of the properties that are of type Style. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSystemColors" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSystemFonts" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPowerLineStatus" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSystemParameters" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTemplateBindingExpression" type="xs:anyType" abstract="true"/>
	<xs:element name="TemplateBindingExpression" type="dTemplateBindingExpression" substitutionGroup="sgExpression">
		<xs:annotation>
			<xs:documentation>Describes a run-time instance of a TemplateBindingExtension.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTemplateBindingExpressionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTemplateBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="TemplateBinding" type="dTemplateBinding" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that supports the binding between the value of a property in a template and the value of some other exposed property on the templated control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTemplateBindingExtensionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTemplatePartAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="TemplatePartAttribute" type="dTemplatePartAttribute" substitutionGroup="sgAttribute">
		<xs:annotation>
			<xs:documentation>Represents an attribute that is applied to the class definition to identify the types of the named parts that are used for templating. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLineStackingStrategy" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColumnSpaceDistribution" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFigureVerticalAnchor" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFigureHorizontalAnchor" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWrapDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgThemeDictionary" type="xs:anyType" abstract="true"/>
	<xs:element name="ThemeDictionary" type="dThemeDictionary" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that enables application authors to customize control styles based on the current system theme.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThemeInfoAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgThickness" type="xs:anyType" abstract="true"/>
	<xs:element name="Thickness" type="dThickness" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes the thickness of a frame around a rectangle. Four Double values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgThicknessConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="Trigger" type="dTrigger" substitutionGroup="sgTriggerBase">
		<xs:annotation>
			<xs:documentation>Represents a trigger that applies property values or performs actions conditionally.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTriggerActionCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="TriggerActionCollection" type="dTriggerActionCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a collection of TriggerAction objects. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTriggerCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWindowStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWindowState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWindowStartupLocation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgResizeMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWindowCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="WindowCollection" type="dWindowCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a collection of Window objects. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCollectionView" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIValueConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIMultiValueConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionViewGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBindingStatus" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBindingBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="Binding" type="dBinding" substitutionGroup="sgBindingBase">
		<xs:annotation>
			<xs:documentation>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBindingMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUpdateSourceTrigger" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUpdateSourceExceptionFilterCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBindingExpressionBase" type="xs:anyType" abstract="true"/>
	<xs:element name="BindingExpressionBase" type="dBindingExpressionBase" substitutionGroup="sgExpression">
		<xs:annotation>
			<xs:documentation>Represents the base class for BindingExpression, PriorityBindingExpression, and MultiBindingExpression. This class is abstract.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBindingExpression" type="xs:anyType" abstract="true"/>
	<xs:element name="BindingExpression" type="dBindingExpression" substitutionGroup="sgBindingExpressionBase">
		<xs:annotation>
			<xs:documentation>Contains instance information about a single instance of a Binding. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBindingListCollectionView" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBindingOperations" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionContainer" type="xs:anyType" abstract="true"/>
	<xs:element name="CollectionContainer" type="dCollectionContainer" substitutionGroup="sgDependencyObject">
		<xs:annotation>
			<xs:documentation>Holds an existing collection structure, such as an ObservableCollection or a DataSet, to be used inside a CompositeCollection.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCollectionViewSource" type="xs:anyType" abstract="true"/>
	<xs:element name="CollectionViewSource" type="dCollectionViewSource" substitutionGroup="sgDependencyObject">
		<xs:annotation>
			<xs:documentation>Represents the Extensible Application Markup Language (XAML) proxy of the CollectionView class.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCompositeCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="CompositeCollection" type="dCompositeCollection" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Enables multiple collections and items to be displayed as a single list.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDataChangedEventManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataTransferEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFilterEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFilterEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgListCollectionView" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGroupDescriptionSelectorCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMultiBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="MultiBinding" type="dMultiBinding" substitutionGroup="sgBindingBase">
		<xs:annotation>
			<xs:documentation>Describes a collection of Binding objects attached to a single binding target property.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMultiBindingExpression" type="xs:anyType" abstract="true"/>
	<xs:element name="MultiBindingExpression" type="dMultiBindingExpression" substitutionGroup="sgBindingExpressionBase">
		<xs:annotation>
			<xs:documentation>Contains instance information about a single instance of a MultiBinding. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgObjectDataProvider" type="xs:anyType" abstract="true"/>
	<xs:element name="ObjectDataProvider" type="dObjectDataProvider" substitutionGroup="sgDataSourceProvider">
		<xs:annotation>
			<xs:documentation>Wraps and creates an object that you can use as a binding source.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPriorityBinding" type="xs:anyType" abstract="true"/>
	<xs:element name="PriorityBinding" type="dPriorityBinding" substitutionGroup="sgBindingBase">
		<xs:annotation>
			<xs:documentation>Describes a collection of Binding objects that is attached to a single binding target property, which receives its value from the first binding in the collection that produces a value successfully.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPriorityBindingExpression" type="xs:anyType" abstract="true"/>
	<xs:element name="PriorityBindingExpression" type="dPriorityBindingExpression" substitutionGroup="sgBindingExpressionBase">
		<xs:annotation>
			<xs:documentation>Contains instance information about a single instance of a PriorityBinding. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPropertyGroupDescription" type="xs:anyType" abstract="true"/>
	<xs:element name="PropertyGroupDescription" type="dPropertyGroupDescription" substitutionGroup="sgGroupDescription">
		<xs:annotation>
			<xs:documentation>Describes the grouping of items using a property name as the criteria.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRelativeSourceMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRelativeSource" type="xs:anyType" abstract="true"/>
	<xs:element name="RelativeSource" type="dRelativeSource" substitutionGroup="sgMarkupExtension">
		<xs:annotation>
			<xs:documentation>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgValueConversionAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgXmlNamespaceMappingCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="XmlNamespaceMappingCollection" type="dXmlNamespaceMappingCollection" substitutionGroup="sgXmlNamespaceManager">
		<xs:annotation>
			<xs:documentation>Represents a collection of XmlNamespaceMapping objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgXmlDataProvider" type="xs:anyType" abstract="true"/>
	<xs:element name="XmlDataProvider" type="dXmlDataProvider" substitutionGroup="sgDataSourceProvider">
		<xs:annotation>
			<xs:documentation>Enables declarative access to XML data for data binding.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgXmlNamespaceMapping" type="xs:anyType" abstract="true"/>
	<xs:element name="XmlNamespaceMapping" type="dXmlNamespaceMapping" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Declares a mapping between a uniform resource identifier (URI) and a prefix.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgJournalEntry" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationWindow" type="xs:anyType" abstract="true"/>
	<xs:element name="NavigationWindow" type="dNavigationWindow" substitutionGroup="sgWindow">
		<xs:annotation>
			<xs:documentation>Represents a window that supports content navigation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCustomContentState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgJournalOwnership" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationUIVisibility" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFragmentNavigationEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIProvideCustomContentState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgJournalEntryListConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="JournalEntryListConverter" type="dJournalEntryListConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgJournalEntryPosition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgJournalEntryUnifiedViewConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="JournalEntryUnifiedViewConverter" type="dJournalEntryUnifiedViewConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>JournalEntryUnifiedViewConverter merges navigation back history and navigation forward history (as exposed by Frame or NavigationWindow) into a single, Windows Internet Explorer 7-style navigation menu.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgNavigatingCancelEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationFailedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationProgressEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationService" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigatingCancelEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationProgressEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationFailedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigatedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLoadCompletedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNavigationStoppedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFragmentNavigationEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPageFunctionBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgReturnEventHandlerOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPageFunction" type="xs:anyType" abstract="true"/>
	<xs:element name="PageFunction" type="dPageFunctionOfT" substitutionGroup="sgPageFunctionBase">
		<xs:annotation>
			<xs:documentation>A special type of page that allows you to treat navigation to a page in a similar fashion to calling a method. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRequestNavigateEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRequestNavigateEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgReturnEventArgsOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgShape" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEllipse" type="xs:anyType" abstract="true"/>
	<xs:element name="Ellipse" type="dEllipse" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws an ellipse. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLine" type="xs:anyType" abstract="true"/>
	<xs:element name="Line" type="dLine" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws a straight line between two points. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPath" type="xs:anyType" abstract="true"/>
	<xs:element name="Path" type="dPath" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws a series of connected lines and curves. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPolygon" type="xs:anyType" abstract="true"/>
	<xs:element name="Polygon" type="dPolygon" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws a polygon, which is a connected series of lines that form a closed shape. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPolyline" type="xs:anyType" abstract="true"/>
	<xs:element name="Polyline" type="dPolyline" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws a series of connected straight lines. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRectangle" type="xs:anyType" abstract="true"/>
	<xs:element name="Rectangle" type="dRectangle" substitutionGroup="sgShape">
		<xs:annotation>
			<xs:documentation>Draws a rectangle. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTableCellCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTableColumnCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTableRowCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTableRowGroupCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAdorner" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAdornerDecorator" type="xs:anyType" abstract="true"/>
	<xs:element name="AdornerDecorator" type="dAdornerDecorator" substitutionGroup="sgDecorator">
		<xs:annotation>
			<xs:documentation>Provides an adorner layer for elements beneath it in the visual tree.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgAdornerLayer" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextElement" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInline" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAnchoredBlock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBlock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextElementCollectionOfTextElementType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBlockCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgBlockUIContainer" type="xs:anyType" abstract="true"/>
	<xs:element name="BlockUIContainer" type="dBlockUIContainer" substitutionGroup="sgBlock">
		<xs:annotation>
			<xs:documentation>A block-level flow content element which enables UIElement elements (i.e. a Button) to be embedded (hosted) in flow content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSpan" type="xs:anyType" abstract="true"/>
	<xs:element name="Span" type="dSpan" substitutionGroup="sgInline">
		<xs:annotation>
			<xs:documentation>Groups other Inline flow content elements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBold" type="xs:anyType" abstract="true"/>
	<xs:element name="Bold" type="dBold" substitutionGroup="sgSpan">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element which causes content to render with a bold font weight.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDocumentReference" type="xs:anyType" abstract="true"/>
	<xs:element name="DocumentReference" type="dDocumentReference" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides access to reference a FixedDocument. This class cannot be inherited. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDocumentReferenceCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFixedDocumentSequence" type="xs:anyType" abstract="true"/>
	<xs:element name="FixedDocumentSequence" type="dFixedDocumentSequence" substitutionGroup="sgFrameworkContentElement">
		<xs:annotation>
			<xs:documentation>Hosts one or more DocumentReference elements that define a sequence of fixed documents. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgEditingCommands" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFigure" type="xs:anyType" abstract="true"/>
	<xs:element name="Figure" type="dFigure" substitutionGroup="sgAnchoredBlock">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element used to host a figure.  A figure is a portion of flow content with placement properties that can be customized independently from the primary content flow within a FlowDocument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFixedDocument" type="xs:anyType" abstract="true"/>
	<xs:element name="FixedDocument" type="dFixedDocument" substitutionGroup="sgFrameworkContentElement">
		<xs:annotation>
			<xs:documentation>Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFixedPage" type="xs:anyType" abstract="true"/>
	<xs:element name="FixedPage" type="dFixedPage" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides the content for a high fidelity, fixed-format page. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFloater" type="xs:anyType" abstract="true"/>
	<xs:element name="Floater" type="dFloater" substitutionGroup="sgAnchoredBlock">
		<xs:annotation>
			<xs:documentation>Provides an inline-level flow content element used to host a floater. A floater displays images and other content parallel to the main content flow in a FlowDocument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFlowDocument" type="xs:anyType" abstract="true"/>
	<xs:element name="FlowDocument" type="dFlowDocument" substitutionGroup="sgFrameworkContentElement">
		<xs:annotation>
			<xs:documentation>Hosts and formats flow content with advanced document features, such as pagination and columns.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFrameworkTextComposition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFrameworkRichTextComposition" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGlyphs" type="xs:anyType" abstract="true"/>
	<xs:element name="Glyphs" type="dGlyphs" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents the set of glyphs that are used for rendering fixed text. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHyperlink" type="xs:anyType" abstract="true"/>
	<xs:element name="Hyperlink" type="dHyperlink" substitutionGroup="sgSpan">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element that provides facilities for hosting hyperlinks within flow content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInlineCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInlineUIContainer" type="xs:anyType" abstract="true"/>
	<xs:element name="InlineUIContainer" type="dInlineUIContainer" substitutionGroup="sgInline">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element which enables UIElement elements (i.e. a Button) to be embedded (hosted) in flow content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgItalic" type="xs:anyType" abstract="true"/>
	<xs:element name="Italic" type="dItalic" substitutionGroup="sgSpan">
		<xs:annotation>
			<xs:documentation>Provides an inline-level flow content element that causes content to render with an italic font style.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLineBreak" type="xs:anyType" abstract="true"/>
	<xs:element name="LineBreak" type="dLineBreak" substitutionGroup="sgInline">
		<xs:annotation>
			<xs:documentation>An inline flow content element that causes a line break to occur in flow content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinkTarget" type="xs:anyType" abstract="true"/>
	<xs:element name="LinkTarget" type="dLinkTarget" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents an element on a page that can be linked to from other documents or other places in the same document. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLinkTargetCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="LinkTargetCollection" type="dLinkTargetCollection" substitutionGroup="sgCollectionBase">
		<xs:annotation>
			<xs:documentation>Provides a collection of all of the LinkTarget elements in a Package. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgList" type="xs:anyType" abstract="true"/>
	<xs:element name="List" type="dList" substitutionGroup="sgBlock">
		<xs:annotation>
			<xs:documentation>A block-level flow content element that provides facilities for presenting content in an ordered or unordered list.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgListItem" type="xs:anyType" abstract="true"/>
	<xs:element name="ListItem" type="dListItem" substitutionGroup="sgTextElement">
		<xs:annotation>
			<xs:documentation>A flow content element that represents a particular content item in an ordered or unordered List.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgListItemCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLogicalDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPageContent" type="xs:anyType" abstract="true"/>
	<xs:element name="PageContent" type="dPageContent" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides information about the FixedPage elements within a FixedDocument.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGetPageRootCompletedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGetPageRootCompletedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPageContentCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgParagraph" type="xs:anyType" abstract="true"/>
	<xs:element name="Paragraph" type="dParagraph" substitutionGroup="sgBlock">
		<xs:annotation>
			<xs:documentation>A block-level flow content element used to group content into a paragraph.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRun" type="xs:anyType" abstract="true"/>
	<xs:element name="Run" type="dRun" substitutionGroup="sgInline">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element intended to contain a run of unformatted text.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSection" type="xs:anyType" abstract="true"/>
	<xs:element name="Section" type="dSection" substitutionGroup="sgBlock">
		<xs:annotation>
			<xs:documentation>A block-level flow content element used for grouping other Block elements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTable" type="xs:anyType" abstract="true"/>
	<xs:element name="Table" type="dTable" substitutionGroup="sgBlock">
		<xs:annotation>
			<xs:documentation>A block-level flow content element that provides a grid-based presentation organized by rows and columns.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTableCell" type="xs:anyType" abstract="true"/>
	<xs:element name="TableCell" type="dTableCell" substitutionGroup="sgTextElement">
		<xs:annotation>
			<xs:documentation>A flow content element that defines a cell of content within a Table.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTableColumn" type="xs:anyType" abstract="true"/>
	<xs:element name="TableColumn" type="dTableColumn" substitutionGroup="sgFrameworkContentElement">
		<xs:annotation>
			<xs:documentation>A flow content element that defines a column within a Table.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTableRow" type="xs:anyType" abstract="true"/>
	<xs:element name="TableRow" type="dTableRow" substitutionGroup="sgTextElement">
		<xs:annotation>
			<xs:documentation>A flow content element that defines a row within a Table.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTableRowGroup" type="xs:anyType" abstract="true"/>
	<xs:element name="TableRowGroup" type="dTableRowGroup" substitutionGroup="sgTextElement">
		<xs:annotation>
			<xs:documentation>Represents a flow content element used to group TableRow elements within a Table.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextEffectResolver" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextEffectTarget" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextPointer" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextPointerContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextRange" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextSelection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTypography" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUnderline" type="xs:anyType" abstract="true"/>
	<xs:element name="Underline" type="dUnderline" substitutionGroup="sgSpan">
		<xs:annotation>
			<xs:documentation>An inline-level flow content element which causes content to render with an underlined text decoration.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgZoomPercentageConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="ZoomPercentageConverter" type="dZoomPercentageConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Implements a type converter for converting Double (used as the value of Zoom) to and from other types. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgColumnDefinitionCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDefinitionBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgColumnDefinition" type="xs:anyType" abstract="true"/>
	<xs:element name="ColumnDefinition" type="dColumnDefinition" substitutionGroup="sgDefinitionBase">
		<xs:annotation>
			<xs:documentation>Defines column-specific properties that apply to Grid elements. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRowDefinitionCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRowDefinition" type="xs:anyType" abstract="true"/>
	<xs:element name="RowDefinition" type="dRowDefinition" substitutionGroup="sgDefinitionBase">
		<xs:annotation>
			<xs:documentation>Defines row-specific properties that apply to Grid elements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCanvas" type="xs:anyType" abstract="true"/>
	<xs:element name="Canvas" type="dCanvas" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Defines an area within which you can explicitly position child elements by using coordinates that are relative to the Canvas area.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgControl" type="xs:anyType" abstract="true"/>
	<xs:element name="Control" type="dControl" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents the base class for all user-interactive elements </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContentControl" type="xs:anyType" abstract="true"/>
	<xs:element name="ContentControl" type="dContentControl" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Represents a control with a single piece of content.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStickyNoteControl" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataTemplateSelector" type="xs:anyType" abstract="true"/>
	<xs:element name="DataTemplateSelector" type="dDataTemplateSelector" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides a way to choose a DataTemplate based on the data object and the data-bound element.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgItemsControl" type="xs:anyType" abstract="true"/>
	<xs:element name="ItemsControl" type="dItemsControl" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Represents a control that can be used to present a collection of items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContextMenu" type="xs:anyType" abstract="true"/>
	<xs:element name="ContextMenu" type="dContextMenu" substitutionGroup="sgMenuBase">
		<xs:annotation>
			<xs:documentation>Represents a Menu control that contains a pop-up menu. The ContextMenu allows a control to expose functionality through the use of a Menu that is specific to the context of the control. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgHeaderedItemsControl" type="xs:anyType" abstract="true"/>
	<xs:element name="HeaderedItemsControl" type="dHeaderedItemsControl" substitutionGroup="sgItemsControl">
		<xs:annotation>
			<xs:documentation>Represents a control that contains multiple items and have a header.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMenuItem" type="xs:anyType" abstract="true"/>
	<xs:element name="MenuItem" type="dMenuItem" substitutionGroup="sgHeaderedItemsControl">
		<xs:annotation>
			<xs:documentation>Implements a selectable item inside a Menu.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFlowDocumentScrollViewer" type="xs:anyType" abstract="true"/>
	<xs:element name="FlowDocumentScrollViewer" type="dFlowDocumentScrollViewer" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Provides a control for viewing flow content in a continuous scrolling mode.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFlowDocumentPageViewer" type="xs:anyType" abstract="true"/>
	<xs:element name="FlowDocumentPageViewer" type="dFlowDocumentPageViewer" substitutionGroup="sgDocumentViewerBase">
		<xs:annotation>
			<xs:documentation>Represents a control for viewing flow content in a fixed viewing mode that shows content one page at a time.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgControlTemplate" type="xs:anyType" abstract="true"/>
	<xs:element name="ControlTemplate" type="dControlTemplate" substitutionGroup="sgFrameworkTemplate">
		<xs:annotation>
			<xs:documentation>Specifies the visual structure and behavioral aspects of a Control that can be shared across multiple instances of the control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgAccessText" type="xs:anyType" abstract="true"/>
	<xs:element name="AccessText" type="dAccessText" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Specifies with an underscore the character that is used as the access key.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgAdornedElementPlaceholder" type="xs:anyType" abstract="true"/>
	<xs:element name="AdornedElementPlaceholder" type="dAdornedElementPlaceholder" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents the element used in a ControlTemplate to specify where an adorned control is placed relative to other elements in the ControlTemplate.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBooleanToVisibilityConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="BooleanToVisibilityConverter" type="dBooleanToVisibilityConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents the converter that converts Boolean values to and from Visibility enumeration values. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDecorator" type="xs:anyType" abstract="true"/>
	<xs:element name="Decorator" type="dDecorator" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides a base class for elements that apply effects onto or around a single child element, such as Border or Viewbox.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBorder" type="xs:anyType" abstract="true"/>
	<xs:element name="Border" type="dBorder" substitutionGroup="sgDecorator">
		<xs:annotation>
			<xs:documentation>Draws a border, background, or both around another element. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgBorderGapMaskConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="BorderGapMaskConverter" type="dBorderGapMaskConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a converter that converts the dimensions of a GroupBox control into a VisualBrush.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgButton" type="xs:anyType" abstract="true"/>
	<xs:element name="Button" type="dButton" substitutionGroup="sgButtonBase">
		<xs:annotation>
			<xs:documentation>Represents a Windows button control, which reacts to the Click event.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCharacterCasing" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCheckBox" type="xs:anyType" abstract="true"/>
	<xs:element name="CheckBox" type="dCheckBox" substitutionGroup="sgToggleButton">
		<xs:annotation>
			<xs:documentation>Represents a control that a user can select and clear.   </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgCleanUpVirtualizedItemEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCleanUpVirtualizedItemEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgClickMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgComboBox" type="xs:anyType" abstract="true"/>
	<xs:element name="ComboBox" type="dComboBox" substitutionGroup="sgSelector">
		<xs:annotation>
			<xs:documentation> Represents a selection control in a drop-down list form. The items in the ComboBox can be shown and hidden by clicking the Button on the control. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgListBoxItem" type="xs:anyType" abstract="true"/>
	<xs:element name="ListBoxItem" type="dListBoxItem" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Represents a selectable item in a ListBox. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgComboBoxItem" type="xs:anyType" abstract="true"/>
	<xs:element name="ComboBoxItem" type="dComboBoxItem" substitutionGroup="sgListBoxItem">
		<xs:annotation>
			<xs:documentation> Implements a selectable item inside a ComboBox.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContentPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="ContentPresenter" type="dContentPresenter" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Displays the content of a ContentControl.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgContextMenuService" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContextMenuEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContextMenuEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDock" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDockPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="DockPanel" type="dDockPanel" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Defines an area where you can arrange child elements either horizontally or vertically, relative to each other. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDocumentViewer" type="xs:anyType" abstract="true"/>
	<xs:element name="DocumentViewer" type="dDocumentViewer" substitutionGroup="sgDocumentViewerBase">
		<xs:annotation>
			<xs:documentation>Represents a document viewing control that can host paginated FixedDocument content such as an XpsDocument. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgValidationRule" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExceptionValidationRule" type="xs:anyType" abstract="true"/>
	<xs:element name="ExceptionValidationRule" type="dExceptionValidationRule" substitutionGroup="sgValidationRule">
		<xs:annotation>
			<xs:documentation>Represents a rule that checks for exceptions that are thrown during the update of the binding source property.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgExpandDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgHeaderedContentControl" type="xs:anyType" abstract="true"/>
	<xs:element name="HeaderedContentControl" type="dHeaderedContentControl" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation> Base class, but not an abstract class, for all controls that contain single content and have a header.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgExpander" type="xs:anyType" abstract="true"/>
	<xs:element name="Expander" type="dExpander" substitutionGroup="sgHeaderedContentControl">
		<xs:annotation>
			<xs:documentation>Represents the control that displays a header that has a collapsible window that displays content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFlowDocumentReader" type="xs:anyType" abstract="true"/>
	<xs:element name="FlowDocumentReader" type="dFlowDocumentReader" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Provides a control for viewing flow content, with built-in support for multiple viewing modes.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgFlowDocumentReaderViewingMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="Frame" type="dFrame" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Frame is an content control that supports navigation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGrid" type="xs:anyType" abstract="true"/>
	<xs:element name="Grid" type="dGrid" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Defines a flexible grid area that consists of columns and rows.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgViewBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridView" type="xs:anyType" abstract="true"/>
	<xs:element name="GridView" type="dGridView" substitutionGroup="sgViewBase">
		<xs:annotation>
			<xs:documentation>Represents a view mode that displays data items in columns for a ListView control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridViewColumn" type="xs:anyType" abstract="true"/>
	<xs:element name="GridViewColumn" type="dGridViewColumn" substitutionGroup="sgDependencyObject">
		<xs:annotation>
			<xs:documentation>Represents a column that displays data.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridViewColumnCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="GridViewColumnCollection" type="dGridViewColumnCollection">
		<xs:annotation>
			<xs:documentation>Represents a collection of GridViewColumn objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridViewColumnHeaderRole" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridViewColumnHeader" type="xs:anyType" abstract="true"/>
	<xs:element name="GridViewColumnHeader" type="dGridViewColumnHeader" substitutionGroup="sgButtonBase">
		<xs:annotation>
			<xs:documentation>Represents a column header for a GridViewColumn.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridViewHeaderRowPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="GridViewHeaderRowPresenter" type="dGridViewHeaderRowPresenter" substitutionGroup="sgGridViewRowPresenterBase">
		<xs:annotation>
			<xs:documentation>Represents an object that is used to define the layout of a row of column headers. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridViewRowPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="GridViewRowPresenter" type="dGridViewRowPresenter" substitutionGroup="sgGridViewRowPresenterBase">
		<xs:annotation>
			<xs:documentation>Represents an object that specifies the layout of a row of data.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGridResizeDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridResizeBehavior" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGridSplitter" type="xs:anyType" abstract="true"/>
	<xs:element name="GridSplitter" type="dGridSplitter" substitutionGroup="sgThumb">
		<xs:annotation>
			<xs:documentation>Represents the control that redistributes space between columns or rows of a Grid control. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGroupStyle" type="xs:anyType" abstract="true"/>
	<xs:element name="GroupStyle" type="dGroupStyle" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Defines how you want the group to look at each level.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGroupStyleSelector" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGroupBox" type="xs:anyType" abstract="true"/>
	<xs:element name="GroupBox" type="dGroupBox" substitutionGroup="sgHeaderedContentControl">
		<xs:annotation>
			<xs:documentation>Represents a control that creates a container that has a border and a header for user interface (UI) content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgGroupItem" type="xs:anyType" abstract="true"/>
	<xs:element name="GroupItem" type="dGroupItem" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Appears as the root of the visual subtree generated for a group. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgImage" type="xs:anyType" abstract="true"/>
	<xs:element name="Image" type="dImage" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a control that displays an image.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInkCanvas" type="xs:anyType" abstract="true"/>
	<xs:element name="InkCanvas" type="dInkCanvas" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Defines an area that receives and displays ink strokes. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgInkCanvasClipboardFormat" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasSelectionHitResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="InkPresenter" type="dInkPresenter" substitutionGroup="sgDecorator">
		<xs:annotation>
			<xs:documentation>Renders ink on a surface.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgItemCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgItemContainerGenerator" type="xs:anyType" abstract="true"/>
	<xs:element name="sgItemsPanelTemplate" type="xs:anyType" abstract="true"/>
	<xs:element name="ItemsPanelTemplate" type="dItemsPanelTemplate" substitutionGroup="sgFrameworkTemplate">
		<xs:annotation>
			<xs:documentation>Specifies the panel that the ItemsPresenter creates for the layout of the items of an ItemsControl.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgItemsPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="ItemsPresenter" type="dItemsPresenter" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Used within the template of an item control to specify the place in the control’s visual tree where the ItemsPanel defined by the ItemsControl is to be added.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLabel" type="xs:anyType" abstract="true"/>
	<xs:element name="Label" type="dLabel" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Represents the text label for a control and provides support for access keys.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgListBox" type="xs:anyType" abstract="true"/>
	<xs:element name="ListBox" type="dListBox" substitutionGroup="sgSelector">
		<xs:annotation>
			<xs:documentation> Control that implements a list of selectable items. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSelectionMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgListView" type="xs:anyType" abstract="true"/>
	<xs:element name="ListView" type="dListView" substitutionGroup="sgListBox">
		<xs:annotation>
			<xs:documentation>Represents a control that displays a list of data items.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgListViewItem" type="xs:anyType" abstract="true"/>
	<xs:element name="ListViewItem" type="dListViewItem" substitutionGroup="sgListBoxItem">
		<xs:annotation>
			<xs:documentation>Represents an item in a ListView control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMediaState" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMediaElement" type="xs:anyType" abstract="true"/>
	<xs:element name="MediaElement" type="dMediaElement" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Represents a control that contains audio and/or video. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMenu" type="xs:anyType" abstract="true"/>
	<xs:element name="Menu" type="dMenu" substitutionGroup="sgMenuBase">
		<xs:annotation>
			<xs:documentation> Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMenuItemRole" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMenuScrollingVisibilityConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="MenuScrollingVisibilityConverter" type="dMenuScrollingVisibilityConverter" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Data binding converter to handle the visibility of repeat buttons in scrolling menus.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgOrientation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPage" type="xs:anyType" abstract="true"/>
	<xs:element name="Page" type="dPage" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Page encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, NavigationWindow, and Frame.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPageRangeSelection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPageRange" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPasswordBox" type="xs:anyType" abstract="true"/>
	<xs:element name="PasswordBox" type="dPasswordBox" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation>Represents a control designed for entering and handling passwords.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScrollContentPresenter" type="xs:anyType" abstract="true"/>
	<xs:element name="ScrollContentPresenter" type="dScrollContentPresenter" substitutionGroup="sgContentPresenter">
		<xs:annotation>
			<xs:documentation>Displays the content of a ScrollViewer control. This class cannot be inherited.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStackPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="StackPanel" type="dStackPanel" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Arranges child elements into a single line that can be oriented horizontally or vertically. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPrintDialog" type="xs:anyType" abstract="true"/>
	<xs:element name="PrintDialog" type="dPrintDialog" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Invokes a standard Microsoft Windows print dialog box that configures a PrintTicket and PrintQueue according to user input and then prints a document. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgPrintDialogException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgProgressBar" type="xs:anyType" abstract="true"/>
	<xs:element name="ProgressBar" type="dProgressBar" substitutionGroup="sgRangeBase">
		<xs:annotation>
			<xs:documentation> Control that an application uses to visually indicate the progress of a lengthy operation. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRadioButton" type="xs:anyType" abstract="true"/>
	<xs:element name="RadioButton" type="dRadioButton" substitutionGroup="sgToggleButton">
		<xs:annotation>
			<xs:documentation> Represents a button that can be selected, but not cleared, by a user. The IsChecked property of a RadioButton can be set by clicking it, but it can only be cleared progammatically. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRichTextBox" type="xs:anyType" abstract="true"/>
	<xs:element name="RichTextBox" type="dRichTextBox" substitutionGroup="sgTextBoxBase">
		<xs:annotation>
			<xs:documentation>Represents a rich editing control which operates on FlowDocument objects.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgScrollChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgScrollChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgScrollBarVisibility" type="xs:anyType" abstract="true"/>
	<xs:element name="sgScrollViewer" type="xs:anyType" abstract="true"/>
	<xs:element name="ScrollViewer" type="dScrollViewer" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Represents a scrollable area that can contain other visible elements. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgStickyNoteType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStyleSelector" type="xs:anyType" abstract="true"/>
	<xs:element name="StyleSelector" type="dStyleSelector" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Provides a way to apply styles based on custom logic.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSelectionChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSelectionChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSeparator" type="xs:anyType" abstract="true"/>
	<xs:element name="Separator" type="dSeparator" substitutionGroup="sgControl">
		<xs:annotation>
			<xs:documentation> Control that is used to separate items in items controls. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSlider" type="xs:anyType" abstract="true"/>
	<xs:element name="Slider" type="dSlider" substitutionGroup="sgRangeBase">
		<xs:annotation>
			<xs:documentation>Represents a control that lets the user select from a range of values by moving a Thumb control along a Track.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSoundPlayerAction" type="xs:anyType" abstract="true"/>
	<xs:element name="SoundPlayerAction" type="dSoundPlayerAction" substitutionGroup="sgTriggerAction">
		<xs:annotation>
			<xs:documentation>Represents a light weight audio playback TriggerAction used to play .wav files.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSpellCheck" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSpellingReform" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTabControl" type="xs:anyType" abstract="true"/>
	<xs:element name="TabControl" type="dTabControl" substitutionGroup="sgSelector">
		<xs:annotation>
			<xs:documentation>Represents a control that allows visual content to be arranged in a tabular form. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTabItem" type="xs:anyType" abstract="true"/>
	<xs:element name="TabItem" type="dTabItem" substitutionGroup="sgHeaderedContentControl">
		<xs:annotation>
			<xs:documentation>Control that implements a selectable item inside a TabControl. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextBlock" type="xs:anyType" abstract="true"/>
	<xs:element name="TextBlock" type="dTextBlock" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides a lightweight control for displaying small amounts of flow content.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTextBox" type="xs:anyType" abstract="true"/>
	<xs:element name="TextBox" type="dTextBox" substitutionGroup="sgTextBoxBase">
		<xs:annotation>
			<xs:documentation>Represents a control that can be used to display or edit unformatted text.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgUndoAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTextSearch" type="xs:anyType" abstract="true"/>
	<xs:element name="sgOverflowMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToolBar" type="xs:anyType" abstract="true"/>
	<xs:element name="ToolBar" type="dToolBar" substitutionGroup="sgHeaderedItemsControl">
		<xs:annotation>
			<xs:documentation>Provides a container for a group of commands or controls.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgToolBarTray" type="xs:anyType" abstract="true"/>
	<xs:element name="ToolBarTray" type="dToolBarTray" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Layout container that handles the layout of a ToolBar. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgToolTip" type="xs:anyType" abstract="true"/>
	<xs:element name="ToolTip" type="dToolTip" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Represents a control that creates a pop-up window that displays information for an element in the interface. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgToolTipService" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToolTipEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgToolTipEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTreeView" type="xs:anyType" abstract="true"/>
	<xs:element name="TreeView" type="dTreeView" substitutionGroup="sgItemsControl">
		<xs:annotation>
			<xs:documentation>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTreeViewItem" type="xs:anyType" abstract="true"/>
	<xs:element name="TreeViewItem" type="dTreeViewItem" substitutionGroup="sgHeaderedItemsControl">
		<xs:annotation>
			<xs:documentation>Implements a selectable item in a TreeView control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgUIElementCollection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUserControl" type="xs:anyType" abstract="true"/>
	<xs:element name="UserControl" type="dUserControl" substitutionGroup="sgContentControl">
		<xs:annotation>
			<xs:documentation>Provides a simple way to create a control.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgValidation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValidationError" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValidationErrorEventAction" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValidationErrorEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValidationResult" type="xs:anyType" abstract="true"/>
	<xs:element name="sgStretchDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgViewbox" type="xs:anyType" abstract="true"/>
	<xs:element name="Viewbox" type="dViewbox" substitutionGroup="sgDecorator">
		<xs:annotation>
			<xs:documentation>Defines a content decorator that can stretch and scale a single child to fill the available space.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgViewport3D" type="xs:anyType" abstract="true"/>
	<xs:element name="Viewport3D" type="dViewport3D" substitutionGroup="sgFrameworkElement">
		<xs:annotation>
			<xs:documentation>Provides a rendering surface for 3-D visual content. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVirtualizingPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVirtualizingStackPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="VirtualizingStackPanel" type="dVirtualizingStackPanel" substitutionGroup="sgVirtualizingPanel">
		<xs:annotation>
			<xs:documentation>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgWrapPanel" type="xs:anyType" abstract="true"/>
	<xs:element name="WrapPanel" type="dWrapPanel" substitutionGroup="sgPanel">
		<xs:annotation>
			<xs:documentation>Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the Orientation property.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSpellingError" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasEditingMode" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokeCollectedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokeCollectedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokesReplacedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokesReplacedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasSelectionChangingEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasSelectionChangingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasSelectionEditingEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasSelectionEditingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokeErasingEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasStrokeErasingEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasGestureEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInkCanvasGestureEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDependencyPropertyConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRoutedEventConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgComponentResourceKeyConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTemplateKeyConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMatrix" type="xs:anyType" abstract="true"/>
	<xs:element name="Matrix" type="dMatrix" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation> Represents a 3x3 affine transformation matrix used for transformations in 2-D space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDisableDpiAwarenessAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="DisableDpiAwarenessAttribute" type="dDisableDpiAwarenessAttribute" substitutionGroup="sgAttribute">
		<xs:annotation>
			<xs:documentation>Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgMatrixConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKey" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyInterop" type="xs:anyType" abstract="true"/>
	<xs:element name="sgKeyValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="KeyValueSerializer" type="dKeyValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of Key.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgModifierKeys" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModifierKeysConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgModifierKeysValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="ModifierKeysValueSerializer" type="dModifierKeysValueSerializer" substitutionGroup="sgValueSerializer">
		<xs:annotation>
			<xs:documentation>Converts instances of String to and from instances of ModifierKeys.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgTraversalRequest" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFocusNavigationDirection" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPoint" type="xs:anyType" abstract="true"/>
	<xs:element name="Point" type="dPoint" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents an x- and y-coordinate pair in two-dimensional space.  </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgSize" type="xs:anyType" abstract="true"/>
	<xs:element name="Size" type="dSize" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Implements a structure that is used to describe the Size of an object. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgVector" type="xs:anyType" abstract="true"/>
	<xs:element name="Vector" type="dVector" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Represents a displacement in 2-D space. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgRect" type="xs:anyType" abstract="true"/>
	<xs:element name="Rect" type="dRect" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes the width, height, and location of a rectangle. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDependencyProperty" type="xs:anyType" abstract="true"/>
	<xs:element name="DependencyProperty" type="dDependencyProperty" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Represents a dependency property that is registered with the Windows Presentation Foundation (WPF) property system. Dependency properties provide support for value expressions, property invalidation and dependent-value coercion, default values, inheritance, data binding, animation, property change notification, and styling.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDependencyObject" type="xs:anyType" abstract="true"/>
	<xs:element name="DependencyObject" type="dDependencyObject" substitutionGroup="sgDispatcherObject">
		<xs:annotation>
			<xs:documentation>Represents an object that participates in the dependency property system.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgLocalValueEnumerator" type="xs:anyType" abstract="true"/>
	<xs:element name="sgLocalValueEntry" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAttachedPropertyBrowsableAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAttachedPropertyBrowsableForTypeAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPropertyMetadata" type="xs:anyType" abstract="true"/>
	<xs:element name="PropertyMetadata" type="dPropertyMetadata" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgExpression" type="xs:anyType" abstract="true"/>
	<xs:element name="Expression" type="dExpression" substitutionGroup="sgObject">
		<xs:annotation>
			<xs:documentation>This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDependencyPropertyChangedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgFreezable" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDependencyObjectType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWeakEventManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIWeakEventListener" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAttachedPropertyBrowsableWhenAttributePresentAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCoerceValueCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInt32Rect" type="xs:anyType" abstract="true"/>
	<xs:element name="Int32Rect" type="dInt32Rect" substitutionGroup="sgValueType">
		<xs:annotation>
			<xs:documentation>Describes the width, height, and location of an integer rectangle.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="sgDependencyPropertyKey" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPropertyChangedCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValidateValueCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDependencyPropertyChangedEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgExpressionConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInt32RectConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgPointConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRectConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSizeConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgVectorConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherObject" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcher" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherOperationCallback" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherOperation" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherPriority" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherUnhandledExceptionEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherUnhandledExceptionEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherUnhandledExceptionFilterEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherUnhandledExceptionFilterEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherTimer" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherHooks" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherFrame" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherOperationStatus" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherSynchronizationContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherProcessingDisabled" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherHookEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDispatcherHookEventHandler" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValueSerializer" type="xs:anyType" abstract="true"/>
	<xs:element name="sgConstructorArgumentAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContentPropertyAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgContentWrapperAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDependsOnAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIComponentConnector" type="xs:anyType" abstract="true"/>
	<xs:element name="sgINameScope" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInternalTypeHelper" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIXamlTypeResolver" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMarkupExtension" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMarkupExtensionReturnTypeAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgRootNamespaceAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgServiceProviders" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTrimSurroundingWhitespaceAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgWhitespaceSignificantCollectionAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgXmlLangPropertyAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgXmlnsCompatibleWithAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgObservableCollectionOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDataSourceProvider" type="xs:anyType" abstract="true"/>
	<xs:element name="sgGroupDescription" type="xs:anyType" abstract="true"/>
	<xs:element name="sgUri" type="xs:anyType" abstract="true"/>
	<xs:element name="sgTypeConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAsyncCompletedEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCancelEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgNullableConverter" type="xs:anyType" abstract="true"/>
	<xs:element name="sgObject" type="xs:anyType" abstract="true"/>
	<xs:element name="sgString" type="xs:anyType" abstract="true"/>
	<xs:element name="sgValueType" type="xs:anyType" abstract="true"/>
	<xs:element name="sgAttribute" type="xs:anyType" abstract="true"/>
	<xs:element name="sgMulticastDelegate" type="xs:anyType" abstract="true"/>
	<xs:element name="sgDelegate" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEnum" type="xs:anyType" abstract="true"/>
	<xs:element name="sgEventArgs" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSystemException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgInvalidOperationException" type="xs:anyType" abstract="true"/>
	<xs:element name="sgSynchronizationContext" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgReadOnlyCollectionOfT" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionOfToolBar" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionOfBindingBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgCollectionBase" type="xs:anyType" abstract="true"/>
	<xs:element name="sgXmlNamespaceManager" type="xs:anyType" abstract="true"/>
	<xs:element name="sgIXmlSerializable" type="xs:anyType" abstract="true"/>

<!-- AttachedAttributeGroup Section #1 -->

		<xs:attribute name="Timeline.DesiredFrameRate" type="frlrfNullableOfInt32ClassTopic"/>
		<xs:attribute name="Clipboard.Data" type="referenceType">
			<xs:annotation>
				<xs:documentation>Stores the specified data on the Clipboard in the specified format.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clipboard.Text" type="frlrfSystemWindowsTextDataFormatClassTopic">
			<xs:annotation>
				<xs:documentation>Stores text data on the Clipboard in a specified text data format.  The UnicodeText data to store is specified as a string.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clipboard.DataObject" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Places a specified data object on the system Clipboard and accepts a Boolean parameter that indicates whether the data object should be left on the Clipboard when the application exits.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentOperations.Parent" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the parent element of the provided ContentElement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.EdgeMode" type="frlrfSystemWindowsMediaEdgeModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the EdgeMode enumeration value for a non-text primitive that determines how its edges are rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.BitmapScalingMode" type="frlrfSystemWindowsMediaBitmapScalingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyBitmapScalingMode for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CachingHint" type="frlrfSystemWindowsMediaCachingHintClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyCachingHint for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMinimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold minimum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMaximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold maximum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureSource" type="frlrfSystemWindowsMediaNumberCultureSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureSource for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureOverride" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureOverride for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.Substitution" type="frlrfSystemWindowsMediaNumberSubstitutionMethodClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of Substitution for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.FocusedElement" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets logical focus on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.IsFocusScope" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the specified DependencyObject as a focus scope. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.InputLanguage" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputLanguageattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.RestoreInputLanguage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the RestoreInputLanguagedependency property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodEnabledattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodSuspended" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodSuspendedattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeState" type="frlrfSystemWindowsInputInputMethodStateClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeStateattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeConversionMode" type="frlrfSystemWindowsInputImeConversionModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeConversionModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeSentenceMode" type="frlrfSystemWindowsInputImeSentenceModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeSentenceModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.InputScope" type="frlrfSystemWindowsInputInputScopeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputScopeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsPressAndHoldEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables press and hold on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsFlicksEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables flicks on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTapFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables tap feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTouchFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables touch input feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AutomationId" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AutomationId attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.HelpText" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the HelpText attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AcceleratorKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AcceleratorKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AccessKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AccessKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemStatus" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemStatus attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemType" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemType attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsColumnHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsColumnHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRowHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRowHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRequiredForForm" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRequiredForForm attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.LabeledBy" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the LabeledByattached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Set the value of the TabIndex attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.IsTabStop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsTabStop attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.ControlTabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ControlTabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.DirectionalNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DirectionalNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.AcceptsReturn" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AcceptsReturn  attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Storyboard.TargetName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Makes the specified Timeline target the dependency object with the specified name. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Storyboard.TargetProperty" type="frlrfSystemWindowsPropertyPathClassTopic">
			<xs:annotation>
				<xs:documentation>Makes the specified Timeline target the specified dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DocumentViewerBase.IsMasterPage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsMasterPage attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Selector.IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a property value that indicates whether an item in a Selector is selected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FrameworkElement.FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FlowDirection attached property for the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Application.Cookie" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Creates a cookie for the location specified by a Uri.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Localization.Comments" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Set the CommentsProperty attached property to the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Localization.Attributes" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Set the AttributesProperty attached property for the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NameScope.NameScope" type="referenceType">
			<xs:annotation>
				<xs:documentation>Provides the attached property set accessor for the NameScope attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Binding.XmlNamespaceManager" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets a namespace manager object used by the binding attached to the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.KeepAlive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the KeepAlive attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntryUnifiedViewConverter.JournalEntryPosition" type="frlrfSystemWindowsNavigationJournalEntryPositionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the JournalEntryPositionProperty attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsHyphenationEnabled  attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the left side of an element and the left side of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the top of an element and the top of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the right side of an element and the right side of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the bottom of an element and the bottom of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.NavigateUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the uniform resource identifier (URI) to navigate to when a hyperlink is clicked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.DiscretionaryLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DiscretionaryLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.AnnotationAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AnnotationAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualAlternates" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Kerning" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Kerning attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CapitalSpacing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CapitalSpacing attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CaseSensitiveForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CaseSensitiveForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet1" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet1 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet2" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet2 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet3" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet3 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet4" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet4 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet5" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet5 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet6" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet6 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet7" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet7 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet8" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet8 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet9" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet9 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet10" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet10 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet11" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet11 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet12" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet12 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet13" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet13 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet14" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet14 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet15" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet15 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet16" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet16 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet17" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet17 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet18" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet18 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet19" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet19 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet20" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet20 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Fraction" type="frlrfSystemWindowsFontFractionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Fraction attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.SlashedZero" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the SlashedZero attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.MathematicalGreek" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the MathematicalGreek attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianExpertForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianExpertForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Variants" type="frlrfSystemWindowsFontVariantsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Variants attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Capitals" type="frlrfSystemWindowsFontCapitalsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Capitals attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralStyle" type="frlrfSystemWindowsFontNumeralStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralStyle attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralAlignment" type="frlrfSystemWindowsFontNumeralAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralAlignment attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianWidths" type="frlrfSystemWindowsFontEastAsianWidthsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianWidths attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianLanguage" type="frlrfSystemWindowsFontEastAsianLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianLanguage attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Panel.ZIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ZIndex attached property for a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Left attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Top attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Right attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Bottom attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextMenu property of the specified object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the HorizontalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the VerticalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a value that indicates whether the ContextMenu has a drop shadow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementTarget property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementRectangle property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the Placement  property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the ShowOnDisabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the IsEnabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DockPanel.Dock" type="frlrfSystemWindowsControlsDockClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Dock attached property to a specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.Column" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Column attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.Row" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the Row attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.ColumnSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ColumnSpan attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.RowSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the RowSpan attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.IsSharedSizeScope" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsSharedSizeScope attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GridView.ColumnCollection" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the contents of the ColumnCollection attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Top attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Bottom attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Left attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Right attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.CanContentScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CanContentScroll dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpellCheck.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables spellchecking on the specified text editing control (i.e. TextBox or RichTextBox).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpellCheck.SpellingReform" type="frlrfSystemWindowsControlsSpellingReformClassTopic">
			<xs:annotation>
				<xs:documentation>Determines the spelling reform rules used by the spellchecker. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.BaselineOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BaselineOffset   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontFamily   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.TextPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the TextPath attached property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the Text attached property value to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBar.OverflowMode" type="frlrfSystemWindowsControlsOverflowModeClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the OverflowMode property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBarTray.IsLocked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the IsLocked property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ToolTip" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ToolTipattached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HasDropShadow attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementTarget attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementRectangle attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Placement attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowOnDisabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsEnabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowDuration" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowDuration attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.InitialShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InitialShowDelay attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.BetweenShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BetweenShowDelay attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Validation.ErrorTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ErrorTemplate attached property to the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VirtualizingStackPanel.IsVirtualizing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsVirtualizingProperty attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>

<!-- ComplexType Section #1 -->

	<xs:complexType name="dIAnimatable" >
		<xs:attributeGroup ref="IAnimatableAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAnimatable" >
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTimeline" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Timeline.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timeline.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TimelineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAnimationTimeline" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="AnimationTimeline.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnimationTimeline.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DoubleAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DoubleAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleAnimationUsingPath" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DoubleAnimationUsingPath.PathGeometry" type="dPathGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Specifies the geometry used to generate this animation&apos;s output values.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingPath.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleAnimationUsingPathAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBooleanAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BooleanAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BooleanAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIKeyFrameAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="IKeyFrameAnimation.KeyFrames" type="dIListContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an ordered collection KeyFrames associated with this animation sequence. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="IKeyFrameAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBooleanAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peBooleanAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cBooleanAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peBooleanAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BooleanAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cBooleanAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gBooleanKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peBooleanAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="BooleanAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBooleanKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gBooleanKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BooleanKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dByteAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ByteAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ByteAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dByteAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ByteAnimation.From" type="dNullableOfByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.To" type="dNullableOfByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.By" type="dNullableOfByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ByteAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dByteAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peByteAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cByteAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peByteAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ByteAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cByteAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gByteKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peByteAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="ByteAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dByteKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gByteKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ByteKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCharAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CharAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="CharAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCharAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peCharAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cCharAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peCharAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CharAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cCharAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gCharKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peCharAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="CharAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dCharKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gCharKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CharKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ColorAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ColorAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ColorAnimation.From" type="dNullableOfColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.To" type="dNullableOfColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.By" type="dNullableOfColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peColorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cColorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peColorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cColorAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gColorKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peColorAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="ColorAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dColorKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gColorKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDecimalAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DecimalAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DecimalAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDecimalAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DecimalAnimation.From" type="dNullableOfDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.To" type="dNullableOfDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.By" type="dNullableOfDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecimalAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDecimalAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDecimalAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDecimalAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDecimalAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecimalAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cDecimalAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gDecimalKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDecimalAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="DecimalAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDecimalKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gDecimalKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecimalKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="IKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets KeyTime values associated with a KeyFrame object. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IKeyFrame.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value associated with a KeyTime instance. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="IKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBooleanKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BooleanKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BooleanKeyFrame.Value" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BooleanKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteBooleanKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteBooleanKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteBooleanKeyFrame.Value" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BooleanKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dByteKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ByteKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ByteKeyFrame.Value" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ByteKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteByteKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteByteKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteByteKeyFrame.Value" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ByteKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCharKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CharKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CharKeyFrame.Value" type="dCharContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="CharKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteCharKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteCharKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteCharKeyFrame.Value" type="dCharContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CharKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ColorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorKeyFrame.Value" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ColorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteColorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteColorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteColorKeyFrame.Value" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDecimalKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DecimalKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DecimalKeyFrame.Value" type="dDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DecimalKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteDecimalKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteDecimalKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteDecimalKeyFrame.Value" type="dDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecimalKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DoubleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleKeyFrame.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DoubleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteDoubleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteDoubleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteDoubleKeyFrame.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt16KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int16KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16KeyFrame.Value" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int16KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteInt16KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteInt16KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteInt16KeyFrame.Value" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int16KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int32KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32KeyFrame.Value" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int32KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteInt32KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteInt32KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteInt32KeyFrame.Value" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt64KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int64KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64KeyFrame.Value" type="dInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int64KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteInt64KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteInt64KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteInt64KeyFrame.Value" type="dInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int64KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixKeyFrame.Value" type="dMatrixContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="MatrixKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteMatrixKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteMatrixKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteMatrixKeyFrame.Value" type="dMatrixContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dObjectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ObjectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectKeyFrame.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ObjectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteObjectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteObjectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteObjectKeyFrame.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointKeyFrame.Value" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="PointKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscretePointKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscretePointKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscretePointKeyFrame.Value" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DKeyFrame.Value" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Point3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscretePoint3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscretePoint3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscretePoint3DKeyFrame.Value" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternionKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="QuaternionKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionKeyFrame.Value" type="dQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="QuaternionKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteQuaternionKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteQuaternionKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteQuaternionKeyFrame.Value" type="dQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rotation3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DKeyFrame.Value" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Rotation3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteRotation3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteRotation3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteRotation3DKeyFrame.Value" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rotation3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectKeyFrame.Value" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="RectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteRectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteRectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteRectKeyFrame.Value" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSingleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleKeyFrame.Value" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="SingleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteSingleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteSingleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteSingleKeyFrame.Value" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SingleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSizeKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SizeKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeKeyFrame.Value" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="SizeKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteSizeKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteSizeKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteSizeKeyFrame.Value" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStringKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="StringKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="StringKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteStringKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteStringKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StringKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VectorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorKeyFrame.Value" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="VectorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteVectorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteVectorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteVectorKeyFrame.Value" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Vector3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DKeyFrame.Value" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Vector3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteVector3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteVector3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteVector3DKeyFrame.Value" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DoubleAnimation.From" type="dNullableOfDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.To" type="dNullableOfDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.By" type="dNullableOfDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDoubleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDoubleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDoubleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cDoubleAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gDoubleKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDoubleAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="DoubleAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DoubleAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDoubleKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gDoubleKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt16AnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int16AnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int16AnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt16Animation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int16Animation.From" type="dNullableOfInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>  Gets or sets the animation&apos;s starting value.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.To" type="dNullableOfInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.By" type="dNullableOfInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16Animation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int16AnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt16AnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInt16AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInt16AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInt16AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int16AnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cInt16AnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gInt16KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInt16AnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Int16AnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int16AnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dInt16KeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInt16KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int16KeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32AnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int32AnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int32AnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32Animation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int32Animation.From" type="dNullableOfInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.To" type="dNullableOfInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.By" type="dNullableOfInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Animation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32AnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32AnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInt32AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInt32AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInt32AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32AnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cInt32AnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gInt32KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInt32AnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Int32AnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32AnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dInt32KeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInt32KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32KeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt64AnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int64AnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Int64AnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt64Animation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int64Animation.From" type="dNullableOfInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.To" type="dNullableOfInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.By" type="dNullableOfInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64Animation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int64AnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt64AnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInt64AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInt64AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInt64AnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int64AnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cInt64AnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gInt64KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInt64AnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Int64AnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int64AnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dInt64KeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInt64KeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int64KeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearByteKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearByteKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearByteKeyFrame.Value" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ByteKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearColorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearColorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearColorKeyFrame.Value" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearDecimalKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearDecimalKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearDecimalKeyFrame.Value" type="dDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecimalKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearDoubleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearDoubleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearDoubleKeyFrame.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearInt16KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearInt16KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearInt16KeyFrame.Value" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int16KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearInt32KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearInt32KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearInt32KeyFrame.Value" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearInt64KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearInt64KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearInt64KeyFrame.Value" type="dInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int64KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearPointKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearPointKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearPointKeyFrame.Value" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearPoint3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearPoint3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearPoint3DKeyFrame.Value" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearQuaternionKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearQuaternionKeyFrame.UseShortestPath" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearQuaternionKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearQuaternionKeyFrame.Value" type="dQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LinearQuaternionKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearRotation3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearRotation3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearRotation3DKeyFrame.Value" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rotation3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearRectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearRectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearRectKeyFrame.Value" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearSingleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearSingleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearSingleKeyFrame.Value" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SingleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearSizeKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearSizeKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearSizeKeyFrame.Value" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearVectorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearVectorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearVectorKeyFrame.Value" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearVector3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearVector3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearVector3DKeyFrame.Value" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="MatrixAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMatrixAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMatrixAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMatrixAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cMatrixAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gMatrixKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMatrixAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="MatrixAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMatrixKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gMatrixKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dObjectAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ObjectAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ObjectAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dObjectAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peObjectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cObjectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peObjectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cObjectAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gObjectKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peObjectAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="ObjectAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dObjectKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gObjectKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTimelineGroup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTimelineGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTimelineGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTimelineGroup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="TimelineGroupAttributes"/>
	</xs:complexType>
	<xs:group name="cTimelineGroup">
		<xs:choice>
			<xs:group ref="gTimeline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTimelineGroup">
		<xs:choice>
			<xs:element name="TimelineGroup.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimelineGroup.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dParallelTimeline" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peParallelTimeline" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cParallelTimeline" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peParallelTimeline" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ParallelTimelineAttributes"/>
	</xs:complexType>
	<xs:group name="cParallelTimeline">
		<xs:choice>
			<xs:group ref="gTimeline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peParallelTimeline">
		<xs:choice>
			<xs:element name="ParallelTimeline.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParallelTimeline.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPoint3DAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point3DAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Point3DAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint3DAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point3DAnimation.From" type="dNullableOfPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.To" type="dNullableOfPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.By" type="dNullableOfPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint3DAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePoint3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPoint3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePoint3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cPoint3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gPoint3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePoint3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Point3DAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3DAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPoint3DKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gPoint3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="PointAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointAnimation.From" type="dNullableOfPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.To" type="dNullableOfPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.By" type="dNullableOfPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePointAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPointAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePointAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cPointAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gPointKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePointAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="PointAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPointKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gPointKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternionAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="QuaternionAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="QuaternionAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternionAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="QuaternionAnimation.From" type="dNullableOfQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the animation&apos;s starting value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.To" type="dNullableOfQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>  Gets or sets the animation&apos;s ending value.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.By" type="dNullableOfQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the total amount by which the animation changes its starting value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.UseShortestPath" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternionAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peQuaternionAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cQuaternionAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peQuaternionAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cQuaternionAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gQuaternionKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peQuaternionAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="QuaternionAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuaternionAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dQuaternionKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gQuaternionKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RectAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="RectAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RectAnimation.From" type="dNullableOfRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.To" type="dNullableOfRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.By" type="dNullableOfRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRectAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cRectAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gRectKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peRectAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="RectAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRectKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gRectKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3DAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rotation3DAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Rotation3DAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3DAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rotation3DAnimation.From" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.To" type="dRotation3DContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Rotation3DAnimation.By" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rotation3DAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3DAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRotation3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRotation3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRotation3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rotation3DAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cRotation3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gRotation3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peRotation3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rotation3DAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRotation3DKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gRotation3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rotation3DKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSingleAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="SingleAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSingleAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SingleAnimation.From" type="dNullableOfSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.To" type="dNullableOfSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.By" type="dNullableOfSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SingleAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSingleAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peSingleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cSingleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peSingleAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SingleAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cSingleAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gSingleKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peSingleAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="SingleAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SingleAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dSingleKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gSingleKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SingleKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSizeAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SizeAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="SizeAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSizeAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SizeAnimation.From" type="dNullableOfSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.To" type="dNullableOfSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.By" type="dNullableOfSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSizeAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peSizeAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cSizeAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peSizeAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cSizeAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gSizeKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peSizeAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="SizeAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SizeAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dSizeKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gSizeKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineByteKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineByteKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineByteKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineByteKeyFrame.Value" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineByteKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineColorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineColorKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineColorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineColorKeyFrame.Value" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineColorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineDecimalKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineDecimalKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineDecimalKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineDecimalKeyFrame.Value" type="dDecimalContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineDecimalKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineDoubleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineDoubleKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineDoubleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineDoubleKeyFrame.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineDoubleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineInt16KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineInt16KeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt16KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt16KeyFrame.Value" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineInt16KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineInt32KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineInt32KeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt32KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt32KeyFrame.Value" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineInt32KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineInt64KeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineInt64KeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt64KeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineInt64KeyFrame.Value" type="dInt64Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineInt64KeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplinePointKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplinePointKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplinePointKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplinePointKeyFrame.Value" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplinePointKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplinePoint3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplinePoint3DKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplinePoint3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplinePoint3DKeyFrame.Value" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplinePoint3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineQuaternionKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineQuaternionKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineQuaternionKeyFrame.UseShortestPath" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineQuaternionKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineQuaternionKeyFrame.Value" type="dQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineQuaternionKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineRotation3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineRotation3DKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineRotation3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineRotation3DKeyFrame.Value" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineRotation3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineRectKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineRectKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineRectKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineRectKeyFrame.Value" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineRectKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineSingleKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineSingleKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineSingleKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineSingleKeyFrame.Value" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineSingleKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineSizeKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineSizeKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineSizeKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineSizeKeyFrame.Value" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineSizeKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineVectorKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineVectorKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineVectorKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineVectorKeyFrame.Value" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineVectorKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineVector3DKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineVector3DKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineVector3DKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineVector3DKeyFrame.Value" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineVector3DKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStringAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="StringAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="StringAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStringAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStringAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStringAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStringAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StringAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cStringAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gStringKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStringAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="StringAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StringAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dStringKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gStringKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StringKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTimelineCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTimeline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TimelineCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Vector3DAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Vector3DAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Vector3DAnimation.From" type="dNullableOfVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.To" type="dNullableOfVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.By" type="dNullableOfVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peVector3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cVector3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peVector3DAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cVector3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gVector3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peVector3DAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="Vector3DAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3DAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dVector3DKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gVector3DKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VectorAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="VectorAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VectorAnimation.From" type="dNullableOfVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.To" type="dNullableOfVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.By" type="dNullableOfVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peVectorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cVectorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peVectorAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cVectorAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gVectorKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peVectorAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="VectorAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VectorAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dVectorKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gVectorKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeySpline" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="KeySpline.ControlPoint1" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The first control point used to define a Bezier curve that describes a KeySpline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="KeySpline.ControlPoint2" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>The second control point used to define a Bezier curve that describes a KeySpline.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="KeySplineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeySplineContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="KeySpline" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dKeyTime" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="KeyTimeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyTimeContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="KeyTime" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dMatrixAnimationUsingPath" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixAnimationUsingPath.DoesRotateWithTangent" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value indicating whether the object rotates along the tangent of the path. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.IsAngleCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.IsOffsetCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.PathGeometry" type="dPathGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>  Gets or sets the geometry used to generate this animation&apos;s output values. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixAnimationUsingPath.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixAnimationUsingPathAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointAnimationUsingPath" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointAnimationUsingPath.PathGeometry" type="dPathGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Specifies the geometry used to generate this animation&apos;s output values. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointAnimationUsingPath.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointAnimationUsingPathAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRepeatBehavior" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RepeatBehaviorAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRepeatBehaviorContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="RepeatBehavior" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBitmapEffect" >
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapEffectGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gBitmapEffect" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapEffectGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapEffectInput" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BitmapEffectInput.Input" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the BitmapSource that is used for the input for the object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEffectInput.AreaToApplyEffect" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a rectangular region on the visual to which the BitmapEffect is applied.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapEffectInputAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBevelBitmapEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BevelBitmapEffect.BevelWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the bevel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BevelBitmapEffect.Relief" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the relief of the bevel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BevelBitmapEffect.LightAngle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the direction the &quot;virtual light&quot; is coming from that creates the shadows of the bevel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BevelBitmapEffect.Smoothness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets how smooth the shadows of the bevel are. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BevelBitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBlurBitmapEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BlurBitmapEffect.Radius" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the radius used in the blur kernel. A larger radius implies more blurring.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BlurBitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDropShadowBitmapEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DropShadowBitmapEffect.ShadowDepth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance between the plane of the object casting the shadow and the shadow plane. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DropShadowBitmapEffect.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color of the shadow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DropShadowBitmapEffect.Direction" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the angle at which the shadow is cast. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DropShadowBitmapEffect.Noise" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the graininess, or &quot;noise level,&quot; of the shadow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DropShadowBitmapEffect.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree of opacity of the shadow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DropShadowBitmapEffect.Softness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the softness of the shadow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DropShadowBitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEmbossBitmapEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EmbossBitmapEffect.LightAngle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the direction the artificial light is cast upon the embossed object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmbossBitmapEffect.Relief" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of relief of the emboss.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EmbossBitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dOuterGlowBitmapEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="OuterGlowBitmapEffect.GlowColor" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color of the halo glow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OuterGlowBitmapEffect.GlowSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the thickness of the halo glow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OuterGlowBitmapEffect.Noise" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the graininess of the halo glow. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OuterGlowBitmapEffect.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree of opacity of the halo glow.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="OuterGlowBitmapEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapEffectCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gBitmapEffect" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapEffectCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransform3D" >
		<xs:attributeGroup ref="Transform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAffineTransform3D" >
		<xs:attributeGroup ref="AffineTransform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dModel3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Model3D.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="Model3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLight" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Light.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Light.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="LightAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAmbientLight" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="AmbientLight.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AmbientLight.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LightAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3D" >
		<xs:attributeGroup ref="Rotation3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotation3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gRotation3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dAxisAngleRotation3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="AxisAngleRotation3D.Axis" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the axis of a 3-D rotation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AxisAngleRotation3D.Angle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the angle of a 3-D rotation, in degrees.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AxisAngleRotation3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCamera" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Camera.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="CameraAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMaterial" >
		<xs:attributeGroup ref="MaterialAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiffuseMaterial" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiffuseMaterial.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color allowed to emit from the Material.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiffuseMaterial.AmbientColor" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a color that represents the ambient color emitted by the Material.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiffuseMaterial.Brush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Brush to be applied as a Material to a 3-D model. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DiffuseMaterialAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDirectionalLight" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DirectionalLight.Direction" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Represents the vector along which the light&apos;s effect will be seen on models in a 3-D scene. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DirectionalLight.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DirectionalLight.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DirectionalLightAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEmissiveMaterial" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EmissiveMaterial.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color of the light that appears to be emitted from the EmissiveMaterial. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EmissiveMaterial.Brush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush applied by the EmissiveMaterial. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EmissiveMaterialAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometry3D" >
		<xs:attributeGroup ref="Geometry3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometryModel3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GeometryModel3D.Geometry" type="dGeometry3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the geometry of a GeometryModel3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeometryModel3D.Material" type="dMaterialContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Material of a GeometryModel3D</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeometryModel3D.BackMaterial" type="dMaterialContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Material to be applied to the back of a Model3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeometryModel3D.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeometryModel3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHitTestParameters3D" >
		<xs:attributeGroup ref="HitTestParameters3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMaterialGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gMaterial" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MaterialGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrix3D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Matrix3D.M11" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the first row and first column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M12" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the first row and second column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M13" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the first row and third column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M14" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the first row and fourth column of this Matrix3D structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M21" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the second row and first column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M22" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the second row and second column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M23" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the second row and third column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M24" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the second row and fourth column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M31" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and first column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M32" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and second column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M33" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and third column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M34" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and fourth column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.OffsetX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the fourth row and first column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.OffsetY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the fourth row and second column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.OffsetZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the fourth row and third column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix3D.M44" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the fourth row and fourth column of this Matrix3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Matrix3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixCamera" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixCamera.ViewMatrix" type="dMatrix3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a Matrix3D as the view transformation matrix. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixCamera.ProjectionMatrix" type="dMatrix3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a Matrix3D as the projection transformation matrix. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MatrixCamera.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixCameraAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixTransform3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixTransform3D.Matrix" type="dMatrix3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a Matrix3D that specifies one or more 3-D transformations. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixTransform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMeshGeometry3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MeshGeometry3D.Positions" type="dPoint3DCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of vertex positions for a MeshGeometry3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeshGeometry3D.Normals" type="dVector3DCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of normal vectors for the MeshGeometry3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeshGeometry3D.TextureCoordinates" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of texture coordinates for the MeshGeometry3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeshGeometry3D.TriangleIndices" type="dInt32CollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of triangle indices for the MeshGeometry3D.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MeshGeometry3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dModel3DGroup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peModel3DGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cModel3DGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peModel3DGroup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Model3DGroupAttributes"/>
	</xs:complexType>
	<xs:group name="cModel3DGroup">
		<xs:choice>
			<xs:group ref="gModel3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peModel3DGroup">
		<xs:choice>
			<xs:element name="Model3DGroup.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dVisual3D" >
		<xs:attributeGroup ref="Visual3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dModelVisual3D" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peModelVisual3D" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cModelVisual3D" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peModelVisual3D" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ModelVisual3DAttributes"/>
	</xs:complexType>
	<xs:group name="cModelVisual3D">
		<xs:choice>
			<xs:group ref="gVisual3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peModelVisual3D">
		<xs:choice>
			<xs:element name="ModelVisual3D.Content" type="dModel3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the model that comprises the content of the ModelVisual3D.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ModelVisual3D.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transform set on the ModelVisual3D.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPoint3D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point3D.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of this Point3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3D.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of this Point3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point3D.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the z-coordinate of this Point3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint3DContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Point3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPoint3DCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Point3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point3DCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint3DCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Point3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dVector3DCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Vector3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Vector3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPoint4D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point4D.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the X component of this Point4D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point4D.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Y component of this Point4D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point4D.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Z component of this Point4D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point4D.W" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the W component of this Point4D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Point4DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointLightBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointLightBase.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Point3D that specifies the light&apos;s position in world space. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.Range" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance beyond which the light has no effect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.ConstantAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a constant value by which the intensity of the light diminishes over distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.LinearAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the linear diminution of the light&apos;s intensity over distance. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.QuadraticAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the diminution of the light&apos;s effect over distance, calculated by a quadratic operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLightBase.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="PointLightBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointLight" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PointLight.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Point3D that specifies the light&apos;s position in world space. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.Range" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance beyond which the light has no effect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.ConstantAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a constant value by which the intensity of the light diminishes over distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.LinearAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the linear diminution of the light&apos;s intensity over distance. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.QuadraticAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the diminution of the light&apos;s effect over distance, calculated by a quadratic operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PointLight.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointLightBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dProjectionCamera" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ProjectionCamera.NearPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s near clip plane.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectionCamera.FarPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s far clip plane. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectionCamera.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the position of the camera in world coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectionCamera.LookDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the direction in which the camera is looking in world coordinates.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectionCamera.UpDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the upward direction of the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProjectionCamera.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ProjectionCameraAttributes"/>
	</xs:complexType>
	<xs:complexType name="dOrthographicCamera" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="OrthographicCamera.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the camera&apos;s viewing box, in world units. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.NearPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s near clip plane.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.FarPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s far clip plane. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the position of the camera in world coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.LookDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the direction in which the camera is looking in world coordinates.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.UpDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the upward direction of the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrthographicCamera.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="OrthographicCameraAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPerspectiveCamera" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PerspectiveCamera.FieldOfView" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that represents the camera&apos;s horizontal field of view. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.NearPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s near clip plane.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.FarPlaneDistance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s far clip plane. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the position of the camera in world coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.LookDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the direction in which the camera is looking in world coordinates.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.UpDirection" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D which defines the upward direction of the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PerspectiveCamera.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PerspectiveCameraAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternion" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Quaternion.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Quaternion.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Quaternion.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Quaternion.W" type="dDoubleContainer" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuaternionContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Quaternion" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dQuaternionRotation3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="QuaternionRotation3D.Quaternion" type="dQuaternionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Quaternion that defines the destination rotation.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuaternionRotation3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRayHitTestResult" >
		<xs:attributeGroup ref="RayHitTestResultAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRect3D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rect3D.Location" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Point3D that represents the origin of the Rect3D. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.Size" type="dSize3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the area of the Rect3D. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.SizeX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the size of the Rect3D in the X dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.SizeY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the size of the Rect3D in the Y dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.SizeZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the size of the Rect3D in the Z dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the X coordinate of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the Y coordinate of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect3D.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the Z coordinate of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Rect3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotateTransform3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RotateTransform3D.CenterX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X coordinate of the Point3D about which to rotate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RotateTransform3D.CenterY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y coordinate of the Point3D about which to rotate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RotateTransform3D.CenterZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Z coordinate of the Point3D about which to rotate.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RotateTransform3D.Rotation" type="dRotation3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Rotation3D that specifies the rotation. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RotateTransform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dScaleTransform3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ScaleTransform3D.ScaleX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the scale factor in the x-direction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform3D.ScaleY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the scale factor in the y-direction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform3D.ScaleZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the scale factor in the z-direction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform3D.CenterX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the transform&apos;s center point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform3D.CenterY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the z-coordinate of the transform&apos;s center point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform3D.CenterZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the z-coordinate of the transform&apos;s center point.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ScaleTransform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSize3D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Size3D.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the X value of this Size3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Size3D.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Y value of this Size3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Size3D.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Z value of this Size3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Size3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSize3DContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Size3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dSpecularMaterial" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SpecularMaterial.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that filters the color properties of the material applied to the model. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecularMaterial.Brush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the 2-D brush to apply to a specularly-lit 3-D model. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpecularMaterial.SpecularPower" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the degree to which a material applied to a 3-D model reflects the lighting model as shine.  </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpecularMaterialAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSpotLight" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SpotLight.Direction" type="dVector3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Vector3D that specifies the direction in which the SpotLight projects its light.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.OuterConeAngle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an angle that specifies the proportion of a SpotLight&apos;s cone-shaped projection outside which the light does not illuminate objects in the scene. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.InnerConeAngle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an angle that specifies the proportion of a SpotLight&apos;s cone-shaped projection in which the light fully illuminates objects in the scene. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.Position" type="dPoint3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Point3D that specifies the light&apos;s position in world space. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.Range" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance beyond which the light has no effect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.ConstantAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a constant value by which the intensity of the light diminishes over distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.LinearAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the linear diminution of the light&apos;s intensity over distance. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.QuadraticAttenuation" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the diminution of the light&apos;s effect over distance, calculated by a quadratic operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the light. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SpotLight.Transform" type="dTransform3DContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpotLightAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransform3DGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTransform3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Transform3DGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTranslateTransform3D" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TranslateTransform3D.OffsetX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X-axis value of the translation&apos;s offset.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TranslateTransform3D.OffsetY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y-axis value of the translation&apos;s offset.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TranslateTransform3D.OffsetZ" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Z-axis value of the translation&apos;s offset.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TranslateTransform3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3D" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Vector3D.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the X component of this Vector3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3D.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Y component of this Vector3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector3D.Z" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Z component of this Vector3D structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Vector3DAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVector3DContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Vector3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dViewport3DVisual" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peViewport3DVisual" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cViewport3DVisual" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peViewport3DVisual" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Viewport3DVisualAttributes"/>
	</xs:complexType>
	<xs:group name="cViewport3DVisual">
		<xs:choice>
			<xs:group ref="gVisual3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peViewport3DVisual">
		<xs:choice>
			<xs:element name="Viewport3DVisual.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clipping region of the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity of the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity mask value of the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the BitmapEffect applied to the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the BitmapEffectInput applied to the Viewport3DVisual. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transform value of the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.Offset" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset value of the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.Camera" type="dCameraContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Camera used by the Viewport3DVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3DVisual.Viewport" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangle in which the Viewport3DVisual will be rendered.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMaterialCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gMaterial" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MaterialCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dModel3DCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gModel3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Model3DCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransform3DCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTransform3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Transform3DCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIDataObject" >
	</xs:complexType>
	<xs:complexType name="dClipboard" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIInputElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="IInputElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether focus can be set to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="IInputElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dContentElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ContentElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dContentOperations" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataFormats" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataObject" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataObjectEventArgs" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DataObjectEventArgs.RoutedEvent" type="dRoutedEventContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the RoutedEvent associated with this RoutedEventArgs instance. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataObjectEventArgs.Handled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataObjectEventArgs.Source" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to the object that raised the event. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DataObjectEventArgsAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDragDrop" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDuration" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DurationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDurationContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Duration" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dEventManager" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEventPrivateKey" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontStyle" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueTypeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontStyles" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontStretch" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueTypeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontStretches" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontWeight" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueTypeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontWeights" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFreezableCollectionOfT" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:TypeArguments"  />
		<xs:attributeGroup ref="FreezableCollectionOfTAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUIElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="UIElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="UIElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIContentHost" >
		<xs:attributeGroup ref="IContentHostAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRoutedEvent" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RoutedEventAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRoutedEventContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="RoutedEvent" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTextDecorations" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextDecoration" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextDecoration.Pen" type="dPenContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Pen used to draw the text decoration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextDecoration.PenOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the text decoration&apos;s offset from its Location.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextDecorationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextDecorationCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="TextDecoration" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextDecorationCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPresentationSource" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PresentationSource.RootVisual" type="dVisualContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>When overridden in a derived class, gets or sets the root visual being presented in the source. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="PresentationSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUIPropertyMetadata" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="UIPropertyMetadata.IsAnimationProhibited" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value declaring whether animations should be disabled on the dependency property where the containing metadata instance is applied. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIPropertyMetadata.DefaultValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets and sets the default value of the dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIPropertyMetadata.PropertyChangedCallback" type="dPropertyChangedCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a PropertyChangedCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UIPropertyMetadata.CoerceValueCallback" type="dCoerceValueCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a CoerceValueCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="UIPropertyMetadataAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVisual" >
		<xs:attributeGroup ref="VisualAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVisualContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gVisual" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dContainerVisual" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ContainerVisual.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the child collection of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clipping region of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity mask value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffect value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffectInput value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.XSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X (horizontal) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.YSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y (vertical) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transform value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContainerVisual.Offset" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContainerVisualAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingVisual" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DrawingVisual.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the child collection of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clipping region of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity mask value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffect value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffectInput value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.XSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X (horizontal) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.YSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y (vertical) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transform value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingVisual.Offset" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingVisualAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStreamGeometryContext" >
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHostVisual" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="HostVisual.Children" type="dVisualCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the child collection of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clipping region of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity mask value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffect value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapEffectInput value for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.XSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X (horizontal) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.YSnappingGuidelines" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y (vertical) guideline for the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transform value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HostVisual.Offset" type="dVectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset value of the ContainerVisual.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContainerVisualAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCompositionTarget" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CompositionTarget.RootVisual" type="dVisualContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the root visual of the CompositionTarget.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="CompositionTargetAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPathSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PathSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dArcSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ArcSegment.Point" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the endpoint of the elliptical arc. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArcSegment.Size" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the x- and y-radius of the arc as a Size structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArcSegment.RotationAngle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArcSegment.IsLargeArc" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the arc should be greater than 180 degrees.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArcSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ArcSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ArcSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBezierSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BezierSegment.Point1" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first control point of the curve. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BezierSegment.Point2" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the second control point of the curve. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BezierSegment.Point3" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the end point of the curve. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BezierSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BezierSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BezierSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingContext" >
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Brush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Brush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Brush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBrushContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gBrush" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dColor" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Color.A" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the sRGB alpha component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.R" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the sRGB red component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.G" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the sRGB green component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.B" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the sRGB blue component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.ScA" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the ScRGB alpha component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.ScR" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the ScRGB red component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.ScG" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the ScRGB green component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Color.ScB" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the ScRGB blue component value of this Color structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Color" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Geometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometryContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gGeometry" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCombinedGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CombinedGeometry.Geometry1" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the first Geometry object of this CombinedGeometry object. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CombinedGeometry.Geometry2" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the second Geometry object of this CombinedGeometry object. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CombinedGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CombinedGeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDashStyle" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DashStyle.Offset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets how far in the dash sequence the stroke will start. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DashStyle.Dashes" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the collection of dashes and gaps in this DashStyle. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DashStyleAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDashStyles" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCharacterMetrics" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CharacterMetricsAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawing" >
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTileBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TileBrush.Viewport" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the base tile for a TileBrush. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TileBrush.Viewbox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the content in a TileBrush tile. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TileBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TileBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TileBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TileBrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DrawingBrush.Drawing" type="dDrawingContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Drawing that describes the contents of this DrawingBrush. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingBrush.Viewport" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the base tile for a TileBrush. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingBrush.Viewbox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the content in a TileBrush tile. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingBrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gDrawing" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingGroup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDrawingGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDrawingGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDrawingGroup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingGroupAttributes"/>
	</xs:complexType>
	<xs:group name="cDrawingGroup">
		<xs:choice>
			<xs:group ref="gDrawing" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDrawingGroup">
		<xs:choice>
			<xs:element name="DrawingGroup.ClipGeometry" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clip region of this DrawingGroup. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity of this DrawingGroup. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the brush used to alter the opacity of select regions of this DrawingGroup. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform that is applied to this DrawingGroup. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.GuidelineSet" type="dGuidelineSetContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the GuidelineSet to apply to this DrawingGroup.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the BitmapEffect to apply to this DrawingGroup. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingGroup.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the region where the DrawingGroup applies its BitmapEffect and, optionally a BitmapSource to use as input for its BitmapEffect.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dImageSource" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ImageSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingImage" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DrawingImage.Drawing" type="dDrawingContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the drawing content for the DrawingImage.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingImageAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeneralTransform" >
		<xs:attributeGroup ref="GeneralTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEllipseGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EllipseGeometry.RadiusX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-radius value of the EllipseGeometry. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EllipseGeometry.RadiusY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-radius value of the EllipseGeometry.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EllipseGeometry.Center" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of the EllipseGeometry.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EllipseGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EllipseGeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontFamilyMap" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FontFamilyMap.Scale" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font scale factor for the target FontFamily.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FontFamilyMap.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the culture-specific language for the FontFamilyMap.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FontFamilyMapAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFamilyTypeface" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FamilyTypeface.Style" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style of the font family typeface design. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.Weight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the designed weight of this font family typeface.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.Stretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the designed stretch of the font family typeface.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.UnderlinePosition" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of underline value relative to the baseline. The value is also relative to em size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.UnderlineThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the thickness of underline relative to em size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.StrikethroughPosition" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the strikethrough value relative to the baseline. The value is also relative to em size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.StrikethroughThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the thickness of the strikethrough relative to em size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.CapsHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance from baseline to top of an English capital, relative to em size.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FamilyTypeface.XHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Western x-height relative to em size.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FamilyTypefaceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontEmbeddingManager" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FontEmbeddingManagerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontFamily" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FontFamily.FamilyTypefaces" type="dFamilyTypefaceCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of typefaces for the FontFamily object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FontFamily.FamilyMaps" type="dFontFamilyMapCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of FontFamilyMap objects. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FontFamily.Baseline" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance between the baseline and the character cell top.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FontFamily.LineSpacing" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the line spacing value for the FontFamily object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FontFamilyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFontFamilyValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFonts" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeneralTransformGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gGeneralTransform" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeneralTransformGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleCollection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DoubleCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDoubleCollectionContent" >
	</xs:complexType>
	<xs:complexType name="dGeneralTransformCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gGeneralTransform" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeneralTransformCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometryCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gGeometry" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeometryCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometryDrawing" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GeometryDrawing.Brush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Brush used to fill the interior of the shape described by this GeometryDrawing. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeometryDrawing.Pen" type="dPenContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Pen used to stroke this GeometryDrawing. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GeometryDrawing.Geometry" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Geometry that describes the shape of this GeometryDrawing. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeometryDrawingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGeometryGroup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGeometryGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGeometryGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGeometryGroup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GeometryGroupAttributes"/>
	</xs:complexType>
	<xs:group name="cGeometryGroup">
		<xs:choice>
			<xs:group ref="gGeometry" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGeometryGroup">
		<xs:choice>
			<xs:element name="GeometryGroup.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGlyphRunDrawing" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GlyphRunDrawing.GlyphRun" type="dGlyphRunContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the GlyphRun that describes the text to draw.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRunDrawing.ForegroundBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the foreground brush of the GlyphRunDrawing.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GlyphRunDrawingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGradientBrush" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GradientBrushAttributes"/>
	</xs:complexType>
	<xs:group name="cGradientBrush">
		<xs:choice>
			<xs:element ref="GradientStop" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peGradientBrush">
		<xs:choice>
			<xs:element name="GradientBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GradientBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GradientBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGradientStop" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GradientStop.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the color of the gradient stop. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GradientStop.Offset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the location of the gradient stop within the gradient vector. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GradientStopAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGradientStopCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="GradientStop" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GradientStopCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dImageBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ImageBrush.ImageSource" type="dImageSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the image displayed by this ImageBrush.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageBrush.Viewport" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the base tile for a TileBrush. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageBrush.Viewbox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the content in a TileBrush tile. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ImageBrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dImageDrawing" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ImageDrawing.ImageSource" type="dImageSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the source of the image </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImageDrawing.Rect" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or set the region in which the image is drawn. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ImageDrawingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32Collection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32CollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32CollectionContent" >
	</xs:complexType>
	<xs:complexType name="dLinearGradientBrush" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peLinearGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cLinearGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peLinearGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LinearGradientBrushAttributes"/>
	</xs:complexType>
	<xs:group name="cLinearGradientBrush">
		<xs:choice>
			<xs:element ref="GradientStop" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peLinearGradientBrush">
		<xs:choice>
			<xs:element name="LinearGradientBrush.StartPoint" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the starting two-dimensional coordinates of the linear gradient. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearGradientBrush.EndPoint" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ending two-dimensional coordinates of the linear gradient. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearGradientBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearGradientBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearGradientBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dLineGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LineGeometry.StartPoint" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the start point of the line. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineGeometry.EndPoint" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the end point of a line. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LineGeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLineSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LineSegment.Point" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the end point of the line segment. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LineSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransform" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransformContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gTransform" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dMatrixTransform" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MatrixTransform.Matrix" type="dMatrixContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Matrix structure that defines this transformation. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMediaTimeline" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MediaTimeline.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the media source associated with the timeline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaTimeline.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MediaTimelineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPathFigure" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePathFigure" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPathFigure" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePathFigure" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PathFigureAttributes"/>
	</xs:complexType>
	<xs:group name="cPathFigure">
		<xs:choice>
			<xs:group ref="gPathSegment" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePathFigure">
		<xs:choice>
			<xs:element name="PathFigure.StartPoint" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Point where the PathFigure begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathFigure.IsFilled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether the contained area of this PathFigure is to be used for hit-testing, rendering, and clipping. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathFigure.IsClosed" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether this figures first and last segments are connected.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPathFigureCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="PathFigure" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PathFigureCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPathGeometry" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePathGeometry" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPathGeometry" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePathGeometry" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PathGeometryAttributes"/>
	</xs:complexType>
	<xs:group name="cPathGeometry">
		<xs:choice>
			<xs:element ref="PathFigure" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="pePathGeometry">
		<xs:choice>
			<xs:element name="PathGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPathGeometryContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="PathGeometry" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPathSegmentCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gPathSegment" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PathSegmentCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPen" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Pen.Brush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the fill the outline produced by this Pen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Pen.Thickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the thickness of the stroke produced by this Pen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Pen.MiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the limit on the ratio of the miter length to half this pen&apos;s Thickness. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Pen.DashStyle" type="dDashStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that describes the pattern of dashes generated by this Pen.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PenAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPenContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Pen" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPointCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Point" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Point" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPolyBezierSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PolyBezierSegment.Points" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the PointCollection that define this PolyBezierSegment object. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyBezierSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyBezierSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PolyBezierSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPolyLineSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PolyLineSegment.Points" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the collection of Point structures that defines this PolyLineSegment object. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyLineSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyLineSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PolyLineSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPolyQuadraticBezierSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PolyQuadraticBezierSegment.Points" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the PointCollection that defines this PolyQuadraticBezierSegment object. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyQuadraticBezierSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PolyQuadraticBezierSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PolyQuadraticBezierSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dQuadraticBezierSegment" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="QuadraticBezierSegment.Point1" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the control Point of the curve. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuadraticBezierSegment.Point2" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the end Point of this QuadraticBezierSegment. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuadraticBezierSegment.IsStroked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuadraticBezierSegment.IsSmoothJoin" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="QuadraticBezierSegmentAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRadialGradientBrush" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRadialGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRadialGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRadialGradientBrush" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RadialGradientBrushAttributes"/>
	</xs:complexType>
	<xs:group name="cRadialGradientBrush">
		<xs:choice>
			<xs:element ref="GradientStop" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peRadialGradientBrush">
		<xs:choice>
			<xs:element name="RadialGradientBrush.Center" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the center of the outermost circle of the radial gradient. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.RadiusX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the horizontal radius of the outermost circle of the radial gradient. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.RadiusY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the vertical radius of the outermost circle of a radial gradient. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.GradientOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadialGradientBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRectangleGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RectangleGeometry.RadiusX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-radius of the ellipse use to round the corners of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectangleGeometry.RadiusY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-radius of the ellipse use to round the corners of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectangleGeometry.Rect" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the dimensions of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RectangleGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectangleGeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRotateTransform" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RotateTransform.Angle" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the angle, in degrees, of clockwise rotation. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RotateTransform.CenterX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the rotation center point. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RotateTransform.CenterY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the rotation center point. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RotateTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dScaleTransform" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ScaleTransform.ScaleX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-axis scale factor. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform.ScaleY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-axis scale factor. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform.CenterX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the center point of this ScaleTransform. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScaleTransform.CenterY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the center point of this ScaleTransform. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ScaleTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSkewTransform" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SkewTransform.AngleX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SkewTransform.AngleY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SkewTransform.CenterX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the transform center. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SkewTransform.CenterY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the transform center. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SkewTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSolidColorBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SolidColorBrush.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color of this SolidColorBrush. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SolidColorBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SolidColorBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SolidColorBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SolidColorBrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStreamGeometry" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="StreamGeometry.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StreamGeometryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextEffect" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextEffect.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform that is applied to the TextEffect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextEffect.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clipping region of the TextEffect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextEffect.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content of the TextEffect.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextEffect.PositionStart" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the starting position in the text that the TextEffect applies to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextEffect.PositionCount" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position in the text that the TextEffect applies to.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextEffectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextEffectCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="TextEffect" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextEffectCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransformCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTransform" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TransformCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransformGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTransform" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TransformGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTranslateTransform" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TranslateTransform.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance to translate along the x-axis. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TranslateTransform.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance to translate (move) an object along the y-axis. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TranslateTransformAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Vector" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVisualBrush" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VisualBrush.Visual" type="dVisualContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the brush&apos;s content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.AutoLayoutContent" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether this VisualBrush will run layout its Visual. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.Viewport" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the base tile for a TileBrush. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.Viewbox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position and dimensions of the content in a TileBrush tile. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VisualBrush.RelativeTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VisualBrushAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVideoDrawing" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VideoDrawing.Player" type="dMediaPlayerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the media player associated with the drawing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VideoDrawing.Rect" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangular area in which the video is drawn.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VideoDrawingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGuidelineSet" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GuidelineSet.GuidelinesX" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a series of coordinate values that represent guide lines on the X-axis.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuidelineSet.GuidelinesY" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a series of coordinate values that represent guide lines on the Y-axis.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GuidelineSetAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGuidelineSetContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="GuidelineSet" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dHitTestParameters" >
		<xs:attributeGroup ref="HitTestParametersAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHitTestResult" >
		<xs:attributeGroup ref="HitTestResultAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGlyphRun" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GlyphRun.BaselineOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the baseline origin of the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.FontRenderingEmSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the em size used for rendering the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.GlyphTypeface" type="dGlyphTypefaceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the GlyphTypeface for the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.BidiLevel" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the bidirectional nesting level of the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.IsSideways" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to rotate glyphs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.CaretStops" type="dIListOfBooleanContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the list of Boolean values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.ClusterMap" type="dIListOfUInt16Content" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the list of UInt16 values that maps characters in the GlyphRun to glyph indices.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.Characters" type="dIListOfCharContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the list of UTF16 code points that represent the Unicode content of the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.GlyphIndices" type="dIListOfUInt16Content" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an array of UInt16 values that represent the glyph indices in the rendering physical font.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.AdvanceWidths" type="dIListOfDoubleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the list of Double values that represent the advance widths corresponding to the glyph indices.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.GlyphOffsets" type="dIListOfPointContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an array of Point values representing the offsets of the glyphs in the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GlyphRun.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the XmlLanguage for the GlyphRun.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GlyphRunAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGlyphRunContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="GlyphRun" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGlyphTypeface" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GlyphTypeface.FontUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the URI for the GlyphTypeface object.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GlyphTypefaceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGlyphTypefaceContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="GlyphTypeface" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dImageMetadata" >
		<xs:attributeGroup ref="ImageMetadataAttributes"/>
	</xs:complexType>
	<xs:complexType name="dImageSourceValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMediaPlayer" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MediaPlayer.Volume" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the media&apos;s volume.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.Balance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the balance between the left and right speaker volumes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.ScrubbingEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether scrubbing is enabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.IsMuted" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that indicates whether the media is muted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.Position" type="dTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current position of the media.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ratio of speed that media is played at.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaPlayer.Clock" type="dMediaClockContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the MediaClock associated with the MediaTimeline to be played.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MediaPlayerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMediaPlayerContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="MediaPlayer" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPixelFormat" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PixelFormat.Masks" type="dIListOfPixelFormatChannelMaskContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of bit masks associated with the PixelFormat.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PixelFormatAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPixelFormats" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRenderCapability" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRenderOptions" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dNumberSubstitution" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="NumberSubstitution.CultureOverride" type="dCultureInfoContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value which identifies which culture to use when the value of the CultureSource property is set to Override.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="NumberSubstitutionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVisualCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="VisualCollection.Capacity" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of elements that the VisualCollection can contain.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dVisualTreeHelper" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextLine" >
		<xs:attributeGroup ref="TextLineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextRunProperties" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextRunProperties.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of  TextDecoration objects used for the text run.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextRunProperties.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of TextEffect objects used for the text run.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TextRunPropertiesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextParagraphProperties" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextParagraphProperties.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of TextDecoration objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextParagraphProperties.Tabs" type="dIListOfTextTabPropertiesContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of tab definitions.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TextParagraphPropertiesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextRun" >
		<xs:attributeGroup ref="TextRunAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextFormatter" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextSource" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextCollapsingProperties" >
		<xs:attributeGroup ref="TextCollapsingPropertiesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextEmbeddedObject" >
		<xs:attributeGroup ref="TextEmbeddedObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextMarkerProperties" >
		<xs:attributeGroup ref="TextMarkerPropertiesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextModifier" >
		<xs:attributeGroup ref="TextModifierAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextRunCache" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTextRunTypographyProperties" >
		<xs:attributeGroup ref="TextRunTypographyPropertiesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputDevice" >
		<xs:attributeGroup ref="InputDeviceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCommandBinding" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CommandBinding.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ICommand associated with this CommandBinding. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CommandBindingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCommandBindingCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="CommandBinding" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CommandBindingCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCommandBindingCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="CommandBinding" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dICommand" mixed="true" >
		<xs:attributeGroup ref="ICommandAttributes"/>
	</xs:complexType>
	<xs:complexType name="dICommandContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dICommandSource" >
		<xs:attributeGroup ref="ICommandSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputBindingCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInputBinding" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InputBindingCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputBindingCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInputBinding" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInputGesture" >
		<xs:attributeGroup ref="InputGestureAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputGestureCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInputGesture" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InputGestureCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyBinding" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="KeyBinding.Gesture" type="dInputGestureContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the gesture associated with this KeyBinding. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="KeyBinding.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ICommand associated with this binding. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="KeyBinding.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command specific data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="KeyBinding.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the target element of the command.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="KeyBindingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyGesture" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="KeyGestureAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyGestureValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouseActionValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouseBinding" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MouseBinding.Gesture" type="dInputGestureContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the gesture associated with this MouseBinding. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MouseBinding.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ICommand associated with this binding. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MouseBinding.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command specific data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MouseBinding.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the target element of the command.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MouseBindingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouseGesture" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MouseGestureAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouseGestureValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRoutedCommand" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RoutedCommand.InputGestures" type="dInputGestureCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of InputGesture objects that are associated with this command.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RoutedCommandAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRoutedUICommand" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RoutedUICommand.InputGestures" type="dInputGestureCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of InputGesture objects that are associated with this command.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RoutedUICommandAttributes"/>
	</xs:complexType>
	<xs:complexType name="dApplicationCommands" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dComponentCommands" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMediaCommands" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dNavigationCommands" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCursor" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCursors" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFocusManager" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIInputLanguageSource" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="IInputLanguageSource.CurrentInputLanguage" type="dCultureInfoContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current input language for this input language source object.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="IInputLanguageSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputLanguageEventArgs" >
		<xs:attributeGroup ref="InputLanguageEventArgsAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputScope" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InputScopeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputScopeName" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InputScopeNameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInputScopePhrase" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InputScopePhraseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyboard" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyboardDevice" >
		<xs:attributeGroup ref="KeyboardDeviceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouse" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMouseDevice" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MouseDevice.OverrideCursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the cursor for the entire application. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="MouseDeviceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStylus" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStylusPointCollection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StylusPointCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStylusPointDescription" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StylusPointDescriptionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStylusPointProperties" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTablet" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAutomationProperties" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapCodecInfo" >
		<xs:attributeGroup ref="BitmapCodecInfoAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapDecoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BitmapDecoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that represents the color profile associated with a bitmap, if one is defined.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapDecoder.Frames" type="dReadOnlyCollectionOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the content of an individual frame within a bitmap.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BitmapDecoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBmpBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BmpBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BmpBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BmpBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BmpBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BmpBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BmpBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapSource" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapSourceContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gBitmapSource" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBitmapFrame" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BitmapFrame.BaseUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the base Uri of the current context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapFrame.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapMetadataContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gBitmapMetadata" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBitmapPaletteContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBitmapPalettes" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBitmapImage" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BitmapImage.BaseUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the base Uri of the current BitmapImage context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapImage.UriSource" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Uri source of the BitmapImage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapImage.StreamSource" type="dStreamContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the stream source of the BitmapImage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapImage.DecodePixelWidth" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width, in pixels, that the image is decoded to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapImage.DecodePixelHeight" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height, in pixels, that the image is decoded to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BitmapImage.SourceRect" type="dInt32RectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangle that is used as the source of the BitmapImage.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapImageAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCachedBitmap" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColorConvertedBitmap" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ColorConvertedBitmap.Source" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the source bitmap that is converted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorConvertedBitmap.SourceColorContext" type="dColorContextContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the color profile of the source bitmap.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorConvertedBitmap.DestinationColorContext" type="dColorContextContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the color profile, as defined by the ColorContext class, of the converted bitmap.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColorConvertedBitmap.DestinationFormat" type="dPixelFormatContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the PixelFormat of the converted bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColorConvertedBitmapAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCroppedBitmap" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CroppedBitmap.Source" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CroppedBitmap.SourceRect" type="dInt32RectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangular area that the bitmap is cropped to.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CroppedBitmapAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFormatConvertedBitmap" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FormatConvertedBitmap.Source" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FormatConvertedBitmap.DestinationFormat" type="dPixelFormatContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the pixel format to convert the bitmap to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FormatConvertedBitmap.DestinationPalette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the palette to apply to the bitmap if the format is indexed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FormatConvertedBitmap.AlphaThreshold" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the alpha channel threshold of a bitmap when converting to palletized formats that recognizes an alpha color.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FormatConvertedBitmapAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGifBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GifBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GifBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GifBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GifBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GifBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GifBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dJpegBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="JpegBitmapEncoder.QualityLevel" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the quality level of the resulting Joint Photographics Experts Group (JPEG) image.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.FlipHorizontal" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped horizontally during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.FlipVertical" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped vertically during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="JpegBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="JpegBitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPngBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PngBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PngBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PngBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PngBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PngBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PngBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PngBitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRenderTargetBitmap" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTiffBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TiffBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TiffBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TiffBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TiffBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TiffBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TiffBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TiffBitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dWmpBitmapEncoder" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="WmpBitmapEncoder.ImageQualityLevel" type="dSingleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the image quality level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Lossless" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to encode using lossless compression.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.FlipHorizontal" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to flip the image horizontally.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.FlipVertical" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to flip the image vertically.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.UseCodecOptions" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates codec options are to be used.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.QualityLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the compression quality for the main image.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.SubsamplingLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the sub sampling level for RGB image encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.OverlapLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the overlap processing level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.HorizontalTileSlices" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of horizontal divisions to use during compression encoding. A single division creates two horizontal regions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.VerticalTileSlices" type="dInt16Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of vertical divisions to use during compression encoding. A single division creates two vertical regions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.FrequencyOrder" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to encoding in frequency order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.InterleavedAlpha" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to encode the alpha channel data as an additional interleaved channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.AlphaQualityLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the compression quality for a planar alpha channel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.CompressedDomainTranscode" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether compressed domain operations can be used. Compressed domain operations are transformation operations that are done without decoding the image data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.ImageDataDiscardLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the level of image data to discard during a compressed domain transcode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.AlphaDataDiscardLevel" type="dByteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the level of alpha frequency data to discard during a compressed domain transcode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.IgnoreOverlap" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to ignore region overlap pixels in sub-region compressed domain encoding. This feature is not currently implemented.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.ColorContexts" type="dReadOnlyCollectionOfColorContextContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the color profile that is associated with this encoder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Thumbnail" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Metadata" type="dBitmapMetadataContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Preview" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Palette" type="dBitmapPaletteContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WmpBitmapEncoder.Frames" type="dIListOfBitmapFrameContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the individual frames within an image.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="WmpBitmapEncoderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTransformedBitmap" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TransformedBitmap.Source" type="dBitmapSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransformedBitmap.Transform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Transform, which specifies the scale or rotation of the bitmap. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TransformedBitmapAttributes"/>
	</xs:complexType>
	<xs:complexType name="dWriteableBitmap" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStylusShape" >
		<xs:attributeGroup ref="StylusShapeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingAttributes" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DrawingAttributes.Color" type="dColorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the color of a Stroke.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.StylusTipTransform" type="dMatrixContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Matrix that specifies the transformation to perform on the stylus&apos; tip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the stylus used to draw the Stroke.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the stylus used to draw the Stroke.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.FitToCurve" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether Bezier smoothing is used to render the Stroke.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.IgnorePressure" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the thickness of a rendered Stroke changes according the amount of pressure applied.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawingAttributes.IsHighlighter" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the Stroke looks like a highlighter.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DrawingAttributesAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGestureRecognizer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GestureRecognizerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIncrementalHitTester" >
		<xs:attributeGroup ref="IncrementalHitTesterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDrawingAttributeIds" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStrokeCollection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StrokeCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dContentPosition" >
		<xs:attributeGroup ref="ContentPositionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIDocumentPaginatorSource" >
		<xs:attributeGroup ref="IDocumentPaginatorSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBeginStoryboard" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Storyboard" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BeginStoryboardAttributes"/>
	</xs:complexType>
	<xs:complexType name="dControllableStoryboardAction" >
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPauseStoryboard" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRemoveStoryboard" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dResumeStoryboard" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSeekStoryboard" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SeekStoryboard.Offset" type="dTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount by which the storyboard should move forward or backward from the seek origin Origin. .</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SeekStoryboardAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSetStoryboardSpeedRatio" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SetStoryboardSpeedRatio.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a new Storyboard animation speed as a ratio of the old animation speed.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SetStoryboardSpeedRatioAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSkipStoryboardToFill" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStopStoryboard" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStoryboard" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStoryboard" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStoryboard" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStoryboard" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ParallelTimelineAttributes"/>
	</xs:complexType>
	<xs:group name="cStoryboard">
		<xs:choice>
			<xs:group ref="gTimeline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStoryboard">
		<xs:choice>
			<xs:element name="Storyboard.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Storyboard.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dThicknessKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ThicknessKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessKeyFrame.Value" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ThicknessKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDiscreteThicknessKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DiscreteThicknessKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DiscreteThicknessKeyFrame.Value" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinearThicknessKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LinearThicknessKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinearThicknessKeyFrame.Value" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSplineThicknessKeyFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SplineThicknessKeyFrame.KeySpline" type="dKeySplineContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineThicknessKeyFrame.KeyTime" type="dKeyTimeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SplineThicknessKeyFrame.Value" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SplineThicknessKeyFrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThicknessAnimationBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ThicknessAnimationBase.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationBase.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ThicknessAnimationBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThicknessAnimation" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ThicknessAnimation.From" type="dNullableOfThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>  Gets or sets the animation&apos;s starting value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.To" type="dNullableOfThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.By" type="dNullableOfThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimation.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessAnimationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThicknessAnimationUsingKeyFrames" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peThicknessAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cThicknessAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peThicknessAnimationUsingKeyFrames" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessAnimationUsingKeyFramesAttributes"/>
	</xs:complexType>
	<xs:group name="cThicknessAnimationUsingKeyFrames">
		<xs:choice>
			<xs:group ref="gThicknessKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peThicknessAnimationUsingKeyFrames">
		<xs:choice>
			<xs:element name="ThicknessAnimationUsingKeyFrames.IsAdditive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.IsCumulative" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.AccelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.AutoReverse" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.BeginTime" type="dNullableOfTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.DecelerationRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.Duration" type="dDurationContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.RepeatBehavior" type="dRepeatBehaviorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ThicknessAnimationUsingKeyFrames.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dThicknessKeyFrameCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gThicknessKeyFrame" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessKeyFrameCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIScrollInfo" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="IScrollInfo.CanVerticallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether scrolling on the vertical axis is possible. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IScrollInfo.CanHorizontallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IScrollInfo.ScrollOwner" type="dScrollViewerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a ScrollViewer element that controls scrolling behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="IScrollInfoAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMenuBase" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMenuBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMenuBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMenuBase" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="MenuBaseAttributes"/>
	</xs:complexType>
	<xs:group name="cMenuBase">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMenuBase">
		<xs:choice>
			<xs:element name="MenuBase.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDocumentViewerBase" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDocumentViewerBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDocumentViewerBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDocumentViewerBase" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="DocumentViewerBaseAttributes"/>
	</xs:complexType>
	<xs:group name="cDocumentViewerBase">
		<xs:choice>
			<xs:group ref="gIDocumentPaginatorSource" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDocumentViewerBase">
		<xs:choice>
			<xs:element name="DocumentViewerBase.PageViews" type="dReadOnlyCollectionOfDocumentPageViewContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a read-only collection of the active DocumentPageView objects contained within the viewer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewerBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dButtonBase" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peButtonBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cButtonBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peButtonBase" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="ButtonBaseAttributes"/>
	</xs:complexType>
	<xs:group name="cButtonBase">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peButtonBase">
		<xs:choice>
			<xs:element name="ButtonBase.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ButtonBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dToggleButton" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToggleButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToggleButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToggleButton" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToggleButtonAttributes"/>
	</xs:complexType>
	<xs:group name="cToggleButton">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peToggleButton">
		<xs:choice>
			<xs:element name="ToggleButton.IsChecked" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the ToggleButton is checked. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.IsThreeState" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Determines whether the control supports two or three states. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToggleButton.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dSelector" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peSelector" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cSelector" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peSelector" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="SelectorAttributes"/>
	</xs:complexType>
	<xs:group name="cSelector">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peSelector">
		<xs:choice>
			<xs:element name="Selector.IsSynchronizedWithCurrentItem" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.SelectedIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.SelectedItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.SelectedValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Selector.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGridViewRowPresenterBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GridViewRowPresenterBase.Columns" type="dGridViewColumnCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a GridViewColumnCollection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenterBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="GridViewRowPresenterBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThumb" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Thumb.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thumb.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThumbAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIItemContainerGenerator" >
	</xs:complexType>
	<xs:complexType name="dBulletDecorator" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peBulletDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cBulletDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peBulletDecorator" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BulletDecoratorAttributes"/>
	</xs:complexType>
	<xs:group name="cBulletDecorator">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peBulletDecorator">
		<xs:choice>
			<xs:element name="BulletDecorator.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the background color for a BulletDecorator control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Bullet" type="dUIElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object to use as the bullet in a BulletDecorator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BulletDecorator.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDocumentPageView" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DocumentPageView.DocumentPaginator" type="dDocumentPaginatorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DocumentPaginator used to retrieve content pages for this view.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.PageNumber" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the page number of the current page displayed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentPageView.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DocumentPageViewAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLayoutInformation" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPopup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePopup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPopup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePopup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PopupAttributes"/>
	</xs:complexType>
	<xs:group name="cPopup">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePopup">
		<xs:choice>
			<xs:element name="Popup.IsOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the Popup is visible. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.CustomPopupPlacementCallback" type="dCustomPopupPlacementCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a delegate handler method that positions the Popup control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.StaysOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the Popup control closes when the control is no longer in focus.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.HorizontalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset from the left of the area that is specified for the Popup control content by a combination of the Placement, PlacementTarget, and PlacementRectangle properties. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.VerticalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset from top the area that is specified for the  Popup control content by a combination of the Placement, PlacementTarget, and PlacementRectangle properties. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.PlacementTarget" type="dUIElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element relative to which the Popup is positioned when it opens.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.PlacementRectangle" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangle relative to which the Popup control is positioned when it opens.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.AllowsTransparency" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a Popup control can contain transparent content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Popup.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRangeBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RangeBase.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Minimum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Maximum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.LargeChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.SmallChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RangeBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="RangeBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRepeatButton" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRepeatButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRepeatButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRepeatButton" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RepeatButtonAttributes"/>
	</xs:complexType>
	<xs:group name="cRepeatButton">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peRepeatButton">
		<xs:choice>
			<xs:element name="RepeatButton.Delay" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of time, in milliseconds, the RepeatButton waits while it is pressed before it starts repeating. The value must be non-negative. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Interval" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of time, in milliseconds, between repeats once repeating starts. The value must be non-negative. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RepeatButton.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dResizeGrip" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ResizeGrip.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResizeGrip.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:complexType>
	<xs:complexType name="dScrollBar" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ScrollBar.ViewportSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of the scrollable content that is currently visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Minimum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Maximum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.LargeChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.SmallChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollBar.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ScrollBarAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStatusBar" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStatusBar" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStatusBar" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStatusBar" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:complexType>
	<xs:group name="cStatusBar">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStatusBar">
		<xs:choice>
			<xs:element name="StatusBar.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dStatusBarItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStatusBarItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStatusBarItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStatusBarItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cStatusBarItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStatusBarItem">
		<xs:choice>
			<xs:element name="StatusBarItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBarItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTabPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTabPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTabPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTabPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:complexType>
	<xs:group name="cTabPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTabPanel">
		<xs:choice>
			<xs:element name="TabPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTextBoxBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextBoxBase.IsReadOnly" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.AcceptsReturn" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.AcceptsTab" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.IsUndoEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.AutoWordSelection" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBoxBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TextBoxBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTickBar" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TickBar.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that is used to draw the tick marks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum value that is possible for a tick mark.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum value that is possible for a tick mark.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.SelectionStart" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the start point of a selection. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.SelectionEnd" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the end point of a selection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.IsSelectionRangeEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the TickBar displays a selection range. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.TickFrequency" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the interval between tick marks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Ticks" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the positions of the tick marks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.IsDirectionReversed" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the direction of increasing value of the tick marks..</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.ReservedSpace" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a space buffer for the area that contains the tick marks that are specified for a TickBar.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TickBar.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TickBarAttributes"/>
	</xs:complexType>
	<xs:complexType name="dToolBarOverflowPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToolBarOverflowPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToolBarOverflowPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToolBarOverflowPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToolBarOverflowPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cToolBarOverflowPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peToolBarOverflowPanel">
		<xs:choice>
			<xs:element name="ToolBarOverflowPanel.WrapWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the recommended width for an overflow ToolBar before items flow to the next line.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarOverflowPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dToolBarPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToolBarPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToolBarPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToolBarPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StackPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cToolBarPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peToolBarPanel">
		<xs:choice>
			<xs:element name="ToolBarPanel.CanHorizontallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a StackPanel can scroll in the horizontal dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.CanVerticallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether content can scroll in the vertical dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.ScrollOwner" type="dScrollViewerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the container that controls scrolling behavior in this StackPanel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTrack" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Track.DecreaseRepeatButton" type="dRepeatButtonContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the RepeatButton that decreases the Value property of the Track.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Thumb" type="dThumbContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the Thumb control that is used to change the Value of a Track.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.IncreaseRepeatButton" type="dRepeatButtonContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the RepeatButton that increases the Value property of the Track class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum possible Value of the Track.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum possible Value of the Track.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current value of the Track as determined by the position of the Thumb control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.ViewportSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the size of the part of the scrollable content that is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.IsDirectionReversed" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the direction of increasing Value is reversed from the default direction.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Track.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TrackAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUniformGrid" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peUniformGrid" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cUniformGrid" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peUniformGrid" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="UniformGridAttributes"/>
	</xs:complexType>
	<xs:group name="cUniformGrid">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peUniformGrid">
		<xs:choice>
			<xs:element name="UniformGrid.FirstColumn" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of leading blank cells in the first row of the grid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Columns" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of columns that are in the grid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Rows" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of rows that are in the grid.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UniformGrid.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dIFrameworkInputElement" >
		<xs:attributeGroup ref="IFrameworkInputElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFrameworkContentElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FrameworkContentElement.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkContentElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFrameworkElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FrameworkElement.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dWindow" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peWindow" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cWindow" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peWindow" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="WindowAttributes"/>
	</xs:complexType>
	<xs:group name="cWindow">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peWindow">
		<xs:choice>
			<xs:element name="Window.AllowsTransparency" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the whether a window&apos;s client area supports transparency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Icon" type="dImageSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a window&apos;s icon.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Top" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the window&apos;s top edge, in relation to the desktop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Left" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the window&apos;s left edge, in relation to the desktop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ShowInTaskbar" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value whether the window has a task bar button.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Owner" type="dWindowContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Window that owns this Window.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.OwnedWindows" type="dWindowCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of windows for which this window is the owner.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.DialogResult" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the dialog result value, which is the value that is returned from the ShowDialog method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Topmost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a window appears in the topmost z order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Window.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dWindowContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gWindow" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dApplication" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Application.Windows" type="dWindowCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the instantiated windows in an application. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Application.MainWindow" type="dWindowContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the main window of the application.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Application.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of application-scope resources, such as styles and brushes.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Application.StartupUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a UI that is automatically shown when an application starts.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ApplicationAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAttachedPropertyBrowsableForChildrenAttribute" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  .NET Framework attribute is applied.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AttachedPropertyBrowsableForChildrenAttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dResourceKey" >
		<xs:attributeGroup ref="ResourceKeyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dComponentResourceKey" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ComponentResourceKey.ResourceId" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a unique identifier (ID) to differentiate this key from others associated with this type.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ComponentResourceKeyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFrameworkTemplate" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFrameworkTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFrameworkTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFrameworkTemplate" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="FrameworkTemplateAttributes"/>
	</xs:complexType>
	<xs:group name="cFrameworkTemplate">
		<xs:choice>
			<xs:group ref="gFrameworkElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFrameworkTemplate">
		<xs:choice>
			<xs:element name="FrameworkTemplate.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dCondition" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Condition.Property" type="dDependencyPropertyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the property of the condition. This is only applicable to MultiTrigger objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Condition.Binding" type="dBindingBaseContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the binding that specifies the property of the condition. This is only applicable to MultiDataTrigger objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Condition.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the condition.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ConditionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dConditionCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Condition" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ConditionCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataTemplate" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DataTemplateAttributes"/>
	</xs:complexType>
	<xs:group name="cDataTemplate">
		<xs:choice>
			<xs:group ref="gFrameworkElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDataTemplate">
		<xs:choice>
			<xs:element name="DataTemplate.DataType" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the type for which this DataTemplate is intended. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataTemplate.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataTemplate.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDataTemplateContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gDataTemplate" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTriggerAction" >
		<xs:attributeGroup ref="TriggerActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCornerRadius" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CornerRadius.TopLeft" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the radius of the top left corner. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CornerRadius.TopRight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the radius of the top right corner. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CornerRadius.BottomRight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the radius of the bottom right corner. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CornerRadius.BottomLeft" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the radius of the bottom left corner. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CornerRadiusAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTemplateKey" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TemplateKey.DataType" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the type for which the template is designed. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TemplateKeyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataTemplateKey" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DataTemplateKey.DataType" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the type for which the template is designed. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TemplateKeyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTriggerBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TriggerBase.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TriggerBase.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataTrigger" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DataTriggerAttributes"/>
	</xs:complexType>
	<xs:group name="cDataTrigger">
		<xs:choice>
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDataTrigger">
		<xs:choice>
			<xs:element name="DataTrigger.Binding" type="dBindingBaseContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the binding that produces the property value of the data object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataTrigger.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to be compared with the property value of the data object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataTrigger.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataTrigger.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDependencyPropertyHelper" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDynamicResource" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DynamicResource.ResourceKey" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key specified by this dynamic resource reference. The key is used to lookup a resource in resource dictionaries, by means of an intermediate expression. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DynamicResourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSetterBase" >
		<xs:attributeGroup ref="SetterBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEventSetter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EventSetter.Event" type="dRoutedEventContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the particular routed event that this EventSetter responds to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventSetter.Handler" type="dDelegateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the reference to a handler for a routed event in the setter. </xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EventSetterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEventTrigger" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="EventTrigger.RoutedEvent" type="dRoutedEventContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the RoutedEvent that will activate this trigger.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventTrigger.Actions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of actions to apply when the event occurs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventTrigger.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventTrigger.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EventTriggerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFigureLength" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FigureLengthAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFrameworkElementFactory" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkElementFactoryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFrameworkPropertyMetadata" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="FrameworkPropertyMetadata.AffectsMeasure" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.AffectsArrange" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.AffectsParentMeasure" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element&apos;s layout during layout engine operations. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.AffectsParentArrange" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element&apos;s layout during layout engine operations. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.AffectsRender" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.Inherits" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the value of the dependency property is inheritable. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.OverridesInheritanceBehavior" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.IsNotDataBindable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the dependency property supports data binding. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.BindsTwoWayByDefault" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the property binds two-way by default. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.Journal" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.IsAnimationProhibited" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value declaring whether animations should be disabled on the dependency property where the containing metadata instance is applied. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.DefaultValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets and sets the default value of the dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.PropertyChangedCallback" type="dPropertyChangedCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a PropertyChangedCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FrameworkPropertyMetadata.CoerceValueCallback" type="dCoerceValueCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a CoerceValueCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkPropertyMetadataAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGridLength" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridLengthAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHierarchicalDataTemplate" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peHierarchicalDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cHierarchicalDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peHierarchicalDataTemplate" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="HierarchicalDataTemplateAttributes"/>
	</xs:complexType>
	<xs:group name="cHierarchicalDataTemplate">
		<xs:choice>
			<xs:group ref="gFrameworkElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peHierarchicalDataTemplate">
		<xs:choice>
			<xs:element name="HierarchicalDataTemplate.ItemsSource" type="dBindingBaseContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HierarchicalDataTemplate.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DataTemplate to apply to the ItemTemplate property on a generated HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to indicate how to display items from the next level in the data hierarchy.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HierarchicalDataTemplate.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DataTemplateSelector to apply to the ItemTemplateSelector property on a generated HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to indicate how to select a template to display items from the next level in the data hierarchy.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HierarchicalDataTemplate.DataType" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the type for which this DataTemplate is intended. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HierarchicalDataTemplate.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HierarchicalDataTemplate.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dLocalization" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLogicalTreeHelper" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMultiDataTrigger" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMultiDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMultiDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMultiDataTrigger" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MultiDataTriggerAttributes"/>
	</xs:complexType>
	<xs:group name="cMultiDataTrigger">
		<xs:choice>
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMultiDataTrigger">
		<xs:choice>
			<xs:element name="MultiDataTrigger.Conditions" type="dConditionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of Condition objects. Changes to property values are applied when all the conditions in the collection are met.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiDataTrigger.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiDataTrigger.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMultiTrigger" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMultiTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMultiTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMultiTrigger" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MultiTriggerAttributes"/>
	</xs:complexType>
	<xs:group name="cMultiTrigger">
		<xs:choice>
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMultiTrigger">
		<xs:choice>
			<xs:element name="MultiTrigger.Conditions" type="dConditionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of Condition objects. Changes to property values are applied when all of the conditions in the collection are met.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiTrigger.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiTrigger.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dNameScope" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPropertyPath" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PropertyPath.PathParameters" type="dCollectionOfObjectContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the list of parameters to use when the path refers to indexed parameters.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PropertyPathAttributes"/>
	</xs:complexType>
	<xs:complexType name="dResourceDictionary" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ResourceDictionaryAttributes"/>
	</xs:complexType>
	<xs:group name="cResourceDictionary">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peResourceDictionary">
		<xs:choice>
			<xs:element name="ResourceDictionary.MergedDictionaries" type="dCollectionOfResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of the ResourceDictionary dictionaries that constitute the various resource dictionaries in the merged dictionaries.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResourceDictionary.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the uniform resource identifier (URI) to load resources from.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResourceDictionary.IsReadOnly" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether this ResourceDictionary is read-only. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResourceDictionary.Keys" type="dICollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of all keys contained in this ResourceDictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ResourceDictionary.Values" type="dICollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets a collection of all values associated with keys contained in this ResourceDictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dResourceDictionaryContent" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peResourceDictionary" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dColorConvertedBitmapExtension" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStaticResource" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="StaticResource.ResourceKey" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the key value passed by this static resource reference. They key is used  to return the object matching that key in resource dictionaries. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StaticResourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSetter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Setter.Property" type="dDependencyPropertyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the property to which the Value will be applied.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Setter.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to apply to the property that is specified by this Setter.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SetterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSetterBaseCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SetterBaseCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStyle" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStyle" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStyle" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStyle" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StyleAttributes"/>
	</xs:complexType>
	<xs:group name="cStyle">
		<xs:choice>
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStyle">
		<xs:choice>
			<xs:element name="Style.BasedOn" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a defined style that is the basis of the current style.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Style.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerBase objects that apply property values based on specified conditions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Style.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this style.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dStyleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Style" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStyleTypedPropertyAttribute" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StyleTypedPropertyAttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSystemColors" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSystemFonts" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSystemParameters" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTemplateBindingExpression" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TemplateBindingExpressionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTemplateBinding" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TemplateBinding.Property" type="dDependencyPropertyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the property being bound to. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TemplateBinding.Converter" type="dIValueConverterContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the converter that interprets between source and target of a binding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TemplateBinding.ConverterParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the parameter to pass to the converter.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TemplateBindingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTemplatePartAttribute" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TemplatePartAttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThemeDictionary" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThemeDictionaryAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThickness" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Thickness.Left" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width, in pixels, of the left side of the bounding rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thickness.Top" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width, in pixels, of the upper side of the bounding rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thickness.Right" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width, in pixels, of the right side of the bounding rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Thickness.Bottom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width, in pixels, of the lower side of the bounding rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ThicknessAttributes"/>
	</xs:complexType>
	<xs:complexType name="dThicknessContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Thickness" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTrigger" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTrigger" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTrigger" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TriggerAttributes"/>
	</xs:complexType>
	<xs:group name="cTrigger">
		<xs:choice>
			<xs:group ref="gSetterBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTrigger">
		<xs:choice>
			<xs:element name="Trigger.Property" type="dDependencyPropertyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the property that returns the value that is compared with the Value property of the trigger. The comparison is a reference equality check.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Trigger.Value" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to be compared with the property value of the element. The comparison is a reference equality check.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Trigger.EnterActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes active. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Trigger.ExitActions" type="dTriggerActionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerAction objects to apply when the trigger object becomes inactive. This property does not apply to the EventTrigger class.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTriggerActionCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTriggerAction" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TriggerActionCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTriggerActionCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTriggerAction" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTriggerCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gTriggerBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dWindowCollection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="WindowCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dWindowCollectionContent" >
	</xs:complexType>
	<xs:complexType name="dIValueConverter" >
	</xs:complexType>
	<xs:complexType name="dIValueConverterContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dIMultiValueConverter" >
	</xs:complexType>
	<xs:complexType name="dCollectionViewGroup" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CollectionViewGroup.Items" type="dReadOnlyObservableCollectionOfObjectContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the immediate items contained in this group.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="CollectionViewGroupAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBindingBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="BindingBase.FallbackValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to use when the binding is unable to return a value.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BindingBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBindingBaseContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBinding" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Binding.ValidationRules" type="dCollectionOfValidationRuleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of rules that check the validity of the user input.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.Path" type="dPropertyPathContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the path to the binding source property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.NotifyOnSourceUpdated" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the SourceUpdated event when a value is transferred from the binding target to the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.NotifyOnTargetUpdated" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the TargetUpdated event when a value is transferred from the binding source to the binding target.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.NotifyOnValidationError" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the Error attached event on the bound object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.Converter" type="dIValueConverterContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the converter to use.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.ConverterParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the parameter to pass to the Converter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.ConverterCulture" type="dCultureInfoContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the culture in which to evaluate the converter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.Source" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object to use as the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.RelativeSource" type="dRelativeSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the binding source by specifying its location relative to the position of the binding target.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.IsAsync" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the Binding should get and set values asynchronously.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.AsyncState" type="dObjectContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="Binding.BindsDirectlyToSource" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to evaluate the Path relative to the data item or the DataSourceProvider object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.UpdateSourceExceptionFilter" type="dUpdateSourceExceptionFilterCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an ExceptionValidationRule with your binding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Binding.FallbackValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to use when the binding is unable to return a value.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BindingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUpdateSourceExceptionFilterCallbackContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBindingExpressionBase" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BindingExpressionBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBindingExpression" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BindingExpressionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBindingOperations" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCollectionContainer" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CollectionContainer.Collection" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection to add. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CollectionContainerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCollectionViewSource" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CollectionViewSource.Source" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection object from which to create this view. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CollectionViewSource.Culture" type="dCultureInfoContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the culture that is used for operations such as sorting and comparisons.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CollectionViewSource.SortDescriptions" type="dSortDescriptionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of SortDescription objects that describes how the items in the collection are sorted in the view.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CollectionViewSource.GroupDescriptions" type="dObservableCollectionOfGroupDescriptionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of GroupDescription objects that describes how the items in the collection are grouped in the view.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CollectionViewSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCompositeCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="CompositeCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMultiBinding" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMultiBinding" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMultiBinding" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMultiBinding" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MultiBindingAttributes"/>
	</xs:complexType>
	<xs:group name="cMultiBinding">
		<xs:choice>
			<xs:group ref="gBindingBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMultiBinding">
		<xs:choice>
			<xs:element name="MultiBinding.NotifyOnSourceUpdated" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the SourceUpdated event when a value is transferred from the binding target to the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.NotifyOnTargetUpdated" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the TargetUpdated event when a value is transferred from the binding source to the binding target.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.NotifyOnValidationError" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to raise the Error attached event on the bound element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.Converter" type="dIMultiValueConverterContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the converter to use to convert the source values to or from the target value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.ConverterParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an optional parameter to pass to a converter as additional information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.ConverterCulture" type="dCultureInfoContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the CultureInfo object that applies to any converter assigned to bindings wrapped by the MultiBinding or on the MultiBinding itself.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.ValidationRules" type="dCollectionOfValidationRuleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of ValidationRule objects for this instance of MultiBinding.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.UpdateSourceExceptionFilter" type="dUpdateSourceExceptionFilterCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated the ExceptionValidationRule with your MultiBinding object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiBinding.FallbackValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to use when the binding is unable to return a value.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMultiBindingExpression" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MultiBindingExpression.BindingExpressions" type="dReadOnlyCollectionOfBindingExpressionBaseContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of BindingExpression objects in this instance of MultiBindingExpression.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MultiBindingExpressionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dObjectDataProvider" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ObjectDataProvider.ObjectInstance" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object instance used as the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectDataProvider.IsAsynchronous" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to perform object creation in a worker thread or in the active context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectDataProvider.IsInitialLoadEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectDataProviderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPriorityBinding" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePriorityBinding" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPriorityBinding" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePriorityBinding" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PriorityBindingAttributes"/>
	</xs:complexType>
	<xs:group name="cPriorityBinding">
		<xs:choice>
			<xs:group ref="gBindingBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePriorityBinding">
		<xs:choice>
			<xs:element name="PriorityBinding.FallbackValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value to use when the binding is unable to return a value.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPriorityBindingExpression" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PriorityBindingExpression.BindingExpressions" type="dReadOnlyCollectionOfBindingExpressionBaseContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of BindingExpression objects inside this instance of PriorityBindingExpression.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PriorityBindingExpressionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPropertyGroupDescription" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PropertyGroupDescription.Converter" type="dIValueConverterContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PropertyGroupDescription.GroupNames" type="dObservableCollectionOfObjectContent" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PropertyGroupDescriptionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRelativeSource" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RelativeSource.AncestorLevel" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the level of ancestor to look for, in FindAncestor mode. Use 1 to indicate the one nearest to the binding target element.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RelativeSourceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRelativeSourceContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dXmlNamespaceMappingCollection" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="XmlNamespaceMappingCollectionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dXmlDataProvider" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peXmlDataProvider" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cXmlDataProvider" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peXmlDataProvider" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="XmlDataProviderAttributes"/>
	</xs:complexType>
	<xs:group name="cXmlDataProvider">
		<xs:choice>
			<xs:element ref="x:XData" />
		</xs:choice>
	</xs:group>
	<xs:group name="peXmlDataProvider">
		<xs:choice>
			<xs:element name="XmlDataProvider.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Uri of the XML data file to use as the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XmlDataProvider.Document" type="dXmlDocumentContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the XmlDocument to use as the binding source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XmlDataProvider.XmlNamespaceManager" type="dXmlNamespaceManagerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the XmlNamespaceManager used to run XPath queries.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XmlDataProvider.IsAsynchronous" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether node collection creation will be performed in a worker thread or in active context.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="XmlDataProvider.IsInitialLoadEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dXmlNamespaceMapping" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="XmlNamespaceMapping.Uri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Uri of the namespace for which to create a mapping.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="XmlNamespaceMappingAttributes"/>
	</xs:complexType>
	<xs:complexType name="dNavigationWindow" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="NavigationWindow.SandboxExternalContent" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a NavigationWindow isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ShowsNavigationUI" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a NavigationWindow shows its navigation UI. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.AllowsTransparency" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the whether a window&apos;s client area supports transparency.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Icon" type="dImageSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a window&apos;s icon.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Top" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the window&apos;s top edge, in relation to the desktop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Left" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the window&apos;s left edge, in relation to the desktop.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ShowInTaskbar" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value whether the window has a task bar button.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Owner" type="dWindowContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Window that owns this Window.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.OwnedWindows" type="dWindowCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of windows for which this window is the owner.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.DialogResult" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the dialog result value, which is the value that is returned from the ShowDialog method.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Topmost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a window appears in the topmost z order.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NavigationWindow.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="NavigationWindowAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCustomContentState" >
		<xs:attributeGroup ref="CustomContentStateAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIProvideCustomContentState" >
	</xs:complexType>
	<xs:complexType name="dJournalEntryListConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dJournalEntryUnifiedViewConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPageFunctionBase" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePageFunctionBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPageFunctionBase" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePageFunctionBase" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="PageFunctionBaseAttributes"/>
	</xs:complexType>
	<xs:group name="cPageFunctionBase">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePageFunctionBase">
		<xs:choice>
			<xs:element name="PageFunctionBase.RemoveFromJournal" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the page function should not be added to navigation history.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.WindowHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.WindowWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the background for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.ShowsNavigationUI" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the navigation UI of a NavigationWindow or Microsoft Internet Explorer 6 is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.KeepAlive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether an instance of a Page is retained in navigation history. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the foreground for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font family. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the control template for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunctionBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPageFunctionOfT" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePageFunctionOfT" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPageFunctionOfT" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePageFunctionOfT" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:TypeArguments"  />
		<xs:attributeGroup ref="PageFunctionOfTAttributes"/>
	</xs:complexType>
	<xs:group name="cPageFunctionOfT">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePageFunctionOfT">
		<xs:choice>
			<xs:element name="PageFunction.RemoveFromJournal" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the page function should not be added to navigation history.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.WindowHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.WindowWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the background for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.ShowsNavigationUI" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the navigation UI of a NavigationWindow or Microsoft Internet Explorer 6 is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.KeepAlive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether an instance of a Page is retained in navigation history. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the foreground for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font family. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the control template for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageFunction.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dShape" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Shape.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shape.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dEllipse" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Ellipse.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ellipse.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="EllipseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLine" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Line.X1" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the Line start point. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Y1" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the Line start point. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.X2" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the Line end point. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Y2" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the Line end point. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Line.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPath" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Path.Data" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Geometry that specifies the shape to be drawn. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Path.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PathAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPolygon" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Polygon.Points" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection that contains the vertex points of the polygon. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polygon.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PolygonAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPolyline" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Polyline.Points" type="dPointCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection that contains the vertex points of the Polyline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Polyline.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PolylineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectangle" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rectangle.RadiusX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.RadiusY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Stroke" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.StrokeThickness" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.StrokeMiterLimit" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.StrokeDashOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.StrokeDashArray" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rectangle.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectangleAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAdorner" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Adorner.IsClipEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether clipping of the adorner is enabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Adorner.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="AdornerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAdornerDecorator" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peAdornerDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cAdornerDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peAdornerDecorator" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AdornerDecoratorAttributes"/>
	</xs:complexType>
	<xs:group name="cAdornerDecorator">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peAdornerDecorator">
		<xs:choice>
			<xs:element name="AdornerDecorator.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornerDecorator.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTextElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextElement.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInline" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Inline.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Inline.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAnchoredBlock" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peAnchoredBlock" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cAnchoredBlock" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peAnchoredBlock" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="AnchoredBlockAttributes"/>
	</xs:complexType>
	<xs:group name="cAnchoredBlock">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peAnchoredBlock">
		<xs:choice>
			<xs:element name="AnchoredBlock.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnchoredBlock.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBlock" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Block.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Block.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:complexType>
	<xs:complexType name="dBlockCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBlockUIContainer" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peBlockUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cBlockUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peBlockUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BlockUIContainerAttributes"/>
	</xs:complexType>
	<xs:group name="cBlockUIContainer">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peBlockUIContainer">
		<xs:choice>
			<xs:element name="BlockUIContainer.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BlockUIContainer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dSpan" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peSpan" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cSpan" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peSpan" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpanAttributes"/>
	</xs:complexType>
	<xs:group name="cSpan">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peSpan">
		<xs:choice>
			<xs:element name="Span.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Span.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBold" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peBold" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cBold" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peBold" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpanAttributes"/>
	</xs:complexType>
	<xs:group name="cBold">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peBold">
		<xs:choice>
			<xs:element name="Bold.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bold.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDocumentReference" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DocumentReference.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the uniform resource identifier (URI) for this document reference.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentReference.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DocumentReferenceAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFixedDocumentSequence" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFixedDocumentSequence" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFixedDocumentSequence" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFixedDocumentSequence" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FixedDocumentSequenceAttributes"/>
	</xs:complexType>
	<xs:group name="cFixedDocumentSequence">
		<xs:choice>
			<xs:element ref="DocumentReference" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peFixedDocumentSequence">
		<xs:choice>
			<xs:element name="FixedDocumentSequence.PrintTicket" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the PrintTicket that is associated with this document sequence. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocumentSequence.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dEditingCommands" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFigure" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFigure" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFigure" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFigure" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FigureAttributes"/>
	</xs:complexType>
	<xs:group name="cFigure">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFigure">
		<xs:choice>
			<xs:element name="Figure.HorizontalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the distance that a Figure is offset from its baseline in the horizontal direction. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.VerticalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the distance that a Figure is offset from its baseline in the vertical direction. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.CanDelayPlacement" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this figure can delay its placement in the flow of content. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Width" type="dFigureLengthContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the width of a Figure element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Height" type="dFigureLengthContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the height of a Figure element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Figure.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFixedDocument" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFixedDocument" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFixedDocument" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFixedDocument" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FixedDocumentAttributes"/>
	</xs:complexType>
	<xs:group name="cFixedDocument">
		<xs:choice>
			<xs:element ref="PageContent" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peFixedDocument">
		<xs:choice>
			<xs:element name="FixedDocument.PrintTicket" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the PrintTicket that is associated with this document. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedDocument.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFixedPage" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFixedPage" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFixedPage" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFixedPage" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FixedPageAttributes"/>
	</xs:complexType>
	<xs:group name="cFixedPage">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFixedPage">
		<xs:choice>
			<xs:element name="FixedPage.PrintTicket" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the PrintTicket that is associated with the page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used for rendering the page background. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.ContentBox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the bounding rectangle of the content area; that is, the area of the page within the margins, if any.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.BleedBox" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a rectangle defining the overflow area for bleeds, registration marks, and crop marks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPage.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFloater" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFloater" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFloater" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFloater" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FloaterAttributes"/>
	</xs:complexType>
	<xs:group name="cFloater">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFloater">
		<xs:choice>
			<xs:element name="Floater.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the width of a Floater object. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Floater.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFlowDocument" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFlowDocument" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFlowDocument" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFlowDocument" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FlowDocumentAttributes"/>
	</xs:complexType>
	<xs:group name="cFlowDocument">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFlowDocument">
		<xs:choice>
			<xs:element name="FlowDocument.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font style for the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font-stretching characteristics for the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font size for the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the text contents of the FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the text of a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ColumnWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum desired width of the columns within a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ColumnGap" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the column gap value, which indicates the spacing between columns in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.IsColumnWidthFlexible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the ColumnWidth value is flexible or fixed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ColumnRuleWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a the column rule width.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ColumnRuleBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to draw the rule between columns.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.IsOptimalParagraphEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether optimal paragraph layout is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.PageWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred width for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.MinPageWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum width for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.MaxPageWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.PageHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred height for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.MinPageHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.MaxPageHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height for pages in a FlowDocument.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.PagePadding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the thickness of padding space between the boundaries of a page and the page&apos;s content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocument.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGlyphs" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Glyphs.Fill" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the sets the Brush that is used for the fill of the Glyphs class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.FontRenderingEmSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the em size used for rendering the Glyphs class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.OriginX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the x origin for the Glyphs object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.OriginY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the x origin for the Glyphs object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.FontUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Uri that represents the location of the font used for rendering the Glyphs class.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.IsSideways" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Determines whether to rotate the Glyphs object.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.BidiLevel" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the bidirectional nesting level of Glyphs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Glyphs.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GlyphsAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHyperlink" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peHyperlink" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cHyperlink" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peHyperlink" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="HyperlinkAttributes"/>
	</xs:complexType>
	<xs:group name="cHyperlink">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peHyperlink">
		<xs:choice>
			<xs:element name="Hyperlink.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a command to associate with the Hyperlink.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets command parameters associated with the command specified by the Command property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a target element on which to execute the command specified by the Command property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.NavigateUri" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a URI to navigate to when the Hyperlink is activated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Hyperlink.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dInlineCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInlineUIContainer" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInlineUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInlineUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInlineUIContainer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InlineUIContainerAttributes"/>
	</xs:complexType>
	<xs:group name="cInlineUIContainer">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInlineUIContainer">
		<xs:choice>
			<xs:element name="InlineUIContainer.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InlineUIContainer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dItalic" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peItalic" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cItalic" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peItalic" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpanAttributes"/>
	</xs:complexType>
	<xs:group name="cItalic">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peItalic">
		<xs:choice>
			<xs:element name="Italic.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Italic.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dLineBreak" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="LineBreak.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineBreak.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinkTarget" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LinkTargetAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLinkTargetCollection" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LinkTargetCollectionAttributes"/>
	</xs:complexType>
	<xs:group name="cLinkTargetCollection">
		<xs:choice>
			<xs:element ref="LinkTarget" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peLinkTargetCollection">
		<xs:choice>
			<xs:element name="LinkTargetCollection.Capacity" type="dInt32Container" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dList" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peList" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cList" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peList" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListAttributes"/>
	</xs:complexType>
	<xs:group name="cList">
		<xs:choice>
			<xs:element ref="ListItem" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peList">
		<xs:choice>
			<xs:element name="List.MarkerOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the desired distance between the contents of each ListItem element, and the near edge of the list marker.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.StartIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets of sets the starting index for labeling the items in an ordered list.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="List.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListItem" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peListItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cListItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peListItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListItemAttributes"/>
	</xs:complexType>
	<xs:group name="cListItem">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peListItem">
		<xs:choice>
			<xs:element name="ListItem.SiblingListItems" type="dListItemCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a ListItemCollection that contains ListItem elements that are siblings to this ListItem element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListItemCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ListItem" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPageContent" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePageContent" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPageContent" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePageContent" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PageContentAttributes"/>
	</xs:complexType>
	<xs:group name="cPageContent">
		<xs:choice>
			<xs:element ref="FixedPage" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="pePageContent">
		<xs:choice>
			<xs:element name="PageContent.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the uniform resource identifier (URI) to the FixedPage content data stream. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.LinkTargets" type="dLinkTargetCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of LinkTarget elements that identify the hyperlink-addressable locations on the page. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PageContent.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dParagraph" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peParagraph" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cParagraph" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peParagraph" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ParagraphAttributes"/>
	</xs:complexType>
	<xs:group name="cParagraph">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peParagraph">
		<xs:choice>
			<xs:element name="Paragraph.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a TextDecorationCollection that contains text decorations to apply to this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.TextIndent" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how far to indent the first line of a Paragraph. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.MinOrphanLines" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the minimum number of lines that can be left before the break when a Paragraph is broken by a page break or column break. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.MinWidowLines" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the minimum number of lines that can be placed after the break when a Paragraph is broken by a page break or column break. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.KeepWithNext" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a break may occur between this paragraph and the next paragraph. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.KeepTogether" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the text of the paragraph may be broken by a page break or column break. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paragraph.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRun" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Run.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Run.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RunAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSection" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peSection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cSection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peSection" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SectionAttributes"/>
	</xs:complexType>
	<xs:group name="cSection">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peSection">
		<xs:choice>
			<xs:element name="Section.HasTrailingParagraphBreakOnPaste" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not a trailing paragraph break should be inserted after the last paragraph when placing the contents of a root Section element on the clipboard.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Section.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTable" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTable" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTable" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTable" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TableAttributes"/>
	</xs:complexType>
	<xs:group name="cTable">
		<xs:choice>
			<xs:element ref="TableRowGroup" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peTable">
		<xs:choice>
			<xs:element name="Table.Columns" type="dTableColumnCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TableColumnCollection object that contains the columns hosted by the table.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.CellSpacing" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of spacing between cells in a table.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.SiblingBlocks" type="dBlockCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a BlockCollection that contains Block elements that are siblings to this Block element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.BreakPageBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.BreakColumnBefore" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Table.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTableCell" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTableCell" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTableCell" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTableCell" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TableCellAttributes"/>
	</xs:complexType>
	<xs:group name="cTableCell">
		<xs:choice>
			<xs:group ref="gBlock" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTableCell">
		<xs:choice>
			<xs:element name="TableCell.ColumnSpan" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of columns that the TableCell should span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.RowSpan" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of rows that the TableCell should span.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableCell.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTableColumn" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TableColumn.Width" type="dGridLengthContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or set the width of a TableColumn element. The Width property measures the sum of the Column&apos;s content, padding, and border from side to side. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the background Brush used to fill the content of the TableColumn. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableColumn.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TableColumnAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTableRow" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTableRow" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTableRow" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTableRow" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TableRowAttributes"/>
	</xs:complexType>
	<xs:group name="cTableRow">
		<xs:choice>
			<xs:element ref="TableCell" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peTableRow">
		<xs:choice>
			<xs:element name="TableRow.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRow.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTableRowGroup" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTableRowGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTableRowGroup" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTableRowGroup" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TableRowGroupAttributes"/>
	</xs:complexType>
	<xs:group name="cTableRowGroup">
		<xs:choice>
			<xs:element ref="TableRow" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peTableRowGroup">
		<xs:choice>
			<xs:element name="TableRowGroup.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TableRowGroup.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTextEffectResolver" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUnderline" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peUnderline" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cUnderline" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peUnderline" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SpanAttributes"/>
	</xs:complexType>
	<xs:group name="cUnderline">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peUnderline">
		<xs:choice>
			<xs:element name="Underline.SiblingInlines" type="dInlineCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets an InlineCollection that contains the Inline elements that are siblings (peers) to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Underline.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dZoomPercentageConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDefinitionBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DefinitionBase.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DefinitionBase.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DefinitionBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dColumnDefinition" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ColumnDefinition.Width" type="dGridLengthContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a column that is defined by the ColumnDefinition. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the minimum width of a ColumnDefinition. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the maximum width of a ColumnDefinition. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ColumnDefinition.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ColumnDefinitionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRowDefinition" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="RowDefinition.Height" type="dGridLengthContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the calculated height of a RowDefinition element, or sets the GridLength value of a row that is defined by the RowDefinition. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the minimum allowable height of a RowDefinition. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the maximum height of a RowDefinition.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of input bindings that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RowDefinition.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects that are associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RowDefinitionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:complexType>
	<xs:group name="cPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePanel">
		<xs:choice>
			<xs:element name="Panel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Panel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dCanvas" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peCanvas" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cCanvas" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peCanvas" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:complexType>
	<xs:group name="cCanvas">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peCanvas">
		<xs:choice>
			<xs:element name="Canvas.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Canvas.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dControl" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Control.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Control.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:complexType>
	<xs:complexType name="dContentControl" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peContentControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cContentControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peContentControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cContentControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peContentControl">
		<xs:choice>
			<xs:element name="ContentControl.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDataTemplateSelector" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataTemplateSelectorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="DataTemplateSelector" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dItemsControl" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:complexType>
	<xs:group name="cItemsControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peItemsControl">
		<xs:choice>
			<xs:element name="ItemsControl.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dContextMenu" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peContextMenu" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cContextMenu" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peContextMenu" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContextMenuAttributes"/>
	</xs:complexType>
	<xs:group name="cContextMenu">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peContextMenu">
		<xs:choice>
			<xs:element name="ContextMenu.HorizontalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets where along the x-direction to place the ContextMenu with respect to the parent control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.VerticalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets where along the y-direction to place the ContextMenu with respect to the parent control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.IsOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or set the IsOpen property of a context menu. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.PlacementTarget" type="dUIElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the PlacementTarget property of a ContextMenu. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.PlacementRectangle" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the PlacementRectangle property of a ContextMenu. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.HasDropShadow" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the context menu has a drop shadow.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.CustomPopupPlacementCallback" type="dCustomPopupPlacementCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a callback that indicates where a ContextMenu should be placed on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.StaysOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the ContextMenu should close automatically. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContextMenu.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dContextMenuContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ContextMenu" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dHeaderedItemsControl" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peHeaderedItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cHeaderedItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peHeaderedItemsControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="HeaderedItemsControlAttributes"/>
	</xs:complexType>
	<xs:group name="cHeaderedItemsControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peHeaderedItemsControl">
		<xs:choice>
			<xs:element name="HeaderedItemsControl.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the item that labels the control. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the template used to display the contents of the control&apos;s header. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedItemsControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMenuItem" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMenuItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMenuItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMenuItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MenuItemAttributes"/>
	</xs:complexType>
	<xs:group name="cMenuItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMenuItem">
		<xs:choice>
			<xs:element name="MenuItem.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the parameter to pass to the Command property of a MenuItem. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="MenuItem.IsSubmenuOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the submenu containing the MenuItem control&apos;s children is open.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsCheckable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a value that indicates whether a MenuItem can be checked.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsChecked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the MenuItem is checked. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.StaysOpenOnClick" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that the submenu in which this MenuItem is located should not close when this item is clicked. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Icon" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the icon that appears in a MenuItem. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsSuspendingPopupAnimation" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a menu suspends animations on its Popup control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the item that labels the control. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the template used to display the contents of the control&apos;s header. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MenuItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFlowDocumentScrollViewer" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFlowDocumentScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFlowDocumentScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFlowDocumentScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FlowDocumentScrollViewerAttributes"/>
	</xs:complexType>
	<xs:group name="cFlowDocumentScrollViewer">
		<xs:choice>
			<xs:element ref="FlowDocument" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peFlowDocumentScrollViewer">
		<xs:choice>
			<xs:element name="FlowDocumentScrollViewer.Zoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current zoom level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MaxZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentScrollViewer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MinZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentScrollViewer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.ZoomIncrement" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the zoom increment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.IsSelectionEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not selection of content within the FlowDocumentScrollViewer is enabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.IsToolBarVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the FlowDocumentScrollViewer toolbar is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentScrollViewer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFlowDocumentPageViewer" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFlowDocumentPageViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFlowDocumentPageViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFlowDocumentPageViewer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FlowDocumentPageViewerAttributes"/>
	</xs:complexType>
	<xs:group name="cFlowDocumentPageViewer">
		<xs:choice>
			<xs:group ref="gIDocumentPaginatorSource" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peFlowDocumentPageViewer">
		<xs:choice>
			<xs:element name="FlowDocumentPageViewer.Zoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MaxZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MinZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.ZoomIncrement" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the zoom increment. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.PageViews" type="dReadOnlyCollectionOfDocumentPageViewContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a read-only collection of the active DocumentPageView objects contained within the viewer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentPageViewer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dControlTemplate" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peControlTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cControlTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peControlTemplate" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControlTemplateAttributes"/>
	</xs:complexType>
	<xs:group name="cControlTemplate">
		<xs:choice>
			<xs:group ref="gFrameworkElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peControlTemplate">
		<xs:choice>
			<xs:element name="ControlTemplate.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of TriggerBase objects that apply property changes or perform actions based on specified conditions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ControlTemplate.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dControlTemplateContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ControlTemplate" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dAccessText" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="AccessText.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font family to use with the AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style to use with the AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font weight to use with the AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a FontStretch property that selects a normal, condensed, or expanded font from a FontFamily. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size to use with the AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that draws the text content of the element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that fills the content area. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the decorations that are added to the text of an AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the effects that are added to the text of an AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line box. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.BaselineOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that adjusts the baseline offset position of text in an AccessText element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessText.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AccessTextAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAdornedElementPlaceholder" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peAdornedElementPlaceholder" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cAdornedElementPlaceholder" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peAdornedElementPlaceholder" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AdornedElementPlaceholderAttributes"/>
	</xs:complexType>
	<xs:group name="cAdornedElementPlaceholder">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peAdornedElementPlaceholder">
		<xs:choice>
			<xs:element name="AdornedElementPlaceholder.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdornedElementPlaceholder.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBooleanToVisibilityConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDecorator" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDecorator" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDecorator" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:complexType>
	<xs:group name="cDecorator">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDecorator">
		<xs:choice>
			<xs:element name="Decorator.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Decorator.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBorder" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peBorder" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cBorder" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peBorder" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="BorderAttributes"/>
	</xs:complexType>
	<xs:group name="cBorder">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peBorder">
		<xs:choice>
			<xs:element name="Border.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the relative Thickness of a Border. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Thickness value that describes the amount of space between a Border and its child element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.CornerRadius" type="dCornerRadiusContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that represents the degree to which the corners of a Border are rounded. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that draws the outer border color. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush that fills the area between the bounds of a Border. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Border.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dBorderGapMaskConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dButton" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peButton" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ButtonAttributes"/>
	</xs:complexType>
	<xs:group name="cButton">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peButton">
		<xs:choice>
			<xs:element name="Button.IsDefault" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Button is the default button. A user invokes the default button by pressing the Enter key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.IsCancel" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Button is the Cancel button. A user can activate the Cancel button by pressing the Escape key. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Button.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dCheckBox" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peCheckBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cCheckBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peCheckBox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToggleButtonAttributes"/>
	</xs:complexType>
	<xs:group name="cCheckBox">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peCheckBox">
		<xs:choice>
			<xs:element name="CheckBox.IsChecked" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the ToggleButton is checked. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.IsThreeState" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Determines whether the control supports two or three states. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CheckBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dComboBox" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peComboBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cComboBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peComboBox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ComboBoxAttributes"/>
	</xs:complexType>
	<xs:group name="cComboBox">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peComboBox">
		<xs:choice>
			<xs:element name="ComboBox.MaxDropDownHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the maximum height for a combo box drop-down. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsDropDownOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the drop-down for a combo box is currently open.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsEditable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that enables or disables editing of the text in text box of the ComboBox. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsReadOnly" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SelectionBoxItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the item that is displayed in the selection box.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SelectionBoxItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the item template of the selection box content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.StaysOpenOnEdit" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether a ComboBox that is open and displays a drop-down control will remain open when a user clicks the TextBox. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsSynchronizedWithCurrentItem" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SelectedIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SelectedItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SelectedValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListBoxItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peListBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cListBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peListBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListBoxItemAttributes"/>
	</xs:complexType>
	<xs:group name="cListBoxItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peListBoxItem">
		<xs:choice>
			<xs:element name="ListBoxItem.IsSelected" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBoxItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dComboBoxItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peComboBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cComboBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peComboBoxItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ComboBoxItemAttributes"/>
	</xs:complexType>
	<xs:group name="cComboBoxItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peComboBoxItem">
		<xs:choice>
			<xs:element name="ComboBoxItem.IsSelected" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ComboBoxItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dContentPresenter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ContentPresenter.RecognizesAccessKey" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the ContentPresenter should use AccessText in its style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Content" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data used to generate the child elements of a ContentPresenter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template used to display the content of the control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DataTemplateSelector, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ContentPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentPresenterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dContextMenuService" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDockPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDockPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDockPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDockPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DockPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cDockPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDockPanel">
		<xs:choice>
			<xs:element name="DockPanel.LastChildFill" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the last child element within a DockPanel stretches to fill the remaining available space. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DockPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dDocumentViewer" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peDocumentViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cDocumentViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peDocumentViewer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DocumentViewerAttributes"/>
	</xs:complexType>
	<xs:group name="cDocumentViewer">
		<xs:choice>
			<xs:group ref="gIDocumentPaginatorSource" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peDocumentViewer">
		<xs:choice>
			<xs:element name="DocumentViewer.HorizontalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the horizontal scroll position.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.VerticalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the vertical scroll position. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.ShowPageBorders" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether drop-shadow page borders are displayed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Zoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the document zoom percentage.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.MaxPagesAcross" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value defining the maximum number of page columns to display.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.VerticalPageSpacing" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the vertical spacing between displayed pages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.HorizontalPageSpacing" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the horizontal space between pages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.PageViews" type="dReadOnlyCollectionOfDocumentPageViewContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a read-only collection of the active DocumentPageView objects contained within the viewer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DocumentViewer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dValidationRule" >
		<xs:attributeGroup ref="ValidationRuleAttributes"/>
	</xs:complexType>
	<xs:complexType name="dExceptionValidationRule" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValidationRuleAttributes"/>
	</xs:complexType>
	<xs:complexType name="dHeaderedContentControl" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peHeaderedContentControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cHeaderedContentControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peHeaderedContentControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="HeaderedContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cHeaderedContentControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peHeaderedContentControl">
		<xs:choice>
			<xs:element name="HeaderedContentControl.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data used for the header of each control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Template used to display the content of the control&apos;s header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom logic for choosing the template used to display the Header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HeaderedContentControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dExpander" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peExpander" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cExpander" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peExpander" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ExpanderAttributes"/>
	</xs:complexType>
	<xs:group name="cExpander">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peExpander">
		<xs:choice>
			<xs:element name="Expander.IsExpanded" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the Expander content window is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data used for the header of each control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Template used to display the content of the control&apos;s header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom logic for choosing the template used to display the Header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Expander.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFlowDocumentReader" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peFlowDocumentReader" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cFlowDocumentReader" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peFlowDocumentReader" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FlowDocumentReaderAttributes"/>
	</xs:complexType>
	<xs:group name="cFlowDocumentReader">
		<xs:choice>
			<xs:element ref="FlowDocument" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peFlowDocumentReader">
		<xs:choice>
			<xs:element name="FlowDocumentReader.IsPageViewEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not SinglePage is available as a viewing mode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsTwoPageViewEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not FacingPages is available as a viewing mode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsScrollViewEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not SingleColumnScroll is available as a viewing mode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsFindEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not the Find routed command is enabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsPrintEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether or not the Print routed command is enabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Zoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current zoom level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MaxZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentReader.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MinZoom" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentReader.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.ZoomIncrement" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the zoom increment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FlowDocumentReader.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dFrame" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Frame.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.SandboxExternalContent" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a Frame isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Frame.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGrid" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGrid" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGrid" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGrid" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridAttributes"/>
	</xs:complexType>
	<xs:group name="cGrid">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGrid">
		<xs:choice>
			<xs:element name="Grid.ShowGridLines" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether grid lines are visible within this Grid. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.ColumnDefinitions" type="dColumnDefinitionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a ColumnDefinitionCollection defined on this instance of Grid. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.RowDefinitions" type="dRowDefinitionCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a RowDefinitionCollection defined on this instance of Grid. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Grid.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dViewBase" >
		<xs:attributeGroup ref="ViewBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGridView" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGridView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGridView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGridView" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridViewAttributes"/>
	</xs:complexType>
	<xs:group name="cGridView">
		<xs:choice>
			<xs:element ref="GridViewColumn" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peGridView">
		<xs:choice>
			<xs:element name="GridView.ColumnHeaderContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to apply to column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridView.ColumnHeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a template to use to display the column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridView.ColumnHeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the selector object that provides logic for selecting a template to use for each column header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridView.AllowsColumnReorder" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether columns in a GridView can be reordered by a drag-and-drop operation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridView.ColumnHeaderContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a ContextMenu for the GridView.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridView.ColumnHeaderToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the content of a tooltip that appears when the mouse pointer pauses over one of the column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGridViewColumn" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGridViewColumn" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGridViewColumn" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGridViewColumn" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridViewColumnAttributes"/>
	</xs:complexType>
	<xs:group name="cGridViewColumn">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGridViewColumn">
		<xs:choice>
			<xs:element name="GridViewColumn.HeaderContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style to use for the header of the GridViewColumn.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template to use to display the content of the column header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DataTemplateSelector that provides logic to select the template to use to display the column header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.DisplayMemberBinding" type="dBindingBaseContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data item to bind to for this column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.CellTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template to use to display the contents of a column cell.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.CellTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a DataTemplateSelector that determines the template to use to display cells in a column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the column.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumn.ActualWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the actual width of a GridViewColumn.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGridViewColumnCollection" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="GridViewColumn" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObservableCollectionOfTAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGridViewColumnCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="GridViewColumn" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGridViewColumnHeader" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGridViewColumnHeader" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGridViewColumnHeader" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGridViewColumnHeader" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridViewColumnHeaderAttributes"/>
	</xs:complexType>
	<xs:group name="cGridViewColumnHeader">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGridViewColumnHeader">
		<xs:choice>
			<xs:element name="GridViewColumnHeader.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewColumnHeader.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGridViewHeaderRowPresenter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GridViewHeaderRowPresenter.ColumnHeaderContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style to use for the column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ColumnHeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template to use to display the column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a DataTemplateSelector that provides logic that selects the data template to use to display a column header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.AllowsColumnReorder" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether columns can change positions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ColumnHeaderContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a ContextMenu for the column headers.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ColumnHeaderToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the content for a tooltip for the column header row.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Columns" type="dGridViewColumnCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a GridViewColumnCollection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewHeaderRowPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridViewHeaderRowPresenterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGridViewRowPresenter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GridViewRowPresenter.Content" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data content to display in a row.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Columns" type="dGridViewColumnCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a GridViewColumnCollection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridViewRowPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridViewRowPresenterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGridSplitter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GridSplitter.ShowsPreview" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the GridSplitter control updates the column or row size as the user drags the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.PreviewStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style that customizes the appearance, effects, or other style characteristics for the GridSplitter control preview indicator that is displayed when the ShowsPreview property is set to true.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.KeyboardIncrement" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the distance that each press of an arrow key moves a GridSplitter control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.DragIncrement" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum distance that a user must drag a mouse to resize rows or columns with a GridSplitter control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GridSplitter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GridSplitterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGroupStyle" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GroupStyle.Panel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a template that creates the panel used to layout the items.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupStyle.ContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the style that is applied to the GroupItem generated for each item.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupStyle.ContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom selection logic for a style to apply to each generated GroupItem.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupStyle.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that is used to display the group header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupStyle.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom selection logic for a template that is used to display the group header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupStyle.HidesIfEmpty" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether items corresponding to empty groups should be displayed.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="GroupStyleAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGroupStyleSelectorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGroupBox" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGroupBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGroupBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGroupBox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="HeaderedContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cGroupBox">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGroupBox">
		<xs:choice>
			<xs:element name="GroupBox.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data used for the header of each control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Template used to display the content of the control&apos;s header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom logic for choosing the template used to display the Header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dGroupItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peGroupItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cGroupItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peGroupItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cGroupItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peGroupItem">
		<xs:choice>
			<xs:element name="GroupItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GroupItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dImage" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Image.Source" type="dImageSourceContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the ImageSource for the image. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Image.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ImageAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInkCanvas" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInkCanvas" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInkCanvas" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInkCanvas" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InkCanvasAttributes"/>
	</xs:complexType>
	<xs:group name="cInkCanvas">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInkCanvas">
		<xs:choice>
			<xs:element name="InkCanvas.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush used to fill the area between the borders of a InkCanvas.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Strokes" type="dStrokeCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of ink Stroke objects collected by the InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.DefaultDrawingAttributes" type="dDrawingAttributesContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the drawing attributes that are applied to new ink strokes made on the InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.EraserShape" type="dStylusShapeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the StylusShape used to point-erase ink from an InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.UseCustomCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether to override standard InkCanvas cursor functionality to support a custom cursor. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.MoveEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether the user is enabled to move selected ink strokes and/or elements on the InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.ResizeEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether the user is enabled to resize selected ink strokes and/or elements on the InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.DefaultStylusPointDescription" type="dStylusPointDescriptionContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the stylus point description for an InkCanvas. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.PreferredPasteFormats" type="dIEnumerableOfInkCanvasClipboardFormatContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the formats that can be pasted onto the InkCanvas.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkCanvas.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dInkPresenter" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peInkPresenter" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cInkPresenter" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peInkPresenter" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="InkPresenterAttributes"/>
	</xs:complexType>
	<xs:group name="cInkPresenter">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peInkPresenter">
		<xs:choice>
			<xs:element name="InkPresenter.Strokes" type="dStrokeCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets and sets the strokes that the InkPresenter displays.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InkPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dItemsPanelTemplate" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peItemsPanelTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cItemsPanelTemplate" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peItemsPanelTemplate" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkTemplateAttributes"/>
	</xs:complexType>
	<xs:group name="cItemsPanelTemplate">
		<xs:choice>
			<xs:group ref="gFrameworkElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peItemsPanelTemplate">
		<xs:choice>
			<xs:element name="ItemsPanelTemplate.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dItemsPanelTemplateContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ItemsPanelTemplate" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dItemsPresenter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ItemsPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemsPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dLabel" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peLabel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cLabel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peLabel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="LabelAttributes"/>
	</xs:complexType>
	<xs:group name="cLabel">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peLabel">
		<xs:choice>
			<xs:element name="Label.Target" type="dUIElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element that receives focus when the user presses the label&apos;s access key. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Label.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListBox" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peListBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cListBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peListBox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListBoxAttributes"/>
	</xs:complexType>
	<xs:group name="cListBox">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peListBox">
		<xs:choice>
			<xs:element name="ListBox.IsSynchronizedWithCurrentItem" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.SelectedIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.SelectedItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.SelectedValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListView" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peListView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cListView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peListView" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListViewAttributes"/>
	</xs:complexType>
	<xs:group name="cListView">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peListView">
		<xs:choice>
			<xs:element name="ListView.View" type="dViewBaseContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an object that defines how the data is styled and organized in a ListView control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.IsSynchronizedWithCurrentItem" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.SelectedIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.SelectedItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.SelectedValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListView.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dListViewItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peListViewItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cListViewItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peListViewItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ListBoxItemAttributes"/>
	</xs:complexType>
	<xs:group name="cListViewItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peListViewItem">
		<xs:choice>
			<xs:element name="ListViewItem.IsSelected" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ListViewItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMediaElement" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="MediaElement.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a media source on the MediaElement. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Clock" type="dMediaClockContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the clock associated with the MediaTimeline that controls media playback.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Volume" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the media&apos;s volume. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Balance" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a ratio of volume across speakers. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.IsMuted" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether the audio is muted. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.ScrubbingEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the MediaElement will update frames for seek operations while paused. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Position" type="dTimeSpanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current position of progress through the media&apos;s playback time.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.SpeedRatio" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the speed ratio of the media.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MediaElement.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MediaElementAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMenu" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peMenu" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cMenu" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peMenu" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MenuAttributes"/>
	</xs:complexType>
	<xs:group name="cMenu">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peMenu">
		<xs:choice>
			<xs:element name="Menu.IsMainMenu" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether this Menu receives a main menu activation notification. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Menu.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMenuScrollingVisibilityConverter" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPage" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="pePage" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cPage" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="pePage" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PageAttributes"/>
	</xs:complexType>
	<xs:group name="cPage">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="pePage">
		<xs:choice>
			<xs:element name="Page.WindowHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.WindowWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the host Window or NavigationWindow of a Page.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the background for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.ShowsNavigationUI" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the navigation UI of a NavigationWindow or Microsoft Internet Explorer 6 is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.KeepAlive" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether an instance of a Page is retained in navigation history. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the foreground for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font family. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the control template for a Page. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Page.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPasswordBox" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PasswordBox.PasswordChar" type="dCharContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the masking character for the PasswordBox.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.MaxLength" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum length for passwords to be handled by this PasswordBox.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PasswordBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PasswordBoxAttributes"/>
	</xs:complexType>
	<xs:complexType name="dScrollContentPresenter" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ScrollContentPresenter.CanContentScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates whether the content, if it supports IScrollInfo, should be allowed to control scrolling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.CanHorizontallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.CanVerticallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ScrollOwner" type="dScrollViewerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a ScrollViewer element that controls scrolling behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.RecognizesAccessKey" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the ContentPresenter should use AccessText in its style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Content" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the data used to generate the child elements of a ContentPresenter.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template used to display the content of the control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the DataTemplateSelector, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollContentPresenter.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ScrollContentPresenterAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStackPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="StackPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cStackPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peStackPanel">
		<xs:choice>
			<xs:element name="StackPanel.CanHorizontallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a StackPanel can scroll in the horizontal dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.CanVerticallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether content can scroll in the vertical dimension. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.ScrollOwner" type="dScrollViewerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the container that controls scrolling behavior in this StackPanel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StackPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dPrintDialog" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PrintDialog.PageRange" type="dPageRangeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the range of pages to print when PageRangeSelection is set to UserPages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrintDialog.UserPageRangeEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether users of the Print dialog box have the option to specify ranges of pages to print.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrintDialog.MinPage" type="dUInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the lowest page number that is allowed in page ranges.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrintDialog.MaxPage" type="dUInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the highest page number that is allowed in page ranges.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrintDialog.PrintTicket" type="dPrintTicketContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the PrintTicket that is used by the PrintDialog when the user clicks Print for the current print job.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PrintDialogAttributes"/>
	</xs:complexType>
	<xs:complexType name="dProgressBar" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="ProgressBar.IsIndeterminate" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets whether the ProgressBar shows actual values or generic, continuous progress feedback. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Minimum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Maximum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.LargeChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.SmallChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBar.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ProgressBarAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRadioButton" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRadioButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRadioButton" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRadioButton" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RadioButtonAttributes"/>
	</xs:complexType>
	<xs:group name="cRadioButton">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peRadioButton">
		<xs:choice>
			<xs:element name="RadioButton.IsChecked" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the ToggleButton is checked. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.IsThreeState" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Determines whether the control supports two or three states. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Command" type="dICommandContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.CommandParameter" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.CommandTarget" type="dIInputElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RadioButton.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dRichTextBox" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peRichTextBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cRichTextBox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peRichTextBox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RichTextBoxAttributes"/>
	</xs:complexType>
	<xs:group name="cRichTextBox">
		<xs:choice>
			<xs:element ref="FlowDocument" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peRichTextBox">
		<xs:choice>
			<xs:element name="RichTextBox.CaretPosition" type="dTextPointerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the position of the input caret.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.IsReadOnly" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.AcceptsReturn" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.AcceptsTab" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.IsUndoEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.AutoWordSelection" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RichTextBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dScrollViewer" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peScrollViewer" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ScrollViewerAttributes"/>
	</xs:complexType>
	<xs:group name="cScrollViewer">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peScrollViewer">
		<xs:choice>
			<xs:element name="ScrollViewer.CanContentScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether elements that support the IScrollInfo interface are allowed to scroll. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ScrollViewer.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dScrollViewerContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ScrollViewer" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStyleSelector" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dStyleSelectorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="StyleSelector" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dSeparator" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Separator.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Separator.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSlider" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Slider.IsDirectionReversed" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the direction of increasing value.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Delay" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of time in milliseconds that a RepeatButton waits, while it is pressed, before a command to move the Thumb executes, such as a DecreaseLarge command.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Interval" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount of time in milliseconds between increase or decrease commands when a user clicks the RepeatButton of a Slider.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.AutoToolTipPrecision" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the number of digits that are displayed to the right side of the decimal point for the Value of the Slider in a tooltip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsSnapToTickEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the Slider automatically moves the Thumb to the closest tick mark.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.TickFrequency" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the interval between tick marks.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Ticks" type="dDoubleCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the positions of the tick marks to display for a Slider.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsSelectionRangeEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the Slider displays a selection range along the Slider.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.SelectionStart" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the smallest value of a specified selection for a Slider.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.SelectionEnd" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the largest value of a specified selection for a Slider.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsMoveToPointEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates  whether the Thumb of a Slider moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the Slider track. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Minimum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Minimum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Maximum" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Maximum possible Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Value" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the current Value of the range element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.LargeChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.SmallChange" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Slider.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SliderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSoundPlayerAction" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="SoundPlayerAction.Source" type="dUriContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the audio source location.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SoundPlayerActionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTabControl" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTabControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTabControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTabControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TabControlAttributes"/>
	</xs:complexType>
	<xs:group name="cTabControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTabControl">
		<xs:choice>
			<xs:element name="TabControl.SelectedContent" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the content of the current selected TabItem. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SelectedContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets and sets the content template of the currently selected item. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SelectedContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1"/>
			<xs:element name="TabControl.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the content template to apply to TabItems that do not have a contenttemplate or contenttemplateselector property defined.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables an application writer to provide custom style selection logic.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.IsSynchronizedWithCurrentItem" type="dNullableOfBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SelectedIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SelectedItem" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SelectedValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTabItem" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTabItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTabItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTabItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TabItemAttributes"/>
	</xs:complexType>
	<xs:group name="cTabItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTabItem">
		<xs:choice>
			<xs:element name="TabItem.IsSelected" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a value that indicates whether the TabItem is selected. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data used for the header of each control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Template used to display the content of the control&apos;s header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables the application writer to provide custom logic for choosing the template used to display the Header.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TabItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTextBlock" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTextBlock" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTextBlock" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTextBlock" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextBlockAttributes"/>
	</xs:complexType>
	<xs:group name="cTextBlock">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 
			<xs:group ref="gInline" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTextBlock">
		<xs:choice>
			<xs:element name="TextBlock.BaselineOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the amount by which each line of text is offset from the baseline.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the preferred top-level font family for the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font style for the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font weight for the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font-stretching characteristics for the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the top-level font size for the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush to apply to the text contents of the TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a TextDecorationCollection that contains the effects to apply to the text of a TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.TextEffects" type="dTextEffectCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.LineHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a TextBlock.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.IsHyphenationEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBlock.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTextBox" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="TextBox.MinLines" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum number of visible lines to size to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MaxLines" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum number of visible lines to size to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MaxLength" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating the maximum number of characters that can be manually entered into the TextBox.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.SelectionLength" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating the number of characters in the current selection in the TextBox.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.SelectionStart" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a character index for the beginning of the current selection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.CaretIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the insertion position index of the caret.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.TextDecorations" type="dTextDecorationCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.IsReadOnly" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.AcceptsReturn" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.AcceptsTab" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.IsUndoEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.AutoWordSelection" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TextBox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TextBoxAttributes"/>
	</xs:complexType>
	<xs:complexType name="dToolBar" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToolBar" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToolBar" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToolBar" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToolBarAttributes"/>
	</xs:complexType>
	<xs:group name="cToolBar">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peToolBar">
		<xs:choice>
			<xs:element name="ToolBar.Band" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates where the toolbar should be located in the ToolBarTray. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.BandIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the band index number that indicates the position of the toolbar on the band. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.IsOverflowOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the ToolBar overflow area is currently visible. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the item that labels the control. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the template used to display the contents of the control&apos;s header. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBar.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dToolBarTray" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToolBarTray" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToolBarTray" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToolBarTray" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToolBarTrayAttributes"/>
	</xs:complexType>
	<xs:group name="cToolBarTray">
		<xs:choice>
			<xs:element ref="ToolBar" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peToolBarTray">
		<xs:choice>
			<xs:element name="ToolBarTray.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush to use for the background color of the ToolBarTray</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.IsLocked" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a ToolBar can be moved inside a ToolBarTray. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolBarTray.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dToolTip" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peToolTip" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cToolTip" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peToolTip" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ToolTipAttributes"/>
	</xs:complexType>
	<xs:group name="cToolTip">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peToolTip">
		<xs:choice>
			<xs:element name="ToolTip.HorizontalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset from left of the area that is specified for the ToolTip control.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.VerticalOffset" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the offset from the top of the area that is specified for the ToolTip control content.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.IsOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a ToolTip is visible.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.HasDropShadow" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the control has a drop shadow.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.PlacementTarget" type="dUIElementContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the UIElement relative to which the ToolTip is positioned when it opens.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.PlacementRectangle" type="dRectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the rectangular area relative to which the ToolTip control is positioned when it opens.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.CustomPopupPlacementCallback" type="dCustomPopupPlacementCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the delegate handler method to use to position the ToolTip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.StaysOpen" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether an open ToolTip remains open until the user clicks the mouse when the mouse is not over the ToolTip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToolTip.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dToolTipService" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dTreeView" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTreeView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTreeView" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTreeView" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TreeViewAttributes"/>
	</xs:complexType>
	<xs:group name="cTreeView">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTreeView">
		<xs:choice>
			<xs:element name="TreeView.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeView.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dTreeViewItem" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTreeViewItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTreeViewItem" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTreeViewItem" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="TreeViewItemAttributes"/>
	</xs:complexType>
	<xs:group name="cTreeViewItem">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peTreeViewItem">
		<xs:choice>
			<xs:element name="TreeViewItem.IsExpanded" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether the nested items in a TreeViewItem are expanded or collapsed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.IsSelected" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a TreeViewItem control is selected.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Header" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the item that labels the control. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.HeaderTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the template used to display the contents of the control&apos;s header. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.HeaderTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemsSource" type="dIEnumerableContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemContainerStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemContainerStyleSelector" type="dStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ItemsPanel" type="dItemsPanelTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.GroupStyle" type="dObservableCollectionOfGroupStyleContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of GroupStyle objects that define the appearance of each level of groups.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.GroupStyleSelector" type="dGroupStyleSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a method that enables you to provide custom selection logic for a GroupStyle to apply to each group in a collection. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.IsTextSearchEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeViewItem.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dUserControl" mixed="true" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peUserControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cUserControl" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peUserControl" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:complexType>
	<xs:group name="cUserControl">
		<xs:choice>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peUserControl">
		<xs:choice>
			<xs:element name="UserControl.ContentTemplate" type="dDataTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.ContentTemplateSelector" type="dDataTemplateSelectorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.BorderBrush" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.BorderThickness" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Foreground" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FontFamily" type="dFontFamilyContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FontSize" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FontStretch" type="dFontStretchContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FontStyle" type="dFontStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the font style. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FontWeight" type="dFontWeightContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.TabIndex" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.IsTabStop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Padding" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Template" type="dControlTemplateContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a control template. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserControl.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dValidation" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dViewbox" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peViewbox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cViewbox" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peViewbox" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ViewboxAttributes"/>
	</xs:complexType>
	<xs:group name="cViewbox">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peViewbox">
		<xs:choice>
			<xs:element name="Viewbox.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewbox.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dViewport3D" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peViewport3D" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cViewport3D" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peViewport3D" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Viewport3DAttributes"/>
	</xs:complexType>
	<xs:group name="cViewport3D">
		<xs:choice>
			<xs:group ref="gVisual3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peViewport3D">
		<xs:choice>
			<xs:element name="Viewport3D.Camera" type="dCameraContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a camera object that projects the 3-D contents of the Viewport3D to the 2-D surface of the Viewport3D. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Viewport3D.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dVirtualizingPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peVirtualizingPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cVirtualizingPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peVirtualizingPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attributeGroup ref="VirtualizingPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cVirtualizingPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peVirtualizingPanel">
		<xs:choice>
			<xs:element name="VirtualizingPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dVirtualizingStackPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peVirtualizingStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cVirtualizingStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peVirtualizingStackPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VirtualizingStackPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cVirtualizingStackPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peVirtualizingStackPanel">
		<xs:choice>
			<xs:element name="VirtualizingStackPanel.CanHorizontallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether a VirtualizingStackPanel can scroll in the horizontal dimension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.CanVerticallyScroll" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.ScrollOwner" type="dScrollViewerContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that identifies the container that controls scrolling behavior in this VirtualizingStackPanel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VirtualizingStackPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dWrapPanel" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peWrapPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cWrapPanel" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peWrapPanel" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="WrapPanelAttributes"/>
	</xs:complexType>
	<xs:group name="cWrapPanel">
		<xs:choice>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:group>
	<xs:group name="peWrapPanel">
		<xs:choice>
			<xs:element name="WrapPanel.ItemWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the width of all items that are contained within a WrapPanel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.ItemHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that specifies the height of all items that are contained within a WrapPanel.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Background" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.IsItemsHost" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Style" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.OverridesDefaultStyle" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Triggers" type="dTriggerCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets the collection of triggers established directly on this element, or in child elements. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Resources" type="dResourceDictionaryContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.DataContext" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Language" type="dXmlLanguageContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Tag" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.InputScope" type="dInputScopeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.LayoutTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.MinWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.MaxWidth" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.MinHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.MaxHeight" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Margin" type="dThicknessContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.FocusVisualStyle" type="dStyleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Cursor" type="dCursorContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.ForceCursor" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.ToolTip" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.ContextMenu" type="dContextMenuContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.InputBindings" type="dInputBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets the collection of input bindings associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.CommandBindings" type="dCommandBindingCollectionContent" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets a collection of CommandBinding objects associated with this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.AllowDrop" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.RenderSize" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.RenderTransform" type="dTransformContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.RenderTransformOrigin" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Opacity" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.OpacityMask" type="dBrushContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.BitmapEffect" type="dBitmapEffectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.BitmapEffectInput" type="dBitmapEffectInputContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.ClipToBounds" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Clip" type="dGeometryContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.SnapsToDevicePixels" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.IsEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.IsHitTestVisible" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WrapPanel.Focusable" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dMatrix" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Matrix.M11" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the first row and first column of this Matrix structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix.M12" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the value of the first row and second column of this Matrix structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix.M21" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the value of the second row and first column of this Matrix structure.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix.M22" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the second row and second column of this Matrix structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix.OffsetX" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and first column of this Matrix structure.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Matrix.OffsetY" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the value of the third row and second column of this Matrix structure. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="MatrixAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMatrixContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Matrix" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDisableDpiAwarenessAttribute" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="AttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyInterop" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dKeyValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dModifierKeysValueSerializer" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPoint" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Point.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the X-coordinate value of this Point structure. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Point.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Y-coordinate value of this Point. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PointAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPointContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Point" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dSize" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Size.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Width of this instance of Size. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Size.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the Height of this instance of Size. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="SizeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dSizeContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Size" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dVector" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Vector.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the X component of this vector. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Vector.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Y component of this vector. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="VectorAttributes"/>
	</xs:complexType>
	<xs:complexType name="dVectorContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Vector" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dRect" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Rect.Location" type="dPointContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the position of the rectangle&apos;s top-left corner.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect.Size" type="dSizeContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the Width and Height of the rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect.X" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the location of the rectangle&apos;s left side. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect.Y" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the location of the rectangle&apos;s top side. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect.Width" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the width of the rectangle.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Rect.Height" type="dDoubleContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets or sets the height of this rectangle. </xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="RectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dRectContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Rect" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDependencyProperty" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DependencyPropertyAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDependencyPropertyContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="DependencyProperty" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDependencyObject" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAttachedPropertyBrowsableAttribute" >
		<xs:attributeGroup ref="AttachedPropertyBrowsableAttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dPropertyMetadata" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="PropertyMetadata.DefaultValue" type="dObjectContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation> Gets and sets the default value of the dependency property. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PropertyMetadata.PropertyChangedCallback" type="dPropertyChangedCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a PropertyChangedCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PropertyMetadata.CoerceValueCallback" type="dCoerceValueCallbackContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a reference to a CoerceValueCallback implementation specified in this metadata.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="PropertyMetadataAttributes"/>
	</xs:complexType>
	<xs:complexType name="dExpression" mixed="true" >
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="ExpressionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dFreezable" >
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:complexType>
	<xs:complexType name="dWeakEventManager" >
		<xs:attributeGroup ref="WeakEventManagerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIWeakEventListener" >
	</xs:complexType>
	<xs:complexType name="dCoerceValueCallbackContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInt32Rect" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="Int32Rect.X" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the x-coordinate of the top-left corner of the rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Rect.Y" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the y-coordinate of the top-left corner of the rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Rect.Width" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the width of the rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Int32Rect.Height" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the height of the rectangle.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attribute ref="x:Class"  />
		<xs:attribute ref="x:Subclass"  />
		<xs:attribute ref="x:Key"/>
		<xs:attribute ref="x:Name"/>
		<xs:attributeGroup ref="Int32RectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dInt32RectContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Int32Rect" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPropertyChangedCallbackContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDispatcherObject" >
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dValueSerializer" >
		<xs:attributeGroup ref="ValueSerializerAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIComponentConnector" >
	</xs:complexType>
	<xs:complexType name="dINameScope" >
	</xs:complexType>
	<xs:complexType name="dInternalTypeHelper" >
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:complexType>
	<xs:complexType name="dIXamlTypeResolver" >
	</xs:complexType>
	<xs:complexType name="dMarkupExtension" >
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDataSourceProvider" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="DataSourceProvider.IsInitialLoadEnabled" type="dBooleanContainer" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
		<xs:attributeGroup ref="DataSourceProviderAttributes"/>
	</xs:complexType>
	<xs:complexType name="dGroupDescription" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="GroupDescription.GroupNames" type="dObservableCollectionOfObjectContent" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attributeGroup ref="GroupDescriptionAttributes"/>
	</xs:complexType>
	<xs:complexType name="dUriContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dObjectContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dValueType" >
		<xs:attributeGroup ref="ValueTypeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dAttribute" >
		<xs:attributeGroup ref="AttributeAttributes"/>
	</xs:complexType>
	<xs:complexType name="dMulticastDelegate" >
		<xs:attributeGroup ref="MulticastDelegateAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDelegate" >
		<xs:attributeGroup ref="DelegateAttributes"/>
	</xs:complexType>
	<xs:complexType name="dDelegateContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gDelegate" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dEnum" >
		<xs:attributeGroup ref="EnumAttributes"/>
	</xs:complexType>
	<xs:complexType name="dNullableOfInt32Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBooleanContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDoubleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInt32Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCollectionBase" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="CollectionBase.Capacity" type="dInt32Container" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
		<xs:attributeGroup ref="CollectionBaseAttributes"/>
	</xs:complexType>
	<xs:complexType name="dCultureInfoContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dXmlNamespaceManagerContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gXmlNamespaceManager" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dIXmlSerializable" >
	</xs:complexType>

<!-- Group Section #1 -->

	<xs:group name="gAnimatable">
		<xs:choice>
			<xs:element ref="sgAnimatable"/>
			<xs:element ref="TextDecoration"/>
			<xs:element ref="TextDecorationCollection"/>
			<xs:group ref="gTimeline" minOccurs="0"/>
			<xs:element ref="TimelineCollection"/>
			<xs:group ref="gPathSegment" minOccurs="0"/>
			<xs:group ref="gBrush" minOccurs="0"/>
			<xs:group ref="gGeometry" minOccurs="0"/>
			<xs:element ref="DashStyle"/>
			<xs:group ref="gDrawing" minOccurs="0"/>
			<xs:element ref="DrawingCollection"/>
			<xs:group ref="gImageSource" minOccurs="0"/>
			<xs:group ref="gBitmapEffect" minOccurs="0"/>
			<xs:group ref="gGeneralTransform" minOccurs="0"/>
			<xs:element ref="BitmapEffectInput"/>
			<xs:element ref="BitmapEffectCollection"/>
			<xs:element ref="GeneralTransformCollection"/>
			<xs:element ref="GeometryCollection"/>
			<xs:element ref="GradientStop"/>
			<xs:element ref="GradientStopCollection"/>
			<xs:element ref="PathFigure"/>
			<xs:element ref="PathFigureCollection"/>
			<xs:element ref="PathSegmentCollection"/>
			<xs:element ref="Pen"/>
			<xs:element ref="TextEffect"/>
			<xs:element ref="TextEffectCollection"/>
			<xs:element ref="TransformCollection"/>
			<xs:element ref="GuidelineSet"/>
			<xs:element ref="MediaPlayer"/>
			<xs:group ref="gTransform3D" minOccurs="0"/>
			<xs:group ref="gModel3D" minOccurs="0"/>
			<xs:group ref="gRotation3D" minOccurs="0"/>
			<xs:group ref="gCamera" minOccurs="0"/>
			<xs:group ref="gMaterial" minOccurs="0"/>
			<xs:group ref="gGeometry3D" minOccurs="0"/>
			<xs:element ref="MaterialCollection"/>
			<xs:element ref="Model3DCollection"/>
			<xs:element ref="Transform3DCollection"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gClock">
		<xs:choice>
			<xs:element name="sgClock" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gTimeline">
		<xs:choice>
			<xs:element ref="sgTimeline"/>
			<xs:group ref="gAnimationTimeline" minOccurs="0"/>
			<xs:group ref="gTimelineGroup" minOccurs="0"/>
			<xs:element ref="MediaTimeline"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gAnimationTimeline">
		<xs:choice>
			<xs:element ref="sgAnimationTimeline"/>
			<xs:group ref="gDoubleAnimationBase" minOccurs="0"/>
			<xs:group ref="gBooleanAnimationBase" minOccurs="0"/>
			<xs:group ref="gByteAnimationBase" minOccurs="0"/>
			<xs:group ref="gCharAnimationBase" minOccurs="0"/>
			<xs:group ref="gColorAnimationBase" minOccurs="0"/>
			<xs:group ref="gDecimalAnimationBase" minOccurs="0"/>
			<xs:group ref="gInt16AnimationBase" minOccurs="0"/>
			<xs:group ref="gInt32AnimationBase" minOccurs="0"/>
			<xs:group ref="gInt64AnimationBase" minOccurs="0"/>
			<xs:group ref="gMatrixAnimationBase" minOccurs="0"/>
			<xs:group ref="gObjectAnimationBase" minOccurs="0"/>
			<xs:group ref="gPoint3DAnimationBase" minOccurs="0"/>
			<xs:group ref="gPointAnimationBase" minOccurs="0"/>
			<xs:group ref="gQuaternionAnimationBase" minOccurs="0"/>
			<xs:group ref="gRectAnimationBase" minOccurs="0"/>
			<xs:group ref="gRotation3DAnimationBase" minOccurs="0"/>
			<xs:group ref="gSingleAnimationBase" minOccurs="0"/>
			<xs:group ref="gSizeAnimationBase" minOccurs="0"/>
			<xs:group ref="gStringAnimationBase" minOccurs="0"/>
			<xs:group ref="gVector3DAnimationBase" minOccurs="0"/>
			<xs:group ref="gVectorAnimationBase" minOccurs="0"/>
			<xs:group ref="gThicknessAnimationBase" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDoubleAnimationBase">
		<xs:choice>
			<xs:element ref="sgDoubleAnimationBase"/>
			<xs:element ref="DoubleAnimationUsingPath"/>
			<xs:element ref="DoubleAnimation"/>
			<xs:element ref="DoubleAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBooleanAnimationBase">
		<xs:choice>
			<xs:element ref="sgBooleanAnimationBase"/>
			<xs:element ref="BooleanAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gByteAnimationBase">
		<xs:choice>
			<xs:element ref="sgByteAnimationBase"/>
			<xs:element ref="ByteAnimation"/>
			<xs:element ref="ByteAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gCharAnimationBase">
		<xs:choice>
			<xs:element ref="sgCharAnimationBase"/>
			<xs:element ref="CharAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gColorAnimationBase">
		<xs:choice>
			<xs:element ref="sgColorAnimationBase"/>
			<xs:element ref="ColorAnimation"/>
			<xs:element ref="ColorAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDecimalAnimationBase">
		<xs:choice>
			<xs:element ref="sgDecimalAnimationBase"/>
			<xs:element ref="DecimalAnimation"/>
			<xs:element ref="DecimalAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBooleanKeyFrame">
		<xs:choice>
			<xs:element ref="sgBooleanKeyFrame"/>
			<xs:element ref="DiscreteBooleanKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gByteKeyFrame">
		<xs:choice>
			<xs:element ref="sgByteKeyFrame"/>
			<xs:element ref="DiscreteByteKeyFrame"/>
			<xs:element ref="LinearByteKeyFrame"/>
			<xs:element ref="SplineByteKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gCharKeyFrame">
		<xs:choice>
			<xs:element ref="sgCharKeyFrame"/>
			<xs:element ref="DiscreteCharKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gColorKeyFrame">
		<xs:choice>
			<xs:element ref="sgColorKeyFrame"/>
			<xs:element ref="DiscreteColorKeyFrame"/>
			<xs:element ref="LinearColorKeyFrame"/>
			<xs:element ref="SplineColorKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDecimalKeyFrame">
		<xs:choice>
			<xs:element ref="sgDecimalKeyFrame"/>
			<xs:element ref="DiscreteDecimalKeyFrame"/>
			<xs:element ref="LinearDecimalKeyFrame"/>
			<xs:element ref="SplineDecimalKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDoubleKeyFrame">
		<xs:choice>
			<xs:element ref="sgDoubleKeyFrame"/>
			<xs:element ref="DiscreteDoubleKeyFrame"/>
			<xs:element ref="LinearDoubleKeyFrame"/>
			<xs:element ref="SplineDoubleKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt16KeyFrame">
		<xs:choice>
			<xs:element ref="sgInt16KeyFrame"/>
			<xs:element ref="DiscreteInt16KeyFrame"/>
			<xs:element ref="LinearInt16KeyFrame"/>
			<xs:element ref="SplineInt16KeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt32KeyFrame">
		<xs:choice>
			<xs:element ref="sgInt32KeyFrame"/>
			<xs:element ref="DiscreteInt32KeyFrame"/>
			<xs:element ref="LinearInt32KeyFrame"/>
			<xs:element ref="SplineInt32KeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt64KeyFrame">
		<xs:choice>
			<xs:element ref="sgInt64KeyFrame"/>
			<xs:element ref="DiscreteInt64KeyFrame"/>
			<xs:element ref="LinearInt64KeyFrame"/>
			<xs:element ref="SplineInt64KeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMatrixKeyFrame">
		<xs:choice>
			<xs:element ref="sgMatrixKeyFrame"/>
			<xs:element ref="DiscreteMatrixKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gObjectKeyFrame">
		<xs:choice>
			<xs:element ref="sgObjectKeyFrame"/>
			<xs:element ref="DiscreteObjectKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPointKeyFrame">
		<xs:choice>
			<xs:element ref="sgPointKeyFrame"/>
			<xs:element ref="DiscretePointKeyFrame"/>
			<xs:element ref="LinearPointKeyFrame"/>
			<xs:element ref="SplinePointKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPoint3DKeyFrame">
		<xs:choice>
			<xs:element ref="sgPoint3DKeyFrame"/>
			<xs:element ref="DiscretePoint3DKeyFrame"/>
			<xs:element ref="LinearPoint3DKeyFrame"/>
			<xs:element ref="SplinePoint3DKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gQuaternionKeyFrame">
		<xs:choice>
			<xs:element ref="sgQuaternionKeyFrame"/>
			<xs:element ref="DiscreteQuaternionKeyFrame"/>
			<xs:element ref="LinearQuaternionKeyFrame"/>
			<xs:element ref="SplineQuaternionKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRotation3DKeyFrame">
		<xs:choice>
			<xs:element ref="sgRotation3DKeyFrame"/>
			<xs:element ref="DiscreteRotation3DKeyFrame"/>
			<xs:element ref="LinearRotation3DKeyFrame"/>
			<xs:element ref="SplineRotation3DKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRectKeyFrame">
		<xs:choice>
			<xs:element ref="sgRectKeyFrame"/>
			<xs:element ref="DiscreteRectKeyFrame"/>
			<xs:element ref="LinearRectKeyFrame"/>
			<xs:element ref="SplineRectKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSingleKeyFrame">
		<xs:choice>
			<xs:element ref="sgSingleKeyFrame"/>
			<xs:element ref="DiscreteSingleKeyFrame"/>
			<xs:element ref="LinearSingleKeyFrame"/>
			<xs:element ref="SplineSingleKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSizeKeyFrame">
		<xs:choice>
			<xs:element ref="sgSizeKeyFrame"/>
			<xs:element ref="DiscreteSizeKeyFrame"/>
			<xs:element ref="LinearSizeKeyFrame"/>
			<xs:element ref="SplineSizeKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gStringKeyFrame">
		<xs:choice>
			<xs:element ref="sgStringKeyFrame"/>
			<xs:element ref="DiscreteStringKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVectorKeyFrame">
		<xs:choice>
			<xs:element ref="sgVectorKeyFrame"/>
			<xs:element ref="DiscreteVectorKeyFrame"/>
			<xs:element ref="LinearVectorKeyFrame"/>
			<xs:element ref="SplineVectorKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVector3DKeyFrame">
		<xs:choice>
			<xs:element ref="sgVector3DKeyFrame"/>
			<xs:element ref="DiscreteVector3DKeyFrame"/>
			<xs:element ref="LinearVector3DKeyFrame"/>
			<xs:element ref="SplineVector3DKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt16AnimationBase">
		<xs:choice>
			<xs:element ref="sgInt16AnimationBase"/>
			<xs:element ref="Int16Animation"/>
			<xs:element ref="Int16AnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt32AnimationBase">
		<xs:choice>
			<xs:element ref="sgInt32AnimationBase"/>
			<xs:element ref="Int32Animation"/>
			<xs:element ref="Int32AnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInt64AnimationBase">
		<xs:choice>
			<xs:element ref="sgInt64AnimationBase"/>
			<xs:element ref="Int64Animation"/>
			<xs:element ref="Int64AnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMatrixAnimationBase">
		<xs:choice>
			<xs:element ref="sgMatrixAnimationBase"/>
			<xs:element ref="MatrixAnimationUsingKeyFrames"/>
			<xs:element ref="MatrixAnimationUsingPath"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gObjectAnimationBase">
		<xs:choice>
			<xs:element ref="sgObjectAnimationBase"/>
			<xs:element ref="ObjectAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTimelineGroup">
		<xs:choice>
			<xs:element ref="sgTimelineGroup"/>
			<xs:group ref="gParallelTimeline" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gParallelTimeline">
		<xs:choice>
			<xs:element ref="sgParallelTimeline"/>
			<xs:element ref="Storyboard"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPoint3DAnimationBase">
		<xs:choice>
			<xs:element ref="sgPoint3DAnimationBase"/>
			<xs:element ref="Point3DAnimation"/>
			<xs:element ref="Point3DAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPointAnimationBase">
		<xs:choice>
			<xs:element ref="sgPointAnimationBase"/>
			<xs:element ref="PointAnimation"/>
			<xs:element ref="PointAnimationUsingKeyFrames"/>
			<xs:element ref="PointAnimationUsingPath"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gQuaternionAnimationBase">
		<xs:choice>
			<xs:element ref="sgQuaternionAnimationBase"/>
			<xs:element ref="QuaternionAnimation"/>
			<xs:element ref="QuaternionAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRectAnimationBase">
		<xs:choice>
			<xs:element ref="sgRectAnimationBase"/>
			<xs:element ref="RectAnimation"/>
			<xs:element ref="RectAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRotation3DAnimationBase">
		<xs:choice>
			<xs:element ref="sgRotation3DAnimationBase"/>
			<xs:element ref="Rotation3DAnimation"/>
			<xs:element ref="Rotation3DAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSingleAnimationBase">
		<xs:choice>
			<xs:element ref="sgSingleAnimationBase"/>
			<xs:element ref="SingleAnimation"/>
			<xs:element ref="SingleAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSizeAnimationBase">
		<xs:choice>
			<xs:element ref="sgSizeAnimationBase"/>
			<xs:element ref="SizeAnimation"/>
			<xs:element ref="SizeAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gStringAnimationBase">
		<xs:choice>
			<xs:element ref="sgStringAnimationBase"/>
			<xs:element ref="StringAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVector3DAnimationBase">
		<xs:choice>
			<xs:element ref="sgVector3DAnimationBase"/>
			<xs:element ref="Vector3DAnimation"/>
			<xs:element ref="Vector3DAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVectorAnimationBase">
		<xs:choice>
			<xs:element ref="sgVectorAnimationBase"/>
			<xs:element ref="VectorAnimation"/>
			<xs:element ref="VectorAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBitmapEffect">
		<xs:choice>
			<xs:element ref="sgBitmapEffect"/>
			<xs:element ref="BitmapEffectGroup"/>
			<xs:element ref="BevelBitmapEffect"/>
			<xs:element ref="BlurBitmapEffect"/>
			<xs:element ref="DropShadowBitmapEffect"/>
			<xs:element ref="EmbossBitmapEffect"/>
			<xs:element ref="OuterGlowBitmapEffect"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTransform3D">
		<xs:choice>
			<xs:element ref="sgTransform3D"/>
			<xs:group ref="gAffineTransform3D" minOccurs="0"/>
			<xs:element ref="MatrixTransform3D"/>
			<xs:element ref="Transform3DGroup"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gAffineTransform3D">
		<xs:choice>
			<xs:element ref="sgAffineTransform3D"/>
			<xs:element ref="RotateTransform3D"/>
			<xs:element ref="ScaleTransform3D"/>
			<xs:element ref="TranslateTransform3D"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gModel3D">
		<xs:choice>
			<xs:element ref="sgModel3D"/>
			<xs:group ref="gLight" minOccurs="0"/>
			<xs:element ref="GeometryModel3D"/>
			<xs:element ref="Model3DGroup"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gLight">
		<xs:choice>
			<xs:element ref="sgLight"/>
			<xs:element ref="AmbientLight"/>
			<xs:element ref="DirectionalLight"/>
			<xs:group ref="gPointLightBase" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRotation3D">
		<xs:choice>
			<xs:element ref="sgRotation3D"/>
			<xs:element ref="AxisAngleRotation3D"/>
			<xs:element ref="QuaternionRotation3D"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gCamera">
		<xs:choice>
			<xs:element ref="sgCamera"/>
			<xs:element ref="MatrixCamera"/>
			<xs:group ref="gProjectionCamera" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMaterial">
		<xs:choice>
			<xs:element ref="sgMaterial"/>
			<xs:element ref="DiffuseMaterial"/>
			<xs:element ref="EmissiveMaterial"/>
			<xs:element ref="MaterialGroup"/>
			<xs:element ref="SpecularMaterial"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGeometry3D">
		<xs:choice>
			<xs:element ref="sgGeometry3D"/>
			<xs:element ref="MeshGeometry3D"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gHitTestParameters3D">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gVisual3D">
		<xs:choice>
			<xs:element ref="sgVisual3D"/>
			<xs:element ref="ModelVisual3D"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPointLightBase">
		<xs:choice>
			<xs:element ref="sgPointLightBase"/>
			<xs:element ref="PointLight"/>
			<xs:element ref="SpotLight"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gProjectionCamera">
		<xs:choice>
			<xs:element ref="sgProjectionCamera"/>
			<xs:element ref="OrthographicCamera"/>
			<xs:element ref="PerspectiveCamera"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRayHitTestResult">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gContentElement">
		<xs:choice>
			<xs:element ref="sgContentElement"/>
			<xs:group ref="gFrameworkContentElement" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRoutedEventArgs">
		<xs:choice>
			<xs:element name="sgRoutedEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gDataObjectEventArgs">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gUIElement">
		<xs:choice>
			<xs:element ref="sgUIElement"/>
			<xs:group ref="gFrameworkElement" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gUIPropertyMetadata">
		<xs:choice>
			<xs:element ref="sgUIPropertyMetadata"/>
			<xs:element ref="FrameworkPropertyMetadata"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVisual">
		<xs:choice>
			<xs:element ref="sgVisual"/>
			<xs:group ref="gContainerVisual" minOccurs="0"/>
			<xs:group ref="gUIElement" minOccurs="0"/>
			<xs:element ref="Viewport3DVisual"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gContainerVisual">
		<xs:choice>
			<xs:element ref="sgContainerVisual"/>
			<xs:element ref="DrawingVisual"/>
			<xs:element ref="HostVisual"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gCompositionTarget">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gPathSegment">
		<xs:choice>
			<xs:element ref="sgPathSegment"/>
			<xs:element ref="ArcSegment"/>
			<xs:element ref="BezierSegment"/>
			<xs:element ref="LineSegment"/>
			<xs:element ref="PolyBezierSegment"/>
			<xs:element ref="PolyLineSegment"/>
			<xs:element ref="PolyQuadraticBezierSegment"/>
			<xs:element ref="QuadraticBezierSegment"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBrush">
		<xs:choice>
			<xs:element ref="sgBrush"/>
			<xs:group ref="gTileBrush" minOccurs="0"/>
			<xs:group ref="gGradientBrush" minOccurs="0"/>
			<xs:element ref="SolidColorBrush"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGeometry">
		<xs:choice>
			<xs:element ref="sgGeometry"/>
			<xs:element ref="CombinedGeometry"/>
			<xs:element ref="EllipseGeometry"/>
			<xs:element ref="GeometryGroup"/>
			<xs:element ref="LineGeometry"/>
			<xs:element ref="PathGeometry"/>
			<xs:element ref="RectangleGeometry"/>
			<xs:element ref="StreamGeometry"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDrawing">
		<xs:choice>
			<xs:element ref="sgDrawing"/>
			<xs:element ref="DrawingGroup"/>
			<xs:element ref="GeometryDrawing"/>
			<xs:element ref="GlyphRunDrawing"/>
			<xs:element ref="ImageDrawing"/>
			<xs:element ref="VideoDrawing"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTileBrush">
		<xs:choice>
			<xs:element ref="sgTileBrush"/>
			<xs:element ref="DrawingBrush"/>
			<xs:element ref="ImageBrush"/>
			<xs:element ref="VisualBrush"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gImageSource">
		<xs:choice>
			<xs:element ref="sgImageSource"/>
			<xs:element ref="DrawingImage"/>
			<xs:group ref="gBitmapSource" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGeneralTransform">
		<xs:choice>
			<xs:element ref="sgGeneralTransform"/>
			<xs:element ref="GeneralTransformGroup"/>
			<xs:group ref="gTransform" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGradientBrush">
		<xs:choice>
			<xs:element ref="sgGradientBrush"/>
			<xs:element ref="LinearGradientBrush"/>
			<xs:element ref="RadialGradientBrush"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTransform">
		<xs:choice>
			<xs:element ref="sgTransform"/>
			<xs:element ref="MatrixTransform"/>
			<xs:element ref="RotateTransform"/>
			<xs:element ref="ScaleTransform"/>
			<xs:element ref="SkewTransform"/>
			<xs:element ref="TransformGroup"/>
			<xs:element ref="TranslateTransform"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gHitTestParameters">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gHitTestResult">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gImageMetadata">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gTextRun">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gTextCollapsingProperties">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gTextEndOfLine">
		<xs:choice>
			<xs:element name="sgTextEndOfLine" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gTextMarkerProperties">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gInputDevice">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gInputEventArgs">
		<xs:choice>
			<xs:element name="sgInputEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gInputBinding">
		<xs:choice>
			<xs:element ref="KeyBinding"/>
			<xs:element ref="MouseBinding"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInputGesture">
		<xs:choice>
			<xs:element ref="sgInputGesture"/>
			<xs:element ref="KeyGesture"/>
			<xs:element ref="MouseGesture"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRoutedCommand">
		<xs:choice>
			<xs:element ref="sgRoutedCommand"/>
			<xs:element ref="RoutedUICommand"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTextComposition">
		<xs:choice>
			<xs:element name="sgTextComposition" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gKeyboardEventArgs">
		<xs:choice>
			<xs:element name="sgKeyboardEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gInputLanguageEventArgs">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gMouseEventArgs">
		<xs:choice>
			<xs:element name="sgMouseEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gNotifyInputEventArgs">
		<xs:choice>
			<xs:element name="sgNotifyInputEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gProcessInputEventArgs">
		<xs:choice>
			<xs:element name="sgProcessInputEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gStylusEventArgs">
		<xs:choice>
			<xs:element name="sgStylusEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gStylusPointProperty">
		<xs:choice>
			<xs:element name="sgStylusPointProperty" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gBitmapDecoder">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gBitmapEncoder">
		<xs:choice>
			<xs:element ref="sgBitmapEncoder"/>
			<xs:element ref="BmpBitmapEncoder"/>
			<xs:element ref="GifBitmapEncoder"/>
			<xs:element ref="JpegBitmapEncoder"/>
			<xs:element ref="PngBitmapEncoder"/>
			<xs:element ref="TiffBitmapEncoder"/>
			<xs:element ref="WmpBitmapEncoder"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBitmapSource">
		<xs:choice>
			<xs:element ref="sgBitmapSource"/>
			<xs:element ref="BitmapFrame"/>
			<xs:element ref="BitmapImage"/>
			<xs:element ref="CachedBitmap"/>
			<xs:element ref="ColorConvertedBitmap"/>
			<xs:element ref="CroppedBitmap"/>
			<xs:element ref="FormatConvertedBitmap"/>
			<xs:element ref="RenderTargetBitmap"/>
			<xs:element ref="TransformedBitmap"/>
			<xs:element ref="WriteableBitmap"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBitmapMetadata">
		<xs:choice>
			<xs:element name="sgBitmapMetadata" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gStylusShape">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gIncrementalHitTester">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gContentPosition">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gIDocumentPaginatorSource">
		<xs:choice>
			<xs:element ref="sgIDocumentPaginatorSource"/>
			<xs:element ref="FixedDocumentSequence"/>
			<xs:element ref="FixedDocument"/>
			<xs:element ref="FlowDocument"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gControllableStoryboardAction">
		<xs:choice>
			<xs:element ref="sgControllableStoryboardAction"/>
			<xs:element ref="PauseStoryboard"/>
			<xs:element ref="RemoveStoryboard"/>
			<xs:element ref="ResumeStoryboard"/>
			<xs:element ref="SeekStoryboard"/>
			<xs:element ref="SetStoryboardSpeedRatio"/>
			<xs:element ref="SkipStoryboardToFill"/>
			<xs:element ref="StopStoryboard"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gThicknessKeyFrame">
		<xs:choice>
			<xs:element ref="sgThicknessKeyFrame"/>
			<xs:element ref="DiscreteThicknessKeyFrame"/>
			<xs:element ref="LinearThicknessKeyFrame"/>
			<xs:element ref="SplineThicknessKeyFrame"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gThicknessAnimationBase">
		<xs:choice>
			<xs:element ref="sgThicknessAnimationBase"/>
			<xs:element ref="ThicknessAnimation"/>
			<xs:element ref="ThicknessAnimationUsingKeyFrames"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMenuBase">
		<xs:choice>
			<xs:element ref="sgMenuBase"/>
			<xs:element ref="ContextMenu"/>
			<xs:element ref="Menu"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDocumentViewerBase">
		<xs:choice>
			<xs:element ref="sgDocumentViewerBase"/>
			<xs:element ref="FlowDocumentPageViewer"/>
			<xs:element ref="DocumentViewer"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gButtonBase">
		<xs:choice>
			<xs:element ref="sgButtonBase"/>
			<xs:element ref="Button"/>
			<xs:group ref="gToggleButton" minOccurs="0"/>
			<xs:element ref="GridViewColumnHeader"/>
			<xs:element ref="RepeatButton"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gToggleButton">
		<xs:choice>
			<xs:element ref="sgToggleButton"/>
			<xs:element ref="CheckBox"/>
			<xs:element ref="RadioButton"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSelector">
		<xs:choice>
			<xs:element ref="sgSelector"/>
			<xs:element ref="ComboBox"/>
			<xs:group ref="gListBox" minOccurs="0"/>
			<xs:element ref="TabControl"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGridViewRowPresenterBase">
		<xs:choice>
			<xs:element ref="sgGridViewRowPresenterBase"/>
			<xs:element ref="GridViewHeaderRowPresenter"/>
			<xs:element ref="GridViewRowPresenter"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gThumb">
		<xs:choice>
			<xs:element ref="sgThumb"/>
			<xs:element ref="GridSplitter"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gRangeBase">
		<xs:choice>
			<xs:element ref="sgRangeBase"/>
			<xs:element ref="ScrollBar"/>
			<xs:element ref="ProgressBar"/>
			<xs:element ref="Slider"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTextBoxBase">
		<xs:choice>
			<xs:element ref="sgTextBoxBase"/>
			<xs:element ref="RichTextBox"/>
			<xs:element ref="TextBox"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gFrameworkContentElement">
		<xs:choice>
			<xs:element ref="sgFrameworkContentElement"/>
			<xs:group ref="gDefinitionBase" minOccurs="0"/>
			<xs:group ref="gTextElement" minOccurs="0"/>
			<xs:element ref="FixedDocumentSequence"/>
			<xs:element ref="FixedDocument"/>
			<xs:element ref="FlowDocument"/>
			<xs:element ref="TableColumn"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gFrameworkElement">
		<xs:choice>
			<xs:element ref="sgFrameworkElement"/>
			<xs:group ref="gShape" minOccurs="0"/>
			<xs:group ref="gPanel" minOccurs="0"/>
			<xs:group ref="gControl" minOccurs="0"/>
			<xs:element ref="AccessText"/>
			<xs:element ref="AdornedElementPlaceholder"/>
			<xs:group ref="gDecorator" minOccurs="0"/>
			<xs:group ref="gContentPresenter" minOccurs="0"/>
			<xs:group ref="gGridViewRowPresenterBase" minOccurs="0"/>
			<xs:element ref="Image"/>
			<xs:element ref="InkCanvas"/>
			<xs:element ref="ItemsPresenter"/>
			<xs:element ref="MediaElement"/>
			<xs:group ref="gPage" minOccurs="0"/>
			<xs:element ref="DocumentPageView"/>
			<xs:element ref="Popup"/>
			<xs:element ref="TickBar"/>
			<xs:element ref="Track"/>
			<xs:element ref="TextBlock"/>
			<xs:element ref="ToolBarTray"/>
			<xs:element ref="Viewport3D"/>
			<xs:element ref="DocumentReference"/>
			<xs:element ref="FixedPage"/>
			<xs:element ref="Glyphs"/>
			<xs:element ref="PageContent"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gWindow">
		<xs:choice>
			<xs:element ref="sgWindow"/>
			<xs:element ref="NavigationWindow"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gResourceKey">
		<xs:choice>
			<xs:element ref="sgResourceKey"/>
			<xs:element ref="ComponentResourceKey"/>
			<xs:group ref="gTemplateKey" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gFrameworkTemplate">
		<xs:choice>
			<xs:element ref="sgFrameworkTemplate"/>
			<xs:element ref="ControlTemplate"/>
			<xs:group ref="gDataTemplate" minOccurs="0"/>
			<xs:element ref="ItemsPanelTemplate"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDataTemplate">
		<xs:choice>
			<xs:element ref="sgDataTemplate"/>
			<xs:element ref="HierarchicalDataTemplate"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTriggerAction">
		<xs:choice>
			<xs:element ref="sgTriggerAction"/>
			<xs:element ref="SoundPlayerAction"/>
			<xs:element ref="BeginStoryboard"/>
			<xs:group ref="gControllableStoryboardAction" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTemplateKey">
		<xs:choice>
			<xs:element ref="sgTemplateKey"/>
			<xs:element ref="DataTemplateKey"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTriggerBase">
		<xs:choice>
			<xs:element ref="sgTriggerBase"/>
			<xs:element ref="DataTrigger"/>
			<xs:element ref="EventTrigger"/>
			<xs:element ref="MultiDataTrigger"/>
			<xs:element ref="MultiTrigger"/>
			<xs:element ref="Trigger"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSetterBase">
		<xs:choice>
			<xs:element ref="sgSetterBase"/>
			<xs:element ref="EventSetter"/>
			<xs:element ref="Setter"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gCollectionView">
		<xs:choice>
			<xs:element name="sgCollectionView" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gBindingBase">
		<xs:choice>
			<xs:element ref="sgBindingBase"/>
			<xs:element ref="Binding"/>
			<xs:element ref="MultiBinding"/>
			<xs:element ref="PriorityBinding"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBindingExpressionBase">
		<xs:choice>
			<xs:element ref="sgBindingExpressionBase"/>
			<xs:element ref="BindingExpression"/>
			<xs:element ref="MultiBindingExpression"/>
			<xs:element ref="PriorityBindingExpression"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPageFunctionBase">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gShape">
		<xs:choice>
			<xs:element ref="sgShape"/>
			<xs:element ref="Ellipse"/>
			<xs:element ref="Line"/>
			<xs:element ref="Path"/>
			<xs:element ref="Polygon"/>
			<xs:element ref="Polyline"/>
			<xs:element ref="Rectangle"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTextElement">
		<xs:choice>
			<xs:element ref="sgTextElement"/>
			<xs:group ref="gInline" minOccurs="0"/>
			<xs:group ref="gBlock" minOccurs="0"/>
			<xs:element ref="ListItem"/>
			<xs:element ref="TableCell"/>
			<xs:element ref="TableRow"/>
			<xs:element ref="TableRowGroup"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gInline">
		<xs:choice>
			<xs:element ref="sgInline"/>
			<xs:group ref="gAnchoredBlock" minOccurs="0"/>
			<xs:group ref="gSpan" minOccurs="0"/>
			<xs:element ref="InlineUIContainer"/>
			<xs:element ref="LineBreak"/>
			<xs:element ref="Run"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gAnchoredBlock">
		<xs:choice>
			<xs:element ref="sgAnchoredBlock"/>
			<xs:element ref="Figure"/>
			<xs:element ref="Floater"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gBlock">
		<xs:choice>
			<xs:element ref="sgBlock"/>
			<xs:element ref="BlockUIContainer"/>
			<xs:element ref="List"/>
			<xs:element ref="Paragraph"/>
			<xs:element ref="Section"/>
			<xs:element ref="Table"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gSpan">
		<xs:choice>
			<xs:element ref="sgSpan"/>
			<xs:element ref="Bold"/>
			<xs:element ref="Hyperlink"/>
			<xs:element ref="Italic"/>
			<xs:element ref="Underline"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gFrameworkTextComposition">
		<xs:choice>
			<xs:element name="sgFrameworkTextComposition" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gTextRange">
		<xs:choice>
			<xs:element name="sgTextRange" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gDefinitionBase">
		<xs:choice>
			<xs:element ref="sgDefinitionBase"/>
			<xs:element ref="ColumnDefinition"/>
			<xs:element ref="RowDefinition"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPanel">
		<xs:choice>
			<xs:element ref="sgPanel"/>
			<xs:element ref="Canvas"/>
			<xs:element ref="DockPanel"/>
			<xs:element ref="Grid"/>
			<xs:element ref="TabPanel"/>
			<xs:element ref="ToolBarOverflowPanel"/>
			<xs:group ref="gStackPanel" minOccurs="0"/>
			<xs:element ref="UniformGrid"/>
			<xs:group ref="gVirtualizingPanel" minOccurs="0"/>
			<xs:element ref="WrapPanel"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gControl">
		<xs:choice>
			<xs:element ref="sgControl"/>
			<xs:group ref="gContentControl" minOccurs="0"/>
			<xs:group ref="gItemsControl" minOccurs="0"/>
			<xs:element ref="FlowDocumentScrollViewer"/>
			<xs:group ref="gDocumentViewerBase" minOccurs="0"/>
			<xs:element ref="FlowDocumentReader"/>
			<xs:group ref="gThumb" minOccurs="0"/>
			<xs:element ref="PasswordBox"/>
			<xs:group ref="gRangeBase" minOccurs="0"/>
			<xs:element ref="ResizeGrip"/>
			<xs:group ref="gTextBoxBase" minOccurs="0"/>
			<xs:element ref="Separator"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gContentControl">
		<xs:choice>
			<xs:element ref="sgContentControl"/>
			<xs:group ref="gWindow" minOccurs="0"/>
			<xs:group ref="gButtonBase" minOccurs="0"/>
			<xs:group ref="gListBoxItem" minOccurs="0"/>
			<xs:group ref="gHeaderedContentControl" minOccurs="0"/>
			<xs:element ref="Frame"/>
			<xs:element ref="GroupItem"/>
			<xs:element ref="Label"/>
			<xs:element ref="StatusBarItem"/>
			<xs:element ref="ScrollViewer"/>
			<xs:element ref="ToolTip"/>
			<xs:element ref="UserControl"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gItemsControl">
		<xs:choice>
			<xs:element ref="sgItemsControl"/>
			<xs:group ref="gMenuBase" minOccurs="0"/>
			<xs:group ref="gHeaderedItemsControl" minOccurs="0"/>
			<xs:group ref="gSelector" minOccurs="0"/>
			<xs:element ref="StatusBar"/>
			<xs:element ref="TreeView"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gHeaderedItemsControl">
		<xs:choice>
			<xs:element ref="sgHeaderedItemsControl"/>
			<xs:element ref="MenuItem"/>
			<xs:element ref="ToolBar"/>
			<xs:element ref="TreeViewItem"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDecorator">
		<xs:choice>
			<xs:element ref="sgDecorator"/>
			<xs:element ref="Border"/>
			<xs:element ref="InkPresenter"/>
			<xs:element ref="BulletDecorator"/>
			<xs:element ref="Viewbox"/>
			<xs:element ref="AdornerDecorator"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gListBoxItem">
		<xs:choice>
			<xs:element ref="sgListBoxItem"/>
			<xs:element ref="ComboBoxItem"/>
			<xs:element ref="ListViewItem"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gContentPresenter">
		<xs:choice>
			<xs:element ref="sgContentPresenter"/>
			<xs:element ref="ScrollContentPresenter"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gValidationRule">
		<xs:choice>
			<xs:element ref="sgValidationRule"/>
			<xs:element ref="ExceptionValidationRule"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gHeaderedContentControl">
		<xs:choice>
			<xs:element ref="sgHeaderedContentControl"/>
			<xs:element ref="Expander"/>
			<xs:element ref="GroupBox"/>
			<xs:element ref="TabItem"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gViewBase">
		<xs:choice>
			<xs:element ref="sgViewBase"/>
			<xs:element ref="GridView"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gListBox">
		<xs:choice>
			<xs:element ref="sgListBox"/>
			<xs:element ref="ListView"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPage">
		<xs:choice>
			<xs:element ref="sgPage"/>
			<xs:group ref="gPageFunctionBase" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gStackPanel">
		<xs:choice>
			<xs:element ref="sgStackPanel"/>
			<xs:element ref="ToolBarPanel"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gVirtualizingPanel">
		<xs:choice>
			<xs:element ref="sgVirtualizingPanel"/>
			<xs:element ref="VirtualizingStackPanel"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDependencyObject">
		<xs:choice>
			<xs:element ref="sgDependencyObject"/>
			<xs:group ref="gFreezable" minOccurs="0"/>
			<xs:group ref="gVisual" minOccurs="0"/>
			<xs:group ref="gContentElement" minOccurs="0"/>
			<xs:element ref="GestureRecognizer"/>
			<xs:group ref="gInputBinding" minOccurs="0"/>
			<xs:group ref="gVisual3D" minOccurs="0"/>
			<xs:group ref="gViewBase" minOccurs="0"/>
			<xs:element ref="GridViewColumn"/>
			<xs:group ref="gTriggerAction" minOccurs="0"/>
			<xs:element ref="CollectionContainer"/>
			<xs:element ref="CollectionViewSource"/>
			<xs:group ref="gTriggerBase" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gAttachedPropertyBrowsableAttribute">
		<xs:choice>
			<xs:element ref="sgAttachedPropertyBrowsableAttribute"/>
			<xs:element ref="AttachedPropertyBrowsableForChildrenAttribute"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gPropertyMetadata">
		<xs:choice>
			<xs:element ref="sgPropertyMetadata"/>
			<xs:group ref="gUIPropertyMetadata" minOccurs="0"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gExpression">
		<xs:choice>
			<xs:element ref="sgExpression"/>
			<xs:group ref="gBindingExpressionBase" minOccurs="0"/>
			<xs:element ref="TemplateBindingExpression"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gFreezable">
		<xs:choice>
			<xs:element ref="sgFreezable"/>
			<xs:group ref="gAnimatable" minOccurs="0"/>
			<xs:element ref="BooleanKeyFrameCollection"/>
			<xs:element ref="ByteKeyFrameCollection"/>
			<xs:element ref="CharKeyFrameCollection"/>
			<xs:element ref="ColorKeyFrameCollection"/>
			<xs:element ref="DecimalKeyFrameCollection"/>
			<xs:group ref="gBooleanKeyFrame" minOccurs="0"/>
			<xs:group ref="gByteKeyFrame" minOccurs="0"/>
			<xs:group ref="gCharKeyFrame" minOccurs="0"/>
			<xs:group ref="gColorKeyFrame" minOccurs="0"/>
			<xs:group ref="gDecimalKeyFrame" minOccurs="0"/>
			<xs:group ref="gDoubleKeyFrame" minOccurs="0"/>
			<xs:group ref="gInt16KeyFrame" minOccurs="0"/>
			<xs:group ref="gInt32KeyFrame" minOccurs="0"/>
			<xs:group ref="gInt64KeyFrame" minOccurs="0"/>
			<xs:group ref="gMatrixKeyFrame" minOccurs="0"/>
			<xs:group ref="gObjectKeyFrame" minOccurs="0"/>
			<xs:group ref="gPointKeyFrame" minOccurs="0"/>
			<xs:group ref="gPoint3DKeyFrame" minOccurs="0"/>
			<xs:group ref="gQuaternionKeyFrame" minOccurs="0"/>
			<xs:group ref="gRotation3DKeyFrame" minOccurs="0"/>
			<xs:group ref="gRectKeyFrame" minOccurs="0"/>
			<xs:group ref="gSingleKeyFrame" minOccurs="0"/>
			<xs:group ref="gSizeKeyFrame" minOccurs="0"/>
			<xs:group ref="gStringKeyFrame" minOccurs="0"/>
			<xs:group ref="gVectorKeyFrame" minOccurs="0"/>
			<xs:group ref="gVector3DKeyFrame" minOccurs="0"/>
			<xs:element ref="DoubleKeyFrameCollection"/>
			<xs:element ref="Int16KeyFrameCollection"/>
			<xs:element ref="Int32KeyFrameCollection"/>
			<xs:element ref="Int64KeyFrameCollection"/>
			<xs:element ref="MatrixKeyFrameCollection"/>
			<xs:element ref="ObjectKeyFrameCollection"/>
			<xs:element ref="Point3DKeyFrameCollection"/>
			<xs:element ref="PointKeyFrameCollection"/>
			<xs:element ref="QuaternionKeyFrameCollection"/>
			<xs:element ref="RectKeyFrameCollection"/>
			<xs:element ref="Rotation3DKeyFrameCollection"/>
			<xs:element ref="SingleKeyFrameCollection"/>
			<xs:element ref="SizeKeyFrameCollection"/>
			<xs:element ref="StringKeyFrameCollection"/>
			<xs:element ref="Vector3DKeyFrameCollection"/>
			<xs:element ref="VectorKeyFrameCollection"/>
			<xs:element ref="KeySpline"/>
			<xs:element ref="DoubleCollection"/>
			<xs:element ref="Int32Collection"/>
			<xs:element ref="PointCollection"/>
			<xs:element ref="VectorCollection"/>
			<xs:element ref="Point3DCollection"/>
			<xs:element ref="Vector3DCollection"/>
			<xs:group ref="gThicknessKeyFrame" minOccurs="0"/>
			<xs:element ref="ThicknessKeyFrameCollection"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gWeakEventManager">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gExpressionConverter">
		<xs:choice>
			<xs:element name="sgExpressionConverter" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gDispatcherObject">
		<xs:choice>
			<xs:element ref="sgDispatcherObject"/>
			<xs:group ref="gDependencyObject" minOccurs="0"/>
			<xs:group ref="gBitmapEncoder" minOccurs="0"/>
			<xs:element ref="Application"/>
			<xs:group ref="gFrameworkTemplate" minOccurs="0"/>
			<xs:element ref="Style"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDispatcherEventArgs">
		<xs:choice>
			<xs:element name="sgDispatcherEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gValueSerializer">
		<xs:choice>
			<xs:element ref="sgValueSerializer"/>
			<xs:element ref="KeyValueSerializer"/>
			<xs:element ref="ModifierKeysValueSerializer"/>
			<xs:element ref="KeyGestureValueSerializer"/>
			<xs:element ref="MouseActionValueSerializer"/>
			<xs:element ref="MouseGestureValueSerializer"/>
			<xs:element ref="FontFamilyValueSerializer"/>
			<xs:element ref="ImageSourceValueSerializer"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMarkupExtension">
		<xs:choice>
			<xs:element ref="sgMarkupExtension"/>
			<xs:group ref="gResourceKey" minOccurs="0"/>
			<xs:group ref="gBindingBase" minOccurs="0"/>
			<xs:element ref="RelativeSource"/>
			<xs:element ref="DynamicResource"/>
			<xs:element ref="ColorConvertedBitmapExtension"/>
			<xs:element ref="StaticResource"/>
			<xs:element ref="TemplateBinding"/>
			<xs:element ref="ThemeDictionary"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gDataSourceProvider">
		<xs:choice>
			<xs:element ref="sgDataSourceProvider"/>
			<xs:element ref="ObjectDataProvider"/>
			<xs:element ref="XmlDataProvider"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gGroupDescription">
		<xs:choice>
			<xs:element ref="sgGroupDescription"/>
			<xs:element ref="PropertyGroupDescription"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gTypeConverter">
		<xs:choice>
			<xs:element name="sgTypeConverter" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gAsyncCompletedEventArgs">
		<xs:choice>
			<xs:element name="sgAsyncCompletedEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gCancelEventArgs">
		<xs:choice>
			<xs:element name="sgCancelEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gNullableConverter">
		<xs:choice>
			<xs:element name="sgNullableConverter" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gObject">
		<xs:choice>
			<xs:element ref="sgObject"/>
			<xs:group ref="gValueType" minOccurs="0"/>
			<xs:element ref="DependencyProperty"/>
			<xs:group ref="gDispatcherObject" minOccurs="0"/>
			<xs:group ref="gAttribute" minOccurs="0"/>
			<xs:group ref="gPropertyMetadata" minOccurs="0"/>
			<xs:group ref="gExpression" minOccurs="0"/>
			<xs:group ref="gValueSerializer" minOccurs="0"/>
			<xs:group ref="gMarkupExtension" minOccurs="0"/>
			<xs:element ref="DataObject"/>
			<xs:element ref="EventPrivateKey"/>
			<xs:element ref="RoutedEvent"/>
			<xs:element ref="DrawingAttributes"/>
			<xs:element ref="StrokeCollection"/>
			<xs:element ref="CommandBinding"/>
			<xs:element ref="CommandBindingCollection"/>
			<xs:element ref="InputBindingCollection"/>
			<xs:group ref="gInputGesture" minOccurs="0"/>
			<xs:element ref="InputGestureCollection"/>
			<xs:group ref="gRoutedCommand" minOccurs="0"/>
			<xs:element ref="Cursor"/>
			<xs:element ref="InputScope"/>
			<xs:element ref="InputScopeName"/>
			<xs:element ref="InputScopePhrase"/>
			<xs:element ref="StylusPointCollection"/>
			<xs:element ref="StylusPointDescription"/>
			<xs:element ref="CharacterMetrics"/>
			<xs:element ref="FontFamilyMap"/>
			<xs:element ref="FamilyTypeface"/>
			<xs:element ref="FontEmbeddingManager"/>
			<xs:element ref="FontFamily"/>
			<xs:element ref="GlyphRun"/>
			<xs:element ref="GlyphTypeface"/>
			<xs:element ref="NumberSubstitution"/>
			<xs:element ref="TextRunCache"/>
			<xs:element ref="DataTemplateSelector"/>
			<xs:element ref="Condition"/>
			<xs:element ref="ConditionCollection"/>
			<xs:element ref="BooleanToVisibilityConverter"/>
			<xs:element ref="BorderGapMaskConverter"/>
			<xs:group ref="gValidationRule" minOccurs="0"/>
			<xs:element ref="GridViewColumnCollection"/>
			<xs:element ref="GroupStyle"/>
			<xs:element ref="MenuScrollingVisibilityConverter"/>
			<xs:element ref="PrintDialog"/>
			<xs:element ref="StyleSelector"/>
			<xs:element ref="CompositeCollection"/>
			<xs:group ref="gDataSourceProvider" minOccurs="0"/>
			<xs:group ref="gGroupDescription" minOccurs="0"/>
			<xs:group ref="gXmlNamespaceManager" minOccurs="0"/>
			<xs:element ref="XmlNamespaceMapping"/>
			<xs:element ref="LinkTarget"/>
			<xs:group ref="gCollectionBase" minOccurs="0"/>
			<xs:element ref="ZoomPercentageConverter"/>
			<xs:group ref="gSetterBase" minOccurs="0"/>
			<xs:element ref="FrameworkElementFactory"/>
			<xs:element ref="NameScope"/>
			<xs:element ref="JournalEntryListConverter"/>
			<xs:element ref="JournalEntryUnifiedViewConverter"/>
			<xs:element ref="PropertyPath"/>
			<xs:element ref="ResourceDictionary"/>
			<xs:element ref="SetterBaseCollection"/>
			<xs:element ref="TriggerActionCollection"/>
			<xs:element ref="WindowCollection"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gValueType">
		<xs:choice>
			<xs:element ref="sgValueType"/>
			<xs:element ref="Point"/>
			<xs:element ref="Size"/>
			<xs:element ref="Vector"/>
			<xs:element ref="Rect"/>
			<xs:element ref="Matrix"/>
			<xs:element ref="Int32Rect"/>
			<xs:element ref="Duration"/>
			<xs:element ref="FontStyle"/>
			<xs:element ref="FontStretch"/>
			<xs:element ref="FontWeight"/>
			<xs:element ref="KeyTime"/>
			<xs:element ref="RepeatBehavior"/>
			<xs:element ref="Color"/>
			<xs:element ref="PixelFormat"/>
			<xs:element ref="Matrix3D"/>
			<xs:element ref="Point3D"/>
			<xs:element ref="Point4D"/>
			<xs:element ref="Quaternion"/>
			<xs:element ref="Rect3D"/>
			<xs:element ref="Size3D"/>
			<xs:element ref="Vector3D"/>
			<xs:element ref="CornerRadius"/>
			<xs:element ref="FigureLength"/>
			<xs:element ref="GridLength"/>
			<xs:element ref="Thickness"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gAttribute">
		<xs:choice>
			<xs:element ref="sgAttribute"/>
			<xs:group ref="gAttachedPropertyBrowsableAttribute" minOccurs="0"/>
			<xs:element ref="DisableDpiAwarenessAttribute"/>
			<xs:element ref="StyleTypedPropertyAttribute"/>
			<xs:element ref="TemplatePartAttribute"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gMulticastDelegate">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gDelegate">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gEnum">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gEventArgs">
		<xs:choice>
			<xs:element name="sgEventArgs" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gSystemException">
		<xs:choice>
			<xs:element name="sgSystemException" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gException">
		<xs:choice>
			<xs:element name="sgException" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gInvalidOperationException">
		<xs:choice>
			<xs:element name="sgInvalidOperationException" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gMarshalByRefObject">
			<xs:choice>
			</xs:choice>
	</xs:group>
	<xs:group name="gSynchronizationContext">
		<xs:choice>
			<xs:element name="sgSynchronizationContext" type="xs:anyType" />
		</xs:choice>
	</xs:group>
	<xs:group name="gCollectionBase">
		<xs:choice>
			<xs:element ref="sgCollectionBase"/>
			<xs:element ref="LinkTargetCollection"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gXmlNamespaceManager">
		<xs:choice>
			<xs:element name="sgXmlNamespaceManager" type="xs:anyType" />
			<xs:element ref="XmlNamespaceMappingCollection"/>
		</xs:choice>
	</xs:group>
	<xs:group name="gXmlNode">
			<xs:choice>
			</xs:choice>
	</xs:group>

<!-- ComplexType Section #2 -->

	<xs:complexType name="dBitmapEffectContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gBitmapEffect" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dBitmapEffectInputContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="BitmapEffectInput" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTransform3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gTransform3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dModel3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gModel3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCameraContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gCamera" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dMaterialContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gMaterial" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGeometry3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gGeometry3D" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dMatrix3DContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Matrix3D" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dIInputElementContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFontStyleContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="FontStyle" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFontStretchContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="FontStretch" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFontWeightContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="FontWeight" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dUIElementContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gUIElement" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTextDecorationCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="TextDecoration" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dColorContextContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDashStyleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="DashStyle" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDrawingContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gDrawing" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dImageSourceContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gImageSource" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFontFamilyMapCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="FontFamilyMap" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFamilyTypefaceCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="FamilyTypeface" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFontFamilyContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="FontFamily" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTextEffectCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="TextEffect" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dMediaClockContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPixelFormatContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="PixelFormat" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInputGestureContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gInputGesture" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInputGestureCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gInputGesture" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCursorContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="Cursor" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInputScopeContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="InputScope" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStylusPointDescriptionContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="StylusPointDescription" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStylusShapeContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gStylusShape" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDrawingAttributesContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="DrawingAttributes" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStrokeCollectionContent" >
	</xs:complexType>
	<xs:complexType name="dDocumentPaginatorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dXmlLanguageContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dThumbContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gThumb" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCustomPopupPlacementCallbackContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dRepeatButtonContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="RepeatButton" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dConditionCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="Condition" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCornerRadiusContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="CornerRadius" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dFigureLengthContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="FigureLength" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dGridLengthContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="GridLength" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPropertyPathContainer" mixed="true" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="PropertyPath" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dIMultiValueConverterContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTableColumnCollectionContent" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peTableColumnCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cTableColumnCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peTableColumnCollection" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
	</xs:complexType>
	<xs:group name="cTableColumnCollection">
		<xs:choice>
			<xs:element ref="TableColumn" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:group>
	<xs:group name="peTableColumnCollection">
		<xs:choice>
			<xs:element name="TableColumnCollection.Capacity" type="dInt32Container" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Gets or sets the pre-allocated collection item capacity for this collection.</xs:documentation>
				</xs:annotation>
			</xs:element>

		</xs:choice>
	</xs:group>

	<xs:complexType name="dLinkTargetCollectionContent" >
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="peLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="cLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
			<xs:group ref="peLinkTargetCollection" minOccurs="0" maxOccurs="unbounded"/> 
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="dTextPointerContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dColumnDefinitionCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ColumnDefinition" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dRowDefinitionCollectionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="RowDefinition" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dViewBaseContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>
			<xs:group ref="gViewBase" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPageRangeContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dObservableCollectionOfGroupStyleContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="GroupStyle" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dReadOnlyObservableCollectionOfObjectContent" >
	</xs:complexType>
	<xs:complexType name="dObservableCollectionOfGroupDescriptionContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gGroupDescription" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dObservableCollectionOfObjectContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dSortDescriptionCollectionContent" >
	</xs:complexType>
	<xs:complexType name="dNullableOfTimeSpanContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfByteContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfColorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfDecimalContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dByteContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCharContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dDecimalContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInt16Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dInt64Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dSingleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfDoubleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfInt16Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfInt64Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfPoint3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfPointContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfQuaternionContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfRectContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfSingleContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfSizeContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfVector3DContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfVectorContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dTimeSpanContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfThicknessContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dNullableOfBooleanContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dUInt32Container" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dReadOnlyCollectionOfColorContextContent" >
	</xs:complexType>
	<xs:complexType name="dReadOnlyCollectionOfBitmapFrameContent" >
	</xs:complexType>
	<xs:complexType name="dReadOnlyCollectionOfDocumentPageViewContent" >
	</xs:complexType>
	<xs:complexType name="dCollectionOfObjectContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
		    <xs:group ref="gObject" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCollectionOfResourceDictionaryContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element ref="ResourceDictionary" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dCollectionOfValidationRuleContent" >
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:group ref="gValidationRule" minOccurs="0" maxOccurs="1"/> 

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dReadOnlyCollectionOfBindingExpressionBaseContent" >
	</xs:complexType>
	<xs:complexType name="dIListContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dIEnumerableContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dICollectionContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfBooleanContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfUInt16Content" >
	</xs:complexType>
	<xs:complexType name="dIListOfCharContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfDoubleContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfPointContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfPixelFormatChannelMaskContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfTextTabPropertiesContent" >
	</xs:complexType>
	<xs:complexType name="dIListOfBitmapFrameContent" >
	</xs:complexType>
	<xs:complexType name="dIEnumerableOfInkCanvasClipboardFormatContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dStreamContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dXmlDocumentContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>
	<xs:complexType name="dPrintTicketContainer" >
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:group ref="gMarkupExtension" minOccurs="0" maxOccurs="1"/>

		</xs:choice>
	</xs:complexType>

<!-- ComplexType Section #3 -->


<!-- ComplexType Section #4 -->


<!-- ComplexType Section #5 -->


<!-- Group Section #2 -->


<!-- Group Section #3 -->


<!-- Group Section #4 -->


<!-- Group Section #5 -->


<!-- Group Section #6 -->


<!-- Group Section #7 -->


<!-- Group Section #8 -->


<!-- ComplexType Section #3 -->


<!-- ComplexType Section #4 -->


<!-- ComplexType Section #5 -->


<!-- AttributeGroup Section #1 -->

	<xs:attributeGroup name="IAnimatableAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="AnimatableAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TimelineAttributes">
		<xs:attribute name="AccelerationRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent accelerating the passage of time from zero to its maximum rate. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoReverse" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BeginTime" type="frlrfSystemTimeSpanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the time at which this Timeline should begin. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DecelerationRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value specifying the percentage of the timeline&apos;s Duration spent decelerating the passage of time from its maximum rate to zero.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Duration" type="frlrfSystemWindowsDurationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the length of time for which this timeline plays, not counting repetitions. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FillBehavior" type="frlrfSystemWindowsMediaAnimationFillBehaviorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies how the Timeline behaves after it reaches the end of its active period. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the name of this Timeline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RepeatBehavior" type="frlrfSystemWindowsMediaAnimationRepeatBehaviorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the repeating behavior of this timeline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpeedRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rate, relative to its parent, at which time progresses for this Timeline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CurrentStateInvalidated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the CurrentState property of the timeline&apos;s Clock is updated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CurrentTimeInvalidated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the CurrentTime property of the timeline&apos;s Clock is updated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CurrentGlobalSpeedInvalidated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the rate at which time progresses for the timeline&apos;s clock changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Completed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this timeline has completely finished playing: it will no longer enter its active period. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RemoveRequested" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the clock created for this timeline or one of its parent timelines is removed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Timeline.DesiredFrameRate" type="frlrfNullableOfInt32ClassTopic"/>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AnimationTimelineAttributes">
		<xs:attributeGroup ref="TimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleAnimationUsingPathAttributes">
		<xs:attribute name="PathGeometry" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Specifies the geometry used to generate this animation&apos;s output values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaAnimationPathAnimationSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the aspect of this animation&apos;s PathGeometry that determines its output value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DoubleAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BooleanAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IKeyFrameAnimationAttributes">
		<xs:attribute name="KeyFrames" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets an ordered collection KeyFrames associated with this animation sequence. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="BooleanAnimationUsingKeyFramesAttributes">
		<xs:attributeGroup ref="BooleanAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BooleanKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ByteAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ByteAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ByteAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ByteAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ByteAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ByteKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CharAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CharAnimationUsingKeyFramesAttributes">
		<xs:attributeGroup ref="CharAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CharKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ColorAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ColorAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecimalAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecimalAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemDecimalClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemDecimalClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemDecimalClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecimalAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecimalAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecimalAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecimalKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets KeyTime values associated with a KeyFrame object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value associated with a KeyTime instance. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="BooleanKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ByteKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CharKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemCharClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecimalKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemDecimalClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int16KeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32KeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int64KeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemInt64ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsMediaMatrixClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SingleKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StringKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DoubleAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DoubleAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int16AnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int16AnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation>  Gets or sets the animation&apos;s starting value.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int16AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int16AnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int16AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int16KeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32AnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32AnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int32AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32AnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int32AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32KeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int64AnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int64AnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemInt64ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemInt64ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemInt64ClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int64AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int64AnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int64AnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int64KeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LinearQuaternionKeyFrameAttributes">
		<xs:attribute name="UseShortestPath" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="QuaternionKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixAnimationUsingKeyFramesAttributes">
		<xs:attributeGroup ref="MatrixAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectAnimationUsingKeyFramesAttributes">
		<xs:attributeGroup ref="ObjectAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TimelineGroupAttributes">
		<xs:attributeGroup ref="TimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ParallelTimelineAttributes">
		<xs:attribute name="SlipBehavior" type="frlrfSystemWindowsMediaAnimationSlipBehaviorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies how this timeline will behave when one or more of its Timeline children slips.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TimelineGroupAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Point3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Point3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PointAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PointAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the animation&apos;s starting value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
			<xs:annotation>
				<xs:documentation>  Gets or sets the animation&apos;s ending value.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the total amount by which the animation changes its starting value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UseShortestPath" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Boolean value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="QuaternionAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="QuaternionAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RectAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RectAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DAnimationAttributes">
		<xs:attribute name="From" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="referenceType"/>
		<xs:attribute name="By" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Rotation3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Rotation3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SingleAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SingleAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SingleAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SingleAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SingleAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SingleKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SizeAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SizeAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineByteKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ByteKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineColorKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ColorKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineDecimalKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecimalKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineDoubleKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DoubleKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineInt16KeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int16KeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineInt32KeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int32KeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineInt64KeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Int64KeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplinePointKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PointKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplinePoint3DKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Point3DKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineQuaternionKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UseShortestPath" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the animation uses spherical linear interpolation to calculate the shortest arc between positions. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="QuaternionKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineRotation3DKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Rotation3DKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineRectKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RectKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineSingleKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SingleKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineSizeKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SizeKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineVectorKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VectorKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineVector3DKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Vector3DKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StringAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StringAnimationUsingKeyFramesAttributes">
		<xs:attributeGroup ref="StringAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StringKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TimelineCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Vector3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Vector3DAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VectorAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VectorAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="KeySplineAttributes">
		<xs:attribute name="ControlPoint1" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>The first control point used to define a Bezier curve that describes a KeySpline.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ControlPoint2" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>The second control point used to define a Bezier curve that describes a KeySpline.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="KeyTimeAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixAnimationUsingPathAttributes">
		<xs:attribute name="DoesRotateWithTangent" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value indicating whether the object rotates along the tangent of the path. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAngleCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOffsetCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PathGeometry" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>  Gets or sets the geometry used to generate this animation&apos;s output values. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MatrixAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointAnimationUsingPathAttributes">
		<xs:attribute name="PathGeometry" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Specifies the geometry used to generate this animation&apos;s output values. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PointAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RepeatBehaviorAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapEffectAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapEffectGroupAttributes">
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapEffectInputAttributes">
		<xs:attribute name="Input" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapSource that is used for the input for the object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AreaToApplyEffectUnits" type="frlrfSystemWindowsMediaBrushMappingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the method in which to interpret the rectangle provided by AreaToApplyEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AreaToApplyEffect" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a rectangular region on the visual to which the BitmapEffect is applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BevelBitmapEffectAttributes">
		<xs:attribute name="BevelWidth" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the bevel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Relief" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of the relief of the bevel. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LightAngle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction the &quot;virtual light&quot; is coming from that creates the shadows of the bevel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Smoothness" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets how smooth the shadows of the bevel are. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EdgeProfile" type="frlrfSystemWindowsMediaEffectsEdgeProfileClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the curve of the bevel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BlurBitmapEffectAttributes">
		<xs:attribute name="Radius" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the radius used in the blur kernel. A larger radius implies more blurring.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KernelType" type="frlrfSystemWindowsMediaEffectsKernelTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type of blur kernel to use for the BlurBitmapEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DropShadowBitmapEffectAttributes">
		<xs:attribute name="ShadowDepth" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance between the plane of the object casting the shadow and the shadow plane. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color of the shadow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Direction" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the angle at which the shadow is cast. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Noise" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the graininess, or &quot;noise level,&quot; of the shadow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the degree of opacity of the shadow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Softness" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the softness of the shadow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EmbossBitmapEffectAttributes">
		<xs:attribute name="LightAngle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction the artificial light is cast upon the embossed object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Relief" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of relief of the emboss.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="OuterGlowBitmapEffectAttributes">
		<xs:attribute name="GlowColor" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color of the halo glow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GlowSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the thickness of the halo glow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Noise" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the graininess of the halo glow. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the degree of opacity of the halo glow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEffectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapEffectCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Transform3DAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AffineTransform3DAttributes">
		<xs:attributeGroup ref="Transform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Model3DAttributes">
		<xs:attribute name="Transform" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Transform3D set on the model.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LightAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the color of the light. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Model3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rotation3DAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AxisAngleRotation3DAttributes">
		<xs:attribute name="Axis" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the axis of a 3-D rotation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Angle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the angle of a 3-D rotation, in degrees.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Rotation3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CameraAttributes">
		<xs:attribute name="Transform" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Transform3D applied to the camera.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MaterialAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DiffuseMaterialAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color allowed to emit from the Material.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AmbientColor" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a color that represents the ambient color emitted by the Material.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Brush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Brush to be applied as a Material to a 3-D model. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MaterialAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DirectionalLightAttributes">
		<xs:attribute name="Direction" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation> Represents the vector along which the light&apos;s effect will be seen on models in a 3-D scene. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="LightAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EmissiveMaterialAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color of the light that appears to be emitted from the EmissiveMaterial. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Brush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush applied by the EmissiveMaterial. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MaterialAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Geometry3DAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeometryModel3DAttributes">
		<xs:attribute name="Geometry" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the geometry of a GeometryModel3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Material" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the Material of a GeometryModel3D</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BackMaterial" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Material to be applied to the back of a Model3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Model3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HitTestParameters3DAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MaterialGroupAttributes">
		<xs:attributeGroup ref="MaterialAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Matrix3DAttributes">
		<xs:attribute name="M11" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the first row and first column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M12" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the first row and second column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M13" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the first row and third column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M14" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the first row and fourth column of this Matrix3D structure.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M21" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the second row and first column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M22" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the second row and second column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M23" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the second row and third column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M24" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the second row and fourth column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M31" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and first column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M32" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and second column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M33" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and third column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M34" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and fourth column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the fourth row and first column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the fourth row and second column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the fourth row and third column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M44" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the fourth row and fourth column of this Matrix3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixCameraAttributes">
		<xs:attribute name="ViewMatrix" type="frlrfSystemWindowsMediaMedia3DMatrix3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a Matrix3D as the view transformation matrix. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ProjectionMatrix" type="frlrfSystemWindowsMediaMedia3DMatrix3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a Matrix3D as the projection transformation matrix. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="CameraAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixTransform3DAttributes">
		<xs:attribute name="Matrix" type="frlrfSystemWindowsMediaMedia3DMatrix3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a Matrix3D that specifies one or more 3-D transformations. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Transform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MeshGeometry3DAttributes">
		<xs:attribute name="Positions" type="frlrfSystemWindowsMediaMedia3DPoint3DCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of vertex positions for a MeshGeometry3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Normals" type="frlrfSystemWindowsMediaMedia3DVector3DCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of normal vectors for the MeshGeometry3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextureCoordinates" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of texture coordinates for the MeshGeometry3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TriangleIndices" type="frlrfSystemWindowsMediaInt32CollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of triangle indices for the MeshGeometry3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Geometry3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Model3DGroupAttributes">
		<xs:attributeGroup ref="Model3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Visual3DAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ModelVisual3DAttributes">
		<xs:attribute name="Content" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the model that comprises the content of the ModelVisual3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the transform set on the ModelVisual3D.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Visual3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of this Point3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of this Point3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the z-coordinate of this Point3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point3DCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Point4DAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the X component of this Point4D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Y component of this Point4D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Z component of this Point4D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="W" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the W component of this Point4D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointLightBaseAttributes">
		<xs:attribute name="Position" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Point3D that specifies the light&apos;s position in world space. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Range" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance beyond which the light has no effect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConstantAttenuation" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a constant value by which the intensity of the light diminishes over distance.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LinearAttenuation" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the linear diminution of the light&apos;s intensity over distance. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QuadraticAttenuation" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the diminution of the light&apos;s effect over distance, calculated by a quadratic operation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="LightAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ProjectionCameraAttributes">
		<xs:attribute name="NearPlaneDistance" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s near clip plane.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FarPlaneDistance" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the distance from the camera of the scene&apos;s far clip plane. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Position" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the position of the camera in world coordinates. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LookDirection" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Vector3D which defines the direction in which the camera is looking in world coordinates.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UpDirection" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Vector3D which defines the upward direction of the camera.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="CameraAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="OrthographicCameraAttributes">
		<xs:attribute name="Width" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the width of the camera&apos;s viewing box, in world units. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ProjectionCameraAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PerspectiveCameraAttributes">
		<xs:attribute name="FieldOfView" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that represents the camera&apos;s horizontal field of view. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ProjectionCameraAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic"/>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic"/>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic"/>
		<xs:attribute name="W" type="frlrfSystemDoubleClassTopic"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuaternionRotation3DAttributes">
		<xs:attribute name="Quaternion" type="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Quaternion that defines the destination rotation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="Rotation3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RayHitTestResultAttributes">
		<xs:attributeGroup ref="HitTestResultAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Rect3DAttributes">
		<xs:attribute name="Location" type="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Point3D that represents the origin of the Rect3D. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Size" type="frlrfSystemWindowsMediaMedia3DSize3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the area of the Rect3D. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SizeX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the size of the Rect3D in the X dimension. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SizeY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the size of the Rect3D in the Y dimension. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SizeZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the size of the Rect3D in the Z dimension. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the X coordinate of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the Y coordinate of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the Z coordinate of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RotateTransform3DAttributes">
		<xs:attribute name="CenterX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the X coordinate of the Point3D about which to rotate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Y coordinate of the Point3D about which to rotate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Z coordinate of the Point3D about which to rotate.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rotation" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a Rotation3D that specifies the rotation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AffineTransform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ScaleTransform3DAttributes">
		<xs:attribute name="ScaleX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the scale factor in the x-direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScaleY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the scale factor in the y-direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScaleZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the scale factor in the z-direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the transform&apos;s center point.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the z-coordinate of the transform&apos;s center point.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the z-coordinate of the transform&apos;s center point.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AffineTransform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Size3DAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the X value of this Size3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Y value of this Size3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Z value of this Size3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="SpecularMaterialAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that filters the color properties of the material applied to the model. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Brush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the 2-D brush to apply to a specularly-lit 3-D model. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpecularPower" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the degree to which a material applied to a 3-D model reflects the lighting model as shine.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MaterialAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SpotLightAttributes">
		<xs:attribute name="Direction" type="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Vector3D that specifies the direction in which the SpotLight projects its light.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OuterConeAngle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets an angle that specifies the proportion of a SpotLight&apos;s cone-shaped projection outside which the light does not illuminate objects in the scene. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InnerConeAngle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets an angle that specifies the proportion of a SpotLight&apos;s cone-shaped projection in which the light fully illuminates objects in the scene. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PointLightBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Transform3DGroupAttributes">
		<xs:attributeGroup ref="Transform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TranslateTransform3DAttributes">
		<xs:attribute name="OffsetX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the X-axis value of the translation&apos;s offset.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Y-axis value of the translation&apos;s offset.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetZ" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Z-axis value of the translation&apos;s offset.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AffineTransform3DAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Vector3DAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the X component of this Vector3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Y component of this Vector3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Z" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Z component of this Vector3D structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="Viewport3DVisualAttributes">
		<xs:attribute name="Clip" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the clipping region of the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity of the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OpacityMask" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity mask value of the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffect" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapEffect applied to the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffectInput" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapEffectInput applied to the Viewport3DVisual. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the transform value of the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Offset" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset value of the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Camera" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Camera used by the Viewport3DVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Viewport" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangle in which the Viewport3DVisual will be rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VisualAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MaterialCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Model3DCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Transform3DCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IInputElementAttributes">
		<xs:attribute name="Focusable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether focus can be set to this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while the mouse pointer is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse wheel moves while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse wheel moves while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer enters the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer leaves the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the element captures the mouse. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses mouse capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is raised off the digitizer while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is raised off the digitizer while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves while the stylus is over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus cursor moves over the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element, but without touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element, but without touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus cursor enters the bounds of the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus cursor leaves the bounds of the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when one of several stylus gestures are detected, for example, Tap or Drag.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when one of several stylus gestures are detected, for example, Tap or Drag. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed down while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the element captures the stylus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses stylus capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewGotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewLostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewTextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContentElementAttributes">
		<xs:attribute name="IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Focusable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowDrop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets logical focus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses logical focus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsEnabledChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsEnabled property on this element changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusableChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the Focusable property changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is released while the mouse pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is released over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer enters the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer leaves the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element captures the mouse. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses mouse capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QueryCursor" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the cursor is requested to display. This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while it is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user raises the stylus off the digitizer while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user raises the stylus off the digitizer while it is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves while over the element. The stylus must move while being detected by the  digitizer  to raise this event, otherwise, PreviewStylusInAirMove is raised instead.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over this element. The stylus must move while on the digitizer to raise this event. Otherwise, StylusInAirMove is raised instead.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element without actually touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element without actually touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus enters the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus leaves the bounds of the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a user performs one of several stylus gestures.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a user performs one of several stylus gestures.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element captures the stylus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses stylus capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewGotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewLostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewTextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewQueryContinueDrag" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QueryContinueDrag" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewGiveFeedback" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a drag-and-drop operation is started. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GiveFeedback" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag-and-drop event that involves this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragOver" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the potential drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragOver" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the potential drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag origin. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag origin. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDrop" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drop event with this element as the drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Drop" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drop event with this element as the drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseDirectlyOverChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseDirectlyOver property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsKeyboardFocusWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsKeyboardFocusWithinChanged property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseCapturedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseCaptured property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseCaptureWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseCaptureWithinProperty changes on this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusDirectlyOverChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusDirectlyOver property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusCapturedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusCaptured property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusCaptureWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusCaptureWithin property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsKeyboardFocusedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsKeyboardFocused property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentOperations.Parent" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the parent element of the provided ContentElement.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.EdgeMode" type="frlrfSystemWindowsMediaEdgeModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the EdgeMode enumeration value for a non-text primitive that determines how its edges are rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.BitmapScalingMode" type="frlrfSystemWindowsMediaBitmapScalingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyBitmapScalingMode for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CachingHint" type="frlrfSystemWindowsMediaCachingHintClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyCachingHint for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMinimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold minimum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMaximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold maximum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureSource" type="frlrfSystemWindowsMediaNumberCultureSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureSource for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureOverride" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureOverride for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.Substitution" type="frlrfSystemWindowsMediaNumberSubstitutionMethodClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of Substitution for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.FocusedElement" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets logical focus on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.IsFocusScope" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the specified DependencyObject as a focus scope. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.InputLanguage" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputLanguageattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.RestoreInputLanguage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the RestoreInputLanguagedependency property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodEnabledattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodSuspended" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodSuspendedattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeState" type="frlrfSystemWindowsInputInputMethodStateClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeStateattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeConversionMode" type="frlrfSystemWindowsInputImeConversionModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeConversionModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeSentenceMode" type="frlrfSystemWindowsInputImeSentenceModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeSentenceModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.InputScope" type="frlrfSystemWindowsInputInputScopeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputScopeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsPressAndHoldEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables press and hold on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsFlicksEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables flicks on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTapFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables tap feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTouchFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables touch input feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AutomationId" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AutomationId attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.HelpText" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the HelpText attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AcceleratorKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AcceleratorKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AccessKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AccessKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemStatus" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemStatus attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemType" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemType attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsColumnHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsColumnHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRowHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRowHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRequiredForForm" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRequiredForForm attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.LabeledBy" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the LabeledByattached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Set the value of the TabIndex attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.IsTabStop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsTabStop attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.ControlTabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ControlTabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.DirectionalNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DirectionalNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.AcceptsReturn" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AcceptsReturn  attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DocumentViewerBase.IsMasterPage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsMasterPage attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Selector.IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a property value that indicates whether an item in a Selector is selected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FrameworkElement.FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FlowDirection attached property for the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NameScope.NameScope" type="referenceType">
			<xs:annotation>
				<xs:documentation>Provides the attached property set accessor for the NameScope attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Binding.XmlNamespaceManager" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets a namespace manager object used by the binding attached to the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.KeepAlive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the KeepAlive attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntryUnifiedViewConverter.JournalEntryPosition" type="frlrfSystemWindowsNavigationJournalEntryPositionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the JournalEntryPositionProperty attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsHyphenationEnabled  attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.DiscretionaryLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DiscretionaryLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.AnnotationAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AnnotationAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualAlternates" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Kerning" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Kerning attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CapitalSpacing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CapitalSpacing attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CaseSensitiveForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CaseSensitiveForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet1" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet1 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet2" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet2 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet3" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet3 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet4" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet4 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet5" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet5 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet6" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet6 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet7" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet7 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet8" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet8 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet9" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet9 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet10" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet10 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet11" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet11 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet12" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet12 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet13" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet13 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet14" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet14 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet15" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet15 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet16" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet16 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet17" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet17 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet18" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet18 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet19" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet19 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet20" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet20 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Fraction" type="frlrfSystemWindowsFontFractionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Fraction attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.SlashedZero" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the SlashedZero attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.MathematicalGreek" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the MathematicalGreek attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianExpertForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianExpertForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Variants" type="frlrfSystemWindowsFontVariantsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Variants attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Capitals" type="frlrfSystemWindowsFontCapitalsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Capitals attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralStyle" type="frlrfSystemWindowsFontNumeralStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralStyle attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralAlignment" type="frlrfSystemWindowsFontNumeralAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralAlignment attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianWidths" type="frlrfSystemWindowsFontEastAsianWidthsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianWidths attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianLanguage" type="frlrfSystemWindowsFontEastAsianLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianLanguage attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextMenu property of the specified object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the HorizontalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the VerticalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a value that indicates whether the ContextMenu has a drop shadow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementTarget property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementRectangle property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the Placement  property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the ShowOnDisabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the IsEnabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GridView.ColumnCollection" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the contents of the ColumnCollection attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.CanContentScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CanContentScroll dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.BaselineOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BaselineOffset   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontFamily   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.TextPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the TextPath attached property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the Text attached property value to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBar.OverflowMode" type="frlrfSystemWindowsControlsOverflowModeClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the OverflowMode property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBarTray.IsLocked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the IsLocked property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ToolTip" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ToolTipattached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HasDropShadow attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementTarget attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementRectangle attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Placement attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowOnDisabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsEnabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowDuration" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowDuration attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.InitialShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InitialShowDelay attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.BetweenShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BetweenShowDelay attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Validation.ErrorTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ErrorTemplate attached property to the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VirtualizingStackPanel.IsVirtualizing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsVirtualizingProperty attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DataObjectEventArgsAttributes">
		<xs:attributeGroup ref="RoutedEventArgsAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DurationAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="FreezableCollectionOfTAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="UIElementAttributes">
		<xs:attribute name="AllowDrop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderSize" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets (or sets, but see Remarks) the final render size of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderTransform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets transform information that affects the rendering position of this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderTransformOrigin" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the center point of any possible render transform declared by RenderTransform, relative to the bounds of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity factor applied to the entire UIElement when it is rendered in the user interface (UI).  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OpacityMask" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an opacity mask, as a Brush implementation that is applied to any alpha-channel masking for the rendered content of this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffect" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffectInput" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Visibility" type="frlrfSystemWindowsVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the user interface (UI) visibility of this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ClipToBounds" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.   This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clip" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the geometry used to define the outline of the contents of an element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SnapsToDevicePixels" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether this element is enabled in the user interface (UI).  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsHitTestVisible" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Focusable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the element can receive focus.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is released while the mouse pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any mouse button is released over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeftButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is pressed while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseRightButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the right mouse button is released while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer moves while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseWheel" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user rotates the mouse wheel while the mouse pointer is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer enters the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the mouse pointer leaves the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element captures the mouse. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostMouseCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses mouse capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QueryCursor" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the cursor is requested to display. This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while it is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus touches the digitizer while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user raises the stylus off the digitizer while the stylus is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user raises the stylus off the digitizer while it is over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves while over the element. The stylus must move while being detected by the  digitizer  to raise this event, otherwise, PreviewStylusInAirMove is raised instead.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over this element. The stylus must move while on the digitizer to raise this event. Otherwise, StylusInAirMove is raised instead.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element without actually touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInAirMove" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus moves over an element without actually touching the digitizer. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus enters the bounds of this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus leaves the bounds of the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusInRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is close enough to the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusOutOfRange" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus is too far from the digitizer to be detected, while over this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a user performs one of several stylus gestures.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusSystemGesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a user performs one of several stylus gestures.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element captures the stylus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostStylusCapture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses stylus capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is pressed while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStylusButtonUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the stylus button is released while the pointer is over this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyDown" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is pressed while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewKeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyUp" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a key is released while the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewGotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewLostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostKeyboardFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the keyboard is no longer focused on this element,. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewTextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextInput" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets text in a device-independent manner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewQueryContinueDrag" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QueryContinueDrag" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewGiveFeedback" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a drag-and-drop operation is started. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GiveFeedback" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag-and-drop event that involves this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragEnter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragOver" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the potential drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragOver" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the potential drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDragLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag origin. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragLeave" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drag event with this element as the drag origin. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewDrop" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drop event with this element as the drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Drop" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the input system reports an underlying drop event with this element as the drop target. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseDirectlyOverChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseDirectlyOver property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsKeyboardFocusWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsKeyboardFocusWithinChanged property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseCapturedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseCaptured property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMouseCaptureWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsMouseCaptureWithinProperty changes on this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusDirectlyOverChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusDirectlyOver property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusCapturedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusCaptured property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsStylusCaptureWithinChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsStylusCaptureWithin property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsKeyboardFocusedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsKeyboardFocused property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LayoutUpdated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the layout of the various visual elements associated with the current Dispatcher changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GotFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element gets logical focus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LostFocus" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element loses logical focus. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsEnabledChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsEnabled property on this element changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsHitTestVisibleChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsHitTestVisible dependency property changes on this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsVisibleChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the IsVisible property changes on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusableChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the Focusable property changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.EdgeMode" type="frlrfSystemWindowsMediaEdgeModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the EdgeMode enumeration value for a non-text primitive that determines how its edges are rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.BitmapScalingMode" type="frlrfSystemWindowsMediaBitmapScalingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyBitmapScalingMode for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CachingHint" type="frlrfSystemWindowsMediaCachingHintClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the attached propertyCachingHint for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMinimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold minimum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RenderOptions.CacheInvalidationThresholdMaximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the cache invalidation threshold maximum for the DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureSource" type="frlrfSystemWindowsMediaNumberCultureSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureSource for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.CultureOverride" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of CultureOverride for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NumberSubstitution.Substitution" type="frlrfSystemWindowsMediaNumberSubstitutionMethodClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of Substitution for a provided element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.FocusedElement" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets logical focus on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusManager.IsFocusScope" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the specified DependencyObject as a focus scope. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.InputLanguage" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputLanguageattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputLanguageManager.RestoreInputLanguage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the RestoreInputLanguagedependency property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodEnabledattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.IsInputMethodSuspended" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsInputMethodSuspendedattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeState" type="frlrfSystemWindowsInputInputMethodStateClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeStateattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeConversionMode" type="frlrfSystemWindowsInputImeConversionModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeConversionModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.PreferredImeSentenceMode" type="frlrfSystemWindowsInputImeSentenceModeValuesClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PreferredImeSentenceModeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputMethod.InputScope" type="frlrfSystemWindowsInputInputScopeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InputScopeattached property on the specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsPressAndHoldEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables press and hold on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsFlicksEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables flicks on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTapFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables tap feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stylus.IsTouchFeedbackEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables touch input feedback on the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AutomationId" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AutomationId attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.HelpText" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the HelpText attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AcceleratorKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AcceleratorKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.AccessKey" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the AccessKey attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemStatus" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemStatus attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.ItemType" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the ItemType attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsColumnHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsColumnHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRowHeader" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRowHeader attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.IsRequiredForForm" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsRequiredForForm attached property for the specified DependencyObject.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutomationProperties.LabeledBy" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the LabeledByattached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Set the value of the TabIndex attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.IsTabStop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsTabStop attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.TabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.ControlTabNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ControlTabNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.DirectionalNavigation" type="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DirectionalNavigation attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardNavigation.AcceptsReturn" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AcceptsReturn  attached property for the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DocumentViewerBase.IsMasterPage" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the IsMasterPage attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Selector.IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a property value that indicates whether an item in a Selector is selected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FrameworkElement.FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FlowDirection attached property for the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NameScope.NameScope" type="referenceType">
			<xs:annotation>
				<xs:documentation>Provides the attached property set accessor for the NameScope attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Binding.XmlNamespaceManager" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets a namespace manager object used by the binding attached to the provided element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the Name attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntry.KeepAlive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the KeepAlive attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalEntryUnifiedViewConverter.JournalEntryPosition" type="frlrfSystemWindowsNavigationJournalEntryPositionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the JournalEntryPositionProperty attached property of the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextElement.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsHyphenationEnabled  attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight  attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Block.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the left side of an element and the left side of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the top of an element and the top of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the right side of an element and the right side of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the distance between the bottom of an element and the bottom of its parent Canvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FixedPage.NavigateUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the uniform resource identifier (URI) to navigate to when a hyperlink is clicked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.DiscretionaryLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the DiscretionaryLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalLigatures" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalLigatures attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.AnnotationAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the AnnotationAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualAlternates" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.HistoricalForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HistoricalForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Kerning" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Kerning attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CapitalSpacing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CapitalSpacing attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.CaseSensitiveForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CaseSensitiveForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet1" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet1 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet2" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet2 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet3" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet3 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet4" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet4 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet5" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet5 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet6" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet6 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet7" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet7 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet8" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet8 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet9" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet9 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet10" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet10 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet11" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet11 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet12" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet12 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet13" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet13 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet14" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet14 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet15" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet15 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet16" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet16 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet17" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet17 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet18" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet18 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet19" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet19 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticSet20" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticSet20 attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Fraction" type="frlrfSystemWindowsFontFractionClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Fraction attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.SlashedZero" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the SlashedZero attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.MathematicalGreek" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the MathematicalGreek attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianExpertForms" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianExpertForms attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Variants" type="frlrfSystemWindowsFontVariantsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Variants attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.Capitals" type="frlrfSystemWindowsFontCapitalsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Capitals attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralStyle" type="frlrfSystemWindowsFontNumeralStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralStyle attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.NumeralAlignment" type="frlrfSystemWindowsFontNumeralAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the NumeralAlignment attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianWidths" type="frlrfSystemWindowsFontEastAsianWidthsClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianWidths attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.EastAsianLanguage" type="frlrfSystemWindowsFontEastAsianLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the EastAsianLanguage attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StandardSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StandardSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.ContextualSwashes" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextualSwashes attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Typography.StylisticAlternates" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the StylisticAlternates attached property for a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Panel.ZIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ZIndex attached property for a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Left attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Top attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Right attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Canvas.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Bottom attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ContextMenu property of the specified object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the HorizontalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the VerticalOffset property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets a value that indicates whether the ContextMenu has a drop shadow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementTarget property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the PlacementRectangle property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the Placement  property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the ShowOnDisabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the IsEnabled property of the specified object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DockPanel.Dock" type="frlrfSystemWindowsControlsDockClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Dock attached property to a specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.Column" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Column attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.Row" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the value of the Row attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.ColumnSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ColumnSpan attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.RowSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the RowSpan attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Grid.IsSharedSizeScope" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsSharedSizeScope attached property to a given UIElement. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GridView.ColumnCollection" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the contents of the ColumnCollection attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Top attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Bottom attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Left attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InkCanvas.Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Right attached property for a given dependency object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.CanContentScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the CanContentScroll dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollViewer.VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalScrollBarVisibility dependency property to a given element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.BaselineOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BaselineOffset   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontFamily   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStyle   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontWeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontStretch   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.FontSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the FontSize   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Foreground   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineHeight   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the LineStackingStrategy   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextBlock.TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the TextAlignment   attached property on a specified dependency object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.TextPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the TextPath attached property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextSearch.Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Writes the Text attached property value to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBar.OverflowMode" type="frlrfSystemWindowsControlsOverflowModeClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the OverflowMode property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolBarTray.IsLocked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Writes the value of the IsLocked property to the specified element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ToolTip" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ToolTipattached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HorizontalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the VerticalOffset attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the HasDropShadow attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementTarget attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the PlacementRectangle attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the Placement attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowOnDisabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowOnDisabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsEnabled attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.ShowDuration" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the ShowDuration attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.InitialShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the InitialShowDelay attached property for an object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipService.BetweenShowDelay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the BetweenShowDelay attached property for an object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Validation.ErrorTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Sets the value of the ErrorTemplate attached property to the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VirtualizingStackPanel.IsVirtualizing" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Sets the value of the IsVirtualizingProperty attached property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VisualAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IContentHostAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="RoutedEventAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextDecorationAttributes">
		<xs:attribute name="Pen" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Pen used to draw the text decoration.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PenOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text decoration&apos;s offset from its Location.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PenOffsetUnit" type="frlrfSystemWindowsTextDecorationUnitClassTopic">
			<xs:annotation>
				<xs:documentation>Gets the units in which the PenOffset value is expressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PenThicknessUnit" type="frlrfSystemWindowsTextDecorationUnitClassTopic">
			<xs:annotation>
				<xs:documentation>Gets the units in which the Thickness of the text decoration&apos;s Pen is expressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Location" type="frlrfSystemWindowsTextDecorationLocationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical location at which the text decoration is drawn.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextDecorationCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PresentationSourceAttributes">
		<xs:attribute name="RootVisual" type="referenceType">
			<xs:annotation>
				<xs:documentation>When overridden in a derived class, gets or sets the root visual being presented in the source. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentRendered" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when content is rendered and ready for user interaction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="UIPropertyMetadataAttributes">
		<xs:attribute name="IsAnimationProhibited" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value declaring whether animations should be disabled on the dependency property where the containing metadata instance is applied. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PropertyMetadataAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VisualAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContainerVisualAttributes">
		<xs:attribute name="Clip" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the clipping region of the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity of the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OpacityMask" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity mask value of the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffect" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a BitmapEffect value for the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffectInput" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a BitmapEffectInput value for the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="XSnappingGuidelines" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the X (horizontal) guideline for the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="YSnappingGuidelines" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Y (vertical) guideline for the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the transform value of the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Offset" type="frlrfSystemWindowsVectorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset value of the ContainerVisual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VisualAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingVisualAttributes">
		<xs:attributeGroup ref="ContainerVisualAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CompositionTargetAttributes">
		<xs:attribute name="RootVisual" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the root visual of the CompositionTarget.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathSegmentAttributes">
		<xs:attribute name="IsStroked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the segment is stroked. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSmoothJoin" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the join between this PathSegment and the previous PathSegment is treated as a corner when it is stroked with a Pen. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ArcSegmentAttributes">
		<xs:attribute name="Point" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the endpoint of the elliptical arc. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Size" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the x- and y-radius of the arc as a Size structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RotationAngle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsLargeArc" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the arc should be greater than 180 degrees.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SweepDirection" type="frlrfSystemWindowsMediaSweepDirectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the arc is drawn in the Clockwise or Counterclockwise direction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BezierSegmentAttributes">
		<xs:attribute name="Point1" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the first control point of the curve. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Point2" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the second control point of the curve. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Point3" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the end point of the curve. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BrushAttributes">
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the degree of opacity of a Brush.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush&apos;s output has been mapped and positioned. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RelativeTransform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the transformation that is applied to the brush using relative coordinates. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorAttributes">
		<xs:attribute name="A" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the sRGB alpha component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="R" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the sRGB red component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="G" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the sRGB green component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="B" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the sRGB blue component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScA" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the ScRGB alpha component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScR" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the ScRGB red component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScG" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the ScRGB green component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScB" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the ScRGB blue component value of this Color structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeometryAttributes">
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Transform object applied to a Geometry. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CombinedGeometryAttributes">
		<xs:attribute name="GeometryCombineMode" type="frlrfSystemWindowsMediaGeometryCombineModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the method by which the two geometries (specified by the Geometry1 and Geometry2 properties) are combined. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Geometry1" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the first Geometry object of this CombinedGeometry object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Geometry2" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the second Geometry object of this CombinedGeometry object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DashStyleAttributes">
		<xs:attribute name="Offset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets how far in the dash sequence the stroke will start. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Dashes" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the collection of dashes and gaps in this DashStyle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CharacterMetricsAttributes">
		<xs:attribute name="Metrics" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a comma-delimited string representing metric values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TileBrushAttributes">
		<xs:attribute name="ViewportUnits" type="frlrfSystemWindowsMediaBrushMappingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a BrushMappingMode enumeration that specifies whether the value of the Viewport, which indicates the size and position of the TileBrush base tile, is relative to the size of the output area. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewboxUnits" type="frlrfSystemWindowsMediaBrushMappingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the Viewbox value is relative to the bounding box of the TileBrush contents or whether the value is absolute. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Viewport" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position and dimensions of the base tile for a TileBrush. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Viewbox" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position and dimensions of the content in a TileBrush tile. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies how the content of this TileBrush stretches to fit its tiles. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TileMode" type="frlrfSystemWindowsMediaTileModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies how a TileBrush fills the area that you are painting if the base tile is smaller than the output area. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AlignmentX" type="frlrfSystemWindowsMediaAlignmentXClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal alignment of content in the TileBrush base tile. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AlignmentY" type="frlrfSystemWindowsMediaAlignmentYClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical alignment of content in the TileBrush base tile. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingBrushAttributes">
		<xs:attribute name="Drawing" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Drawing that describes the contents of this DrawingBrush. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TileBrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingGroupAttributes">
		<xs:attribute name="ClipGeometry" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the clip region of this DrawingGroup. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opacity" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the opacity of this DrawingGroup. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OpacityMask" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the brush used to alter the opacity of select regions of this DrawingGroup. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Transform that is applied to this DrawingGroup. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GuidelineSet" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the GuidelineSet to apply to this DrawingGroup.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffect" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapEffect to apply to this DrawingGroup. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BitmapEffectInput" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the region where the DrawingGroup applies its BitmapEffect and, optionally a BitmapSource to use as input for its BitmapEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ImageSourceAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingImageAttributes">
		<xs:attribute name="Drawing" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the drawing content for the DrawingImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ImageSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeneralTransformAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EllipseGeometryAttributes">
		<xs:attribute name="RadiusX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-radius value of the EllipseGeometry. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RadiusY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-radius value of the EllipseGeometry.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Center" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the center point of the EllipseGeometry.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FontFamilyMapAttributes">
		<xs:attribute name="Unicode" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a string value representing one or more Unicode code point ranges.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Target" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the target font family name for which the Unicode range applies to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Scale" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font scale factor for the target FontFamily.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Language" type="frlrfSystemWindowsMarkupXmlLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the culture-specific language for the FontFamilyMap.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FamilyTypefaceAttributes">
		<xs:attribute name="Style" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the style of the font family typeface design. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Weight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the designed weight of this font family typeface.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the designed stretch of the font family typeface.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UnderlinePosition" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of underline value relative to the baseline. The value is also relative to em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UnderlineThickness" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the thickness of underline relative to em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrikethroughPosition" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of the strikethrough value relative to the baseline. The value is also relative to em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrikethroughThickness" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the thickness of the strikethrough relative to em size. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CapsHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance from baseline to top of an English capital, relative to em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="XHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Western x-height relative to em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DeviceFontName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name or unique identifier for a device font family typeface.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FontEmbeddingManagerAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FontFamilyAttributes">
		<xs:attribute name="Baseline" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance between the baseline and the character cell top.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineSpacing" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the line spacing value for the FontFamily object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeneralTransformGroupAttributes">
		<xs:attributeGroup ref="GeneralTransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DoubleCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeneralTransformCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeometryCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeometryDrawingAttributes">
		<xs:attribute name="Brush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Brush used to fill the interior of the shape described by this GeometryDrawing. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Pen" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the Pen used to stroke this GeometryDrawing. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Geometry" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Geometry that describes the shape of this GeometryDrawing. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GeometryGroupAttributes">
		<xs:attribute name="FillRule" type="frlrfSystemWindowsMediaFillRuleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets how the intersecting areas of the objects contained in this GeometryGroup are combined. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GlyphRunDrawingAttributes">
		<xs:attribute name="GlyphRun" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the GlyphRun that describes the text to draw.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ForegroundBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the foreground brush of the GlyphRunDrawing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GradientBrushAttributes">
		<xs:attribute name="ColorInterpolationMode" type="frlrfSystemWindowsMediaColorInterpolationModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a ColorInterpolationMode enumeration that specifies how the gradient&apos;s colors are interpolated. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MappingMode" type="frlrfSystemWindowsMediaBrushMappingModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a BrushMappingMode enumeration that specifies whether the gradient brush&apos;s positioning coordinates are absolute or relative to the output area. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpreadMethod" type="frlrfSystemWindowsMediaGradientSpreadMethodClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the type of spread method that specifies how to draw a gradient that starts or ends inside the bounds of the object to be painted. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GradientStopAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the color of the gradient stop. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Offset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets the location of the gradient stop within the gradient vector. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GradientStopCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ImageBrushAttributes">
		<xs:attribute name="ImageSource" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the image displayed by this ImageBrush.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TileBrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ImageDrawingAttributes">
		<xs:attribute name="ImageSource" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the source of the image </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rect" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or set the region in which the image is drawn. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32CollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LinearGradientBrushAttributes">
		<xs:attribute name="StartPoint" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the starting two-dimensional coordinates of the linear gradient. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndPoint" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ending two-dimensional coordinates of the linear gradient. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GradientBrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LineGeometryAttributes">
		<xs:attribute name="StartPoint" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the start point of the line. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndPoint" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the end point of a line. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LineSegmentAttributes">
		<xs:attribute name="Point" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the end point of the line segment. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TransformAttributes">
		<xs:attributeGroup ref="GeneralTransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixTransformAttributes">
		<xs:attribute name="Matrix" type="frlrfSystemWindowsMediaMatrixClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Matrix structure that defines this transformation. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MediaTimelineAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the media source associated with the timeline.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathFigureAttributes">
		<xs:attribute name="StartPoint" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Point where the PathFigure begins.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsFilled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether the contained area of this PathFigure is to be used for hit-testing, rendering, and clipping. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsClosed" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether this figures first and last segments are connected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathFigureCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathGeometryAttributes">
		<xs:attribute name="Figures" type="frlrfSystemWindowsMediaPathFigureCollectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the collection of PathFigure objects that describe the path&apos;s contents. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FillRule" type="frlrfSystemWindowsMediaFillRuleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that determines how the intersecting areas contained in this PathGeometry are combined. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathSegmentCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PenAttributes">
		<xs:attribute name="Brush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the fill the outline produced by this Pen. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Thickness" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the thickness of the stroke produced by this Pen. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StartLineCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the type of shape to use at the beginning of a stroke. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EndLineCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the type of shape to use at the end of a stroke. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DashCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies how the ends of each dash are drawn. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineJoin" type="frlrfSystemWindowsMediaPenLineJoinClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the type of joint used at the vertices of a shape&apos;s outline.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MiterLimit" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the limit on the ratio of the miter length to half this pen&apos;s Thickness. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DashStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that describes the pattern of dashes generated by this Pen.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PolyBezierSegmentAttributes">
		<xs:attribute name="Points" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the PointCollection that define this PolyBezierSegment object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PolyLineSegmentAttributes">
		<xs:attribute name="Points" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the collection of Point structures that defines this PolyLineSegment object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PolyQuadraticBezierSegmentAttributes">
		<xs:attribute name="Points" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the PointCollection that defines this PolyQuadraticBezierSegment object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="QuadraticBezierSegmentAttributes">
		<xs:attribute name="Point1" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the control Point of the curve. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Point2" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the end Point of this QuadraticBezierSegment. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PathSegmentAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RadialGradientBrushAttributes">
		<xs:attribute name="Center" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the center of the outermost circle of the radial gradient. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RadiusX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the horizontal radius of the outermost circle of the radial gradient. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RadiusY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the vertical radius of the outermost circle of a radial gradient. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GradientOrigin" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GradientBrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectangleGeometryAttributes">
		<xs:attribute name="RadiusX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-radius of the ellipse use to round the corners of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RadiusY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-radius of the ellipse use to round the corners of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rect" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the dimensions of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RotateTransformAttributes">
		<xs:attribute name="Angle" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the angle, in degrees, of clockwise rotation. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the rotation center point. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the rotation center point. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ScaleTransformAttributes">
		<xs:attribute name="ScaleX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-axis scale factor. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScaleY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-axis scale factor. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the center point of this ScaleTransform. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the center point of this ScaleTransform. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SkewTransformAttributes">
		<xs:attribute name="AngleX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AngleY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the transform center. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CenterY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the transform center. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SolidColorBrushAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color of this SolidColorBrush. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StreamGeometryAttributes">
		<xs:attribute name="FillRule" type="frlrfSystemWindowsMediaFillRuleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines how the intersecting areas contained in this StreamGeometry are combined.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GeometryAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextEffectAttributes">
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Transform that is applied to the TextEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clip" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the clipping region of the TextEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush to apply to the content of the TextEffect.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PositionStart" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the starting position in the text that the TextEffect applies to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PositionCount" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position in the text that the TextEffect applies to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextEffectCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TransformCollectionAttributes">
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TransformGroupAttributes">
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TranslateTransformAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance to translate along the x-axis. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance to translate (move) an object along the y-axis. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TransformAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VisualBrushAttributes">
		<xs:attribute name="Visual" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the brush&apos;s content. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoLayoutContent" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether this VisualBrush will run layout its Visual. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TileBrushAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VideoDrawingAttributes">
		<xs:attribute name="Player" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the media player associated with the drawing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rect" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangular area in which the video is drawn.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DrawingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GuidelineSetAttributes">
		<xs:attribute name="GuidelinesX" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a series of coordinate values that represent guide lines on the X-axis.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GuidelinesY" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a series of coordinate values that represent guide lines on the Y-axis.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HitTestParametersAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HitTestResultAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GlyphRunAttributes">
		<xs:attribute name="BaselineOrigin" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the baseline origin of the GlyphRun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontRenderingEmSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the em size used for rendering the GlyphRun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GlyphTypeface" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the GlyphTypeface for the GlyphRun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BidiLevel" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the bidirectional nesting level of the GlyphRun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSideways" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether to rotate glyphs.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Language" type="frlrfSystemWindowsMarkupXmlLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the XmlLanguage for the GlyphRun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DeviceFontName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the specific device font for which the GlyphRun has been optimized.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GlyphTypefaceAttributes">
		<xs:attribute name="FontUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the URI for the GlyphTypeface object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StyleSimulations" type="frlrfSystemWindowsMediaStyleSimulationsClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the StyleSimulations for the Glyphs class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ImageMetadataAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MediaPlayerAttributes">
		<xs:attribute name="Volume" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the media&apos;s volume.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Balance" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the balance between the left and right speaker volumes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrubbingEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether scrubbing is enabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMuted" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that indicates whether the media is muted.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Position" type="frlrfSystemTimeSpanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current position of the media.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpeedRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ratio of speed that media is played at.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clock" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the MediaClock associated with the MediaTimeline to be played.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an error is encountered </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaOpened" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the media is opened.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaEnded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the media has finished playback.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BufferingStarted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when buffering has started.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BufferingEnded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when buffering has finished.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScriptCommand" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a script command has been encountered within the media.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnimatableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PixelFormatAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="NumberSubstitutionAttributes">
		<xs:attribute name="CultureSource" type="frlrfSystemWindowsMediaNumberCultureSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value which identifies the source of the culture value that is used to determine number substitution.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CultureOverride" type="frlrfSystemWindowsCultureInfoIetfLanguageTagConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value which identifies which culture to use when the value of the CultureSource property is set to Override.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Substitution" type="frlrfSystemWindowsMediaNumberSubstitutionMethodClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value which identifies the substitution method that is used to determine number substitution.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextLineAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextRunPropertiesAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextParagraphPropertiesAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextRunAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextCollapsingPropertiesAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextEmbeddedObjectAttributes">
		<xs:attributeGroup ref="TextRunAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextMarkerPropertiesAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextModifierAttributes">
		<xs:attributeGroup ref="TextRunAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextRunTypographyPropertiesAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputDeviceAttributes">
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CommandBindingAttributes">
		<xs:attribute name="Command" type="frlrfSystemWindowsInputCommandConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ICommand associated with this CommandBinding. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewExecuted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the command associated with this CommandBinding executes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Executed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the command associated with this CommandBinding executes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewCanExecute" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the current command target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanExecute" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the command associated with this CommandBinding initiates a check to determine whether the command can be executed on the command target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CommandBindingCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ICommandAttributes">
		<xs:attribute name="CanExecuteChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when changes occur which affect whether or not the command should execute.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="ICommandSourceAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="InputBindingCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputGestureAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputGestureCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="KeyBindingAttributes">
		<xs:attribute name="Modifiers" type="frlrfSystemWindowsInputModifierKeysClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ModifierKeys of the KeyGesture associated with this KeyBinding. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Key" type="frlrfSystemWindowsInputKeyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Key of the KeyGesture associated with this KeyBinding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InputBindingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="KeyGestureAttributes">
		<xs:attributeGroup ref="InputGestureAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MouseBindingAttributes">
		<xs:attribute name="MouseAction" type="frlrfSystemWindowsInputMouseActionClassTopic">
			<xs:annotation>
				<xs:documentation>Gests or sets the MouseAction associated with this MouseBinding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InputBindingAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MouseGestureAttributes">
		<xs:attribute name="MouseAction" type="frlrfSystemWindowsInputMouseActionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the MouseAction associated with this gesture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Modifiers" type="frlrfSystemWindowsInputModifierKeysClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the modifier keys associated with this MouseGesture.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InputGestureAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RoutedCommandAttributes">
		<xs:attribute name="CanExecuteChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when changes occur which affect whether or not the command should execute on the current command target has changed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RoutedUICommandAttributes">
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text which describes this command.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RoutedCommandAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IInputLanguageSourceAttributes">
		<xs:attribute name="CurrentInputLanguage" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the current input language for this input language source object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputLanguageEventArgsAttributes">
		<xs:attributeGroup ref="EventArgsAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputScopeAttributes">
		<xs:attribute name="SrgsMarkup" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a string that specifies any Speech Recognition Grammar Specification (SRGS) markup to be used as a suggested input pattern by input processors.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RegularExpression" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a regular expression to be used as a suggested text input pattern by input processors.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputScopeNameAttributes">
		<xs:attribute name="NameValue" type="frlrfSystemWindowsInputInputScopeNameValueClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the input scope name value which modifies how input from alternative input methods is interpreted.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputScopePhraseAttributes">
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a descriptive name associated with the text input pattern for this InputScopePhrase.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="KeyboardDeviceAttributes">
		<xs:attributeGroup ref="InputDeviceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MouseDeviceAttributes">
		<xs:attribute name="OverrideCursor" type="frlrfSystemWindowsInputCursorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the cursor for the entire application. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InputDeviceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StylusPointCollectionAttributes">
		<xs:attribute name="Changed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the StylusPointCollection changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="StylusPointDescriptionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapCodecInfoAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapDecoderAttributes">
		<xs:attribute name="DownloadCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a BitmapDecoder has finished downloading bitmap content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DownloadProgress" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a BitmapDecoder has made progress downloading bitmap content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DownloadFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when bitmap content failed to download.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapEncoderAttributes">
		<xs:attribute name="Thumbnail" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a BitmapSource that represents the global embedded thumbnail.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Metadata" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the metadata that will be associated with this bitmap during encoding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Preview" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a BitmapSource that represents the global preview of a bitmap, if there is one. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Palette" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the BitmapPalette of an encoded bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapSourceAttributes">
		<xs:attribute name="DownloadCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the bitmap content has been completely downloaded.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DownloadProgress" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the download progress of the bitmap content has changed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DownloadFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the bitmap content failed to download.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ImageSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapFrameAttributes">
		<xs:attribute name="BaseUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the base Uri of the current context.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BitmapImageAttributes">
		<xs:attribute name="BaseUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the base Uri of the current BitmapImage context.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UriSource" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Uri source of the BitmapImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StreamSource" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the stream source of the BitmapImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DecodePixelWidth" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width, in pixels, that the image is decoded to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DecodePixelHeight" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height, in pixels, that the image is decoded to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rotation" type="frlrfSystemWindowsMediaImagingRotationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the angle that this BitmapImage is rotated to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceRect" type="frlrfSystemWindowsInt32RectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangle that is used as the source of the BitmapImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CreateOptions" type="frlrfSystemWindowsMediaImagingBitmapCreateOptionsClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapCreateOptions for a BitmapImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CacheOption" type="frlrfSystemWindowsMediaImagingBitmapCacheOptionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the BitmapCacheOption to use for this instance of BitmapImage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColorConvertedBitmapAttributes">
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies the source bitmap that is converted.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceColorContext" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies the color profile of the source bitmap.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DestinationColorContext" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies the color profile, as defined by the ColorContext class, of the converted bitmap.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DestinationFormat" type="frlrfSystemWindowsMediaPixelFormatClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the PixelFormat of the converted bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CroppedBitmapAttributes">
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceRect" type="frlrfSystemWindowsInt32RectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangular area that the bitmap is cropped to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FormatConvertedBitmapAttributes">
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DestinationFormat" type="frlrfSystemWindowsMediaPixelFormatClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the pixel format to convert the bitmap to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DestinationPalette" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the palette to apply to the bitmap if the format is indexed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AlphaThreshold" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the alpha channel threshold of a bitmap when converting to palletized formats that recognizes an alpha color.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="JpegBitmapEncoderAttributes">
		<xs:attribute name="QualityLevel" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the quality level of the resulting Joint Photographics Experts Group (JPEG) image.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rotation" type="frlrfSystemWindowsMediaImagingRotationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the degree to which a Joint Photographics Experts Group (JPEG) image is rotated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlipHorizontal" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped horizontally during encoding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlipVertical" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a Joint Photographics Experts Group (JPEG) image should be flipped vertically during encoding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PngBitmapEncoderAttributes">
		<xs:attribute name="Interlace" type="frlrfSystemWindowsMediaImagingPngInterlaceOptionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the Portable Network Graphics (PNG) bitmap should interlace.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TiffBitmapEncoderAttributes">
		<xs:attribute name="Compression" type="frlrfSystemWindowsMediaImagingTiffCompressOptionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the type of compression that is used by this Tagged Image File Format (TIFF) image.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="WmpBitmapEncoderAttributes">
		<xs:attribute name="ImageQualityLevel" type="frlrfSystemSingleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the image quality level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Lossless" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to encode using lossless compression.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rotation" type="frlrfSystemWindowsMediaImagingRotationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Rotation of the image.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlipHorizontal" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether to flip the image horizontally.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlipVertical" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to flip the image vertically.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UseCodecOptions" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates codec options are to be used.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="QualityLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the compression quality for the main image.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SubsamplingLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the sub sampling level for RGB image encoding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OverlapLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the overlap processing level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalTileSlices" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of horizontal divisions to use during compression encoding. A single division creates two horizontal regions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalTileSlices" type="frlrfSystemInt16ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of vertical divisions to use during compression encoding. A single division creates two vertical regions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FrequencyOrder" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to encoding in frequency order.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InterleavedAlpha" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to encode the alpha channel data as an additional interleaved channel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AlphaQualityLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the compression quality for a planar alpha channel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CompressedDomainTranscode" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether compressed domain operations can be used. Compressed domain operations are transformation operations that are done without decoding the image data.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ImageDataDiscardLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the level of image data to discard during a compressed domain transcode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AlphaDataDiscardLevel" type="frlrfSystemByteClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the level of alpha frequency data to discard during a compressed domain transcode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IgnoreOverlap" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to ignore region overlap pixels in sub-region compressed domain encoding. This feature is not currently implemented.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapEncoderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TransformedBitmapAttributes">
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the source for the bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Transform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Transform, which specifies the scale or rotation of the bitmap. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BitmapSourceAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StylusShapeAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DrawingAttributesAttributes">
		<xs:attribute name="Color" type="frlrfSystemWindowsMediaColorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the color of a Stroke.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusTip" type="frlrfSystemWindowsInkStylusTipClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the shape of the stylus used to draw the Stroke.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StylusTipTransform" type="frlrfSystemWindowsMediaMatrixClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Matrix that specifies the transformation to perform on the stylus&apos; tip.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of the stylus used to draw the Stroke.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the stylus used to draw the Stroke.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FitToCurve" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether Bezier smoothing is used to render the Stroke.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IgnorePressure" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the thickness of a rendered Stroke changes according the amount of pressure applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsHighlighter" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the Stroke looks like a highlighter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AttributeChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a property in the DrawingAttributes object changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyDataChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when property data is added or removed from the StrokeCollection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GestureRecognizerAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IncrementalHitTesterAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StrokeCollectionAttributes">
		<xs:attribute name="StrokesChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a Stroke in the collection changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PropertyDataChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when custom property is added or removed from the StrokeCollection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContentPositionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IDocumentPaginatorSourceAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="BeginStoryboardAttributes">
		<xs:attribute name="Storyboard" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Storyboard that this BeginStoryboard starts. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HandoffBehavior" type="frlrfSystemWindowsMediaAnimationHandoffBehaviorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the proper hand-off behavior to start an animation clock in this storyboard </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the BeginStoryboard object. By naming the BeginStoryboard object, the Storyboard can be controlled after it is started.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerActionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ControllableStoryboardActionAttributes">
		<xs:attribute name="BeginStoryboardName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Name of the BeginStoryboard that began the Storyboard you want to interactively control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerActionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SeekStoryboardAttributes">
		<xs:attribute name="Offset" type="frlrfSystemTimeSpanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount by which the storyboard should move forward or backward from the seek origin Origin. .</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Origin" type="frlrfSystemWindowsMediaAnimationTimeSeekOriginClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position from which this seek operation&apos;s Offset is applied. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SetStoryboardSpeedRatioAttributes">
		<xs:attribute name="SpeedRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a new Storyboard animation speed as a ratio of the old animation speed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControllableStoryboardActionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessKeyFrameAttributes">
		<xs:attribute name="KeyTime" type="frlrfSystemWindowsKeyTimeConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the time at which the key frame&apos;s target Value should be reached. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the key frame&apos;s target value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SplineThicknessKeyFrameAttributes">
		<xs:attribute name="KeySpline" type="frlrfSystemWindowsKeySplineConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the two control points that define animation progress for this key frame.   </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ThicknessKeyFrameAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessAnimationBaseAttributes">
		<xs:attributeGroup ref="AnimationTimelineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessAnimationAttributes">
		<xs:attribute name="From" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>  Gets or sets the animation&apos;s starting value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="To" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the animation&apos;s ending value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="By" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the total amount by which the animation changes its starting value. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the target property&apos;s current value should be added to this animation&apos;s starting value. This is a dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ThicknessAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessAnimationUsingKeyFramesAttributes">
		<xs:attribute name="IsAdditive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that specifies whether the animation&apos;s output value is added to the base value of the property being animated.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCumulative" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether the animation&apos;s value accumulates when it repeats.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ThicknessAnimationBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessKeyFrameCollectionAttributes">
		<xs:attributeGroup ref="FreezableAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IScrollInfoAttributes">
		<xs:attribute name="CanVerticallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether scrolling on the vertical axis is possible. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanHorizontallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollOwner" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a ScrollViewer element that controls scrolling behavior.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="MenuBaseAttributes">
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DocumentViewerBaseAttributes">
		<xs:attribute name="Document" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a IDocumentPaginatorSource to be paginated and displayed by the viewer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageViewsChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the collection of DocumentPageView items associated with this viewer (represented by the PageViews property) changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ButtonBaseAttributes">
		<xs:attribute name="Command" type="frlrfSystemWindowsInputCommandConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the command to invoke when this button is pressed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the parameter to pass to the Command property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the element on which to raise the specified command.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ClickMode" type="frlrfSystemWindowsControlsClickModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets when the Click event should occur. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Click" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a Button is clicked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ToggleButtonAttributes">
		<xs:attribute name="IsChecked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the ToggleButton is checked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsThreeState" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Determines whether the control supports two or three states. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Checked" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ToggleButton is checked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unchecked" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ToggleButton is unchecked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Indeterminate" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the state of a ToggleButton is neither on nor off.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ButtonBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SelectorAttributes">
		<xs:attribute name="IsSynchronizedWithCurrentItem" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a Selector should keep the SelectedItem synchronized with the current item in the Items property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedItem" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the first item in the current selection or returns null if the selection is empty. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedValue" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the SelectedItem, obtained by using SelectedValuePath. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedValuePath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the path used to get the SelectedValue from the SelectedItem. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the selection of a Selector changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewRowPresenterBaseAttributes">
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThumbAttributes">
		<xs:attribute name="DragStarted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a Thumb control receives logical focus and mouse capture.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragDelta" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs one or more times as the mouse changes position when a Thumb control has logical focus and mouse capture. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the Thumb control loses mouse capture.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BulletDecoratorAttributes">
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the background color for a BulletDecorator control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Bullet" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the object to use as the bullet in a BulletDecorator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DocumentPageViewAttributes">
		<xs:attribute name="DocumentPaginator" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the DocumentPaginator used to retrieve content pages for this view.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageNumber" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the page number of the current page displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Stretch enumeration that specifies how content should be stretched to fill the display page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StretchDirection" type="frlrfSystemWindowsControlsStretchDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a StretchDirection enumeration that specifies in what scaling directions Stretch should be applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageConnected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a Visual element of the DocumentPage is connected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageDisconnected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a Visual element of the DocumentPage is disconnected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PopupAttributes">
		<xs:attribute name="Child" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the content of the Popup control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the Popup is visible. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the orientation of the Popup control when the control opens, and specifies the behavior of the Popup control when it overlaps screen boundaries.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StaysOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the Popup control closes when the control is no longer in focus.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset from the left of the area that is specified for the Popup control content by a combination of the Placement, PlacementTarget, and PlacementRectangle properties. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset from top the area that is specified for the  Popup control content by a combination of the Placement, PlacementTarget, and PlacementRectangle properties. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the element relative to which the Popup is positioned when it opens.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangle relative to which the Popup control is positioned when it opens.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PopupAnimation" type="frlrfSystemWindowsControlsPrimitivesPopupAnimationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an animation for the opening and closing of a Popup control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowsTransparency" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a Popup control can contain transparent content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opened" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsOpen property changes to true. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Closed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsOpen property changes to false. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RangeBaseAttributes">
		<xs:attribute name="Minimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Minimum possible Value of the range element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Maximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Maximum possible Value of the range element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current Value of the range element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LargeChange" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SmallChange" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Value to be added to or subtracted from the Value of a RangeBase control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ValueChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the range value changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RepeatButtonAttributes">
		<xs:attribute name="Delay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of time, in milliseconds, the RepeatButton waits while it is pressed before it starts repeating. The value must be non-negative. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Interval" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of time, in milliseconds, between repeats once repeating starts. The value must be non-negative. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ButtonBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ScrollBarAttributes">
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the ScrollBar is displayed horizontally or vertically.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewportSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of the scrollable content that is currently visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Scroll" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs one or more times as content scrolls in a ScrollBar when the user moves the Thumb by using the mouse.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RangeBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextBoxBaseAttributes">
		<xs:attribute name="IsReadOnly" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AcceptsReturn" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AcceptsTab" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a vertical scroll bar is shown.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsUndoEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoWordSelection" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when content changes in the text element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the text selection has changed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpellCheck.IsEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Enables or disables spellchecking on the specified text editing control (i.e. TextBox or RichTextBox).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpellCheck.SpellingReform" type="frlrfSystemWindowsControlsSpellingReformClassTopic">
			<xs:annotation>
				<xs:documentation>Determines the spelling reform rules used by the spellchecker. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TickBarAttributes">
		<xs:attribute name="Fill" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that is used to draw the tick marks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Minimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum value that is possible for a tick mark.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Maximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum value that is possible for a tick mark.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionStart" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the start point of a selection. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionEnd" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the end point of a selection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSelectionRangeEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the TickBar displays a selection range. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TickFrequency" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the interval between tick marks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Ticks" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the positions of the tick marks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsDirectionReversed" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction of increasing value of the tick marks..</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Placement" type="frlrfSystemWindowsControlsPrimitivesTickBarPlacementClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets where tick marks appear  relative to a Track of a Slider control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ReservedSpace" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a space buffer for the area that contains the tick marks that are specified for a TickBar.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ToolBarOverflowPanelAttributes">
		<xs:attribute name="WrapWidth" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the recommended width for an overflow ToolBar before items flow to the next line.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TrackAttributes">
		<xs:attribute name="DecreaseRepeatButton" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets the RepeatButton that decreases the Value property of the Track.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Thumb" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets the Thumb control that is used to change the Value of a Track.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IncreaseRepeatButton" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets the RepeatButton that increases the Value property of the Track class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the Track is displayed horizontally or vertically.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Minimum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum possible Value of the Track.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Maximum" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum possible Value of the Track.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current value of the Track as determined by the position of the Thumb control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewportSize" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the size of the part of the scrollable content that is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsDirectionReversed" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the direction of increasing Value is reversed from the default direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="UniformGridAttributes">
		<xs:attribute name="FirstColumn" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of leading blank cells in the first row of the grid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Columns" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of columns that are in the grid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Rows" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of rows that are in the grid.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="IFrameworkInputElementAttributes">
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of an element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameworkContentElementAttributes">
		<xs:attribute name="Style" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the style to be used by this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OverridesDefaultStyle" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Resources" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the current locally-defined resource dictionary. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of XAML.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Tag" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Language" type="frlrfSystemWindowsMarkupXmlLanguageClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusVisualStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Cursor" type="frlrfSystemWindowsInputCursorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ForceCursor" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether this FrameworkContentElement should force the user interface (UI) to render the cursor as declared by this instance&apos;s Cursor property.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputScope" type="frlrfSystemWindowsInputInputScopeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the context for input used by this FrameworkContentElement.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DataContext" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTip" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TargetUpdated" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when any associated target property participating in a binding on this element changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceUpdated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any associated data source participating in a binding on this element changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DataContextChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when this element&apos;s data context changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Initialized" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when this FrameworkContentElement is initialized. This coincides with cases where the value of the IsInitialized property changes from false (or undefined) to true. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Loaded" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the element is laid out, rendered, and ready for interaction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unloaded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the element is removed from an element tree of loaded elements. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipOpening" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when any tooltip on the element is opened. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipClosing" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs just before any tooltip on the element is closed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuOpening" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when any context menu on the element is opened. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuClosing" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs just before any context menu on the element is closed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameworkElementAttributes">
		<xs:attribute name="Style" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OverridesDefaultStyle" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Resources" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DataContext" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Language" type="frlrfSystemWindowsMarkupXmlLanguageClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the identifying name of the element. The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during parsing by a XAML reader. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Tag" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputScope" type="frlrfSystemWindowsInputInputScopeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the context for input used by this FrameworkElement.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LayoutTransform" type="frlrfSystemWindowsMediaTransformClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the width of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the minimum width constraint of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum width constraint of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the suggested height of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum height constraint of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum height constraint of the element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction that text and other user interface (UI) elements flow within any parent element that controls their layout.  This is a dependency property (with an additional attached property usage).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Margin" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the outer margin of an element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalAlignment" type="frlrfSystemWindowsHorizontalAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalAlignment" type="frlrfSystemWindowsVerticalAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FocusVisualStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Cursor" type="frlrfSystemWindowsInputCursorClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ForceCursor" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether this FrameworkElement should force the user interface (UI) to render the cursor as declared by the Cursor property.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTip" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TargetUpdated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the target value changes for any property binding on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceUpdated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the source value changes for any existing property binding on this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DataContextChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this element&apos;s data context changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RequestBringIntoView" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when Rect is called on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SizeChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when either the ActualHeight or the ActualWidth properties change value on this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Initialized" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this FrameworkElement is initialized. This event coincides with cases where the value of the IsInitialized property changes from false (or undefined) to true. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Loaded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the element is laid out, rendered, and ready for interaction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unloaded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the element is removed from within an element tree of loaded elements. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipOpening" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any tooltip on the element is opened. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ToolTipClosing" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs just before any tooltip on the element is closed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuOpening" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when any context menu on the element is opened. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContextMenuClosing" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs just before any context menu on the element is closed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="UIElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="WindowAttributes">
		<xs:attribute name="AllowsTransparency" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the whether a window&apos;s client area supports transparency.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Title" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a window&apos;s title.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Icon" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a window&apos;s icon.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SizeToContent" type="frlrfSystemWindowsSizeToContentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies whether a window will automatically size itself to fit the size of its content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Top" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of the window&apos;s top edge, in relation to the desktop.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Left" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of the window&apos;s left edge, in relation to the desktop.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowStartupLocation" type="frlrfSystemWindowsWindowStartupLocationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of the window when first shown.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShowInTaskbar" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value whether the window has a task bar button.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Owner" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Window that owns this Window.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DialogResult" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the dialog result value, which is the value that is returned from the ShowDialog method.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowStyle" type="frlrfSystemWindowsWindowStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a window&apos;s border style.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowState" type="frlrfSystemWindowsWindowStateClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a window is restored, minimized, or maximized.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResizeMode" type="frlrfSystemWindowsResizeModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the resize mode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Topmost" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a window appears in the topmost z order.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceInitialized" type="eventHandler">
			<xs:annotation>
				<xs:documentation>This event is raised to support interop. See HwndSource.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Activated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a window becomes the foreground window.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Deactivated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a window becomes a background window.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StateChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the window&apos;s WindowState property changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LocationChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the window&apos;s location changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Closing" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs directly after Close is called, and can be handled to cancel window closure.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Closed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the window as about to close.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentRendered" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs after a window&apos;s content has been rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ApplicationAttributes">
		<xs:attribute name="MainWindow" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the main window of the application.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShutdownMode" type="frlrfSystemWindowsShutdownModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the condition that causes the Shutdown method to be called.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Resources" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of application-scope resources, such as styles and brushes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StartupUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a UI that is automatically shown when an application starts.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Startup" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the Run method of the Application object is called.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Exit" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs just before an application shuts down, and cannot be canceled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Activated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an application becomes the foreground application.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Deactivated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an application stops being the foreground application.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SessionEnding" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the user ends the Windows session by logging off or shutting down the operating system.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DispatcherUnhandledException" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an exception is raised by the application but not handled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigating" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a new navigation is requested by a navigator in the application.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationProgress" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an error is raised while a navigator in the application is navigating to the requested content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LoadCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationStopped" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the StopLoading method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FragmentNavigation" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source XAML content has been loaded if the desired fragment is in different content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AttachedPropertyBrowsableForChildrenAttributeAttributes">
		<xs:attribute name="IncludeDescendants" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  .NET Framework attribute is applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AttachedPropertyBrowsableAttributeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ResourceKeyAttributes">
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ComponentResourceKeyAttributes">
		<xs:attribute name="TypeInTargetAssembly" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Type that defines the resource key.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResourceId" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a unique identifier (ID) to differentiate this key from others associated with this type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ResourceKeyAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameworkTemplateAttributes">
		<xs:attribute name="VisualTree" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the root node of the template.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Resources" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this template.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ConditionAttributes">
		<xs:attribute name="Property" type="frlrfSystemWindowsMarkupDependencyPropertyConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the property of the condition. This is only applicable to MultiTrigger objects.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Binding" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the binding that specifies the property of the condition. This is only applicable to MultiDataTrigger objects.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the condition.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the object with the property that causes the associated setters to be applied. This is only applicable to MultiTrigger objects.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ConditionCollectionAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="DataTemplateAttributes">
		<xs:attribute name="DataType" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type for which this DataTemplate is intended. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkTemplateAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TriggerActionAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CornerRadiusAttributes">
		<xs:attribute name="TopLeft" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the radius of the top left corner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TopRight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the radius of the top right corner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BottomRight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the radius of the bottom right corner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BottomLeft" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the radius of the bottom left corner. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="TemplateKeyAttributes">
		<xs:attribute name="DataType" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type for which the template is designed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ResourceKeyAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TriggerBaseAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DataTriggerAttributes">
		<xs:attribute name="Binding" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the binding that produces the property value of the data object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value to be compared with the property value of the data object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DynamicResourceAttributes">
		<xs:attribute name="ResourceKey" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the key specified by this dynamic resource reference. The key is used to lookup a resource in resource dictionaries, by means of an intermediate expression. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SetterBaseAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EventSetterAttributes">
		<xs:attribute name="Event" type="frlrfSystemWindowsMarkupRoutedEventConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the particular routed event that this EventSetter responds to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SetterBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EventTriggerAttributes">
		<xs:attribute name="RoutedEvent" type="frlrfSystemWindowsMarkupRoutedEventConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the RoutedEvent that will activate this trigger.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the object with the event that activates this trigger. This is only used by element triggers or template triggers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FigureLengthAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameworkElementFactoryAttributes">
		<xs:attribute name="Type" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type of the objects this factory produces.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text string to produce.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of a template item.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameworkPropertyMetadataAttributes">
		<xs:attribute name="AffectsMeasure" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AffectsArrange" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AffectsParentMeasure" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element&apos;s layout during layout engine operations. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AffectsParentArrange" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element&apos;s layout during layout engine operations. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AffectsRender" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Inherits" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the value of the dependency property is inheritable. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OverridesInheritanceBehavior" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsNotDataBindable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the dependency property supports data binding. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BindsTwoWayByDefault" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the property binds two-way by default. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DefaultUpdateSourceTrigger" type="frlrfSystemWindowsDataUpdateSourceTriggerClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the default for UpdateSourceTrigger to use when bindings for the property with this metadata are applied, which have their UpdateSourceTrigger set to Default.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Journal" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SubPropertiesDoNotAffectRender" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="UIPropertyMetadataAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridLengthAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="HierarchicalDataTemplateAttributes">
		<xs:attribute name="ItemsSource" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the DataTemplate to apply to the ItemTemplate property on a generated HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to indicate how to display items from the next level in the data hierarchy.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the DataTemplateSelector to apply to the ItemTemplateSelector property on a generated HeaderedItemsControl (such as a MenuItem or a TreeViewItem), to indicate how to select a template to display items from the next level in the data hierarchy.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DataTemplateAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MultiDataTriggerAttributes">
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MultiTriggerAttributes">
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyPathAttributes">
		<xs:attribute name="Path" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the string that describes the path. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ResourceDictionaryAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the uniform resource identifier (URI) to load resources from.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StaticResourceAttributes">
		<xs:attribute name="ResourceKey" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the key value passed by this static resource reference. They key is used  to return the object matching that key in resource dictionaries. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SetterAttributes">
		<xs:attribute name="Property" type="frlrfSystemWindowsMarkupDependencyPropertyConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the property to which the Value will be applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value to apply to the property that is specified by this Setter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TargetName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the object this Setter is intended for.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SetterBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SetterBaseCollectionAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="StyleAttributes">
		<xs:attribute name="TargetType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type for which this style is intended.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BasedOn" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a defined style that is the basis of the current style.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Resources" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the collection of resources that can be used within the scope of this style.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StyleTypedPropertyAttributeAttributes">
		<xs:attribute name="Property" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the property that is of type Style.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StyleTargetType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the TargetType of the Property this attribute is specifying.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AttributeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TemplateBindingExpressionAttributes">
		<xs:attributeGroup ref="ExpressionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TemplateBindingAttributes">
		<xs:attribute name="Property" type="frlrfSystemWindowsMarkupDependencyPropertyConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the property being bound to. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Converter" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the converter that interprets between source and target of a binding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConverterParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the parameter to pass to the converter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TemplatePartAttributeAttributes">
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the pre-defined name of the part.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Type" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type of the named part this attribute is identifying.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AttributeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThemeDictionaryAttributes">
		<xs:attribute name="AssemblyName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a string setting a particular naming convention to identify which dictionary applies for a particular theme. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ThicknessAttributes">
		<xs:attribute name="Left" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width, in pixels, of the left side of the bounding rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Top" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width, in pixels, of the upper side of the bounding rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Right" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width, in pixels, of the right side of the bounding rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Bottom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width, in pixels, of the lower side of the bounding rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="TriggerAttributes">
		<xs:attribute name="Property" type="frlrfSystemWindowsMarkupDependencyPropertyConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the property that returns the value that is compared with the Value property of the trigger. The comparison is a reference equality check.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Value" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value to be compared with the property value of the element. The comparison is a reference equality check.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SourceName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the object with the property that causes the associated setters to be applied.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TriggerActionCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="WindowCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CollectionViewGroupAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BindingBaseAttributes">
		<xs:attribute name="FallbackValue" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value to use when the binding is unable to return a value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BindingAttributes">
		<xs:attribute name="Path" type="frlrfSystemWindowsPropertyPathClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the path to the binding source property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="XPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an XPath query that returns the value on the XML binding source to use.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Mode" type="frlrfSystemWindowsDataBindingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the direction of the data flow in the binding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UpdateSourceTrigger" type="frlrfSystemWindowsDataUpdateSourceTriggerClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines the timing of binding source updates.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnSourceUpdated" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the SourceUpdated event when a value is transferred from the binding target to the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnTargetUpdated" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the TargetUpdated event when a value is transferred from the binding source to the binding target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnValidationError" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the Error attached event on the bound object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Converter" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the converter to use.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConverterParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the parameter to pass to the Converter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConverterCulture" type="frlrfSystemWindowsCultureInfoIetfLanguageTagConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the culture in which to evaluate the converter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Source" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the object to use as the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RelativeSource" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the binding source by specifying its location relative to the position of the binding target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ElementName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the element to use as the binding source object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAsync" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the Binding should get and set values asynchronously.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AsyncState" type="frlrfSystemObjectClassTopic"/>
		<xs:attribute name="BindsDirectlyToSource" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to evaluate the Path relative to the data item or the DataSourceProvider object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BindingBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BindingExpressionBaseAttributes">
		<xs:attributeGroup ref="ExpressionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BindingExpressionAttributes">
		<xs:attributeGroup ref="BindingExpressionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CollectionContainerAttributes">
		<xs:attribute name="Collection" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the collection to add. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CollectionViewSourceAttributes">
		<xs:attribute name="Source" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the collection object from which to create this view. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CollectionViewType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the desired view type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Culture" type="frlrfSystemWindowsCultureInfoIetfLanguageTagConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the culture that is used for operations such as sorting and comparisons.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Filter" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Provides filtering logic.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CompositeCollectionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MultiBindingAttributes">
		<xs:attribute name="Mode" type="frlrfSystemWindowsDataBindingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the direction of the data flow of this binding.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UpdateSourceTrigger" type="frlrfSystemWindowsDataUpdateSourceTriggerClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines the timing of binding source updates.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnSourceUpdated" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the SourceUpdated event when a value is transferred from the binding target to the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnTargetUpdated" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the TargetUpdated event when a value is transferred from the binding source to the binding target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NotifyOnValidationError" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to raise the Error attached event on the bound element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Converter" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the converter to use to convert the source values to or from the target value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConverterParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets an optional parameter to pass to a converter as additional information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ConverterCulture" type="frlrfSystemWindowsCultureInfoIetfLanguageTagConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the CultureInfo object that applies to any converter assigned to bindings wrapped by the MultiBinding or on the MultiBinding itself.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BindingBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MultiBindingExpressionAttributes">
		<xs:attributeGroup ref="BindingExpressionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectDataProviderAttributes">
		<xs:attribute name="ObjectType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type of object to create an instance of.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ObjectInstance" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the object instance used as the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MethodName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the method to call.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAsynchronous" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to perform object creation in a worker thread or in the active context.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DataSourceProviderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PriorityBindingAttributes">
		<xs:attributeGroup ref="BindingBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PriorityBindingExpressionAttributes">
		<xs:attributeGroup ref="BindingExpressionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyGroupDescriptionAttributes">
		<xs:attribute name="PropertyName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the property that is used to determine which group(s) an item belongs to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Converter" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StringComparison" type="frlrfSystemStringComparisonClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a StringComparison value that specifies the comparison between the value of an item (as determined by PropertyName and Converter) and the name of a group.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GroupDescriptionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RelativeSourceAttributes">
		<xs:attribute name="Mode" type="frlrfSystemWindowsDataRelativeSourceModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a RelativeSourceMode value that describes the location of the binding source relative to the position of the binding target.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AncestorType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type of ancestor to look for.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AncestorLevel" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the level of ancestor to look for, in FindAncestor mode. Use 1 to indicate the one nearest to the binding target element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MarkupExtensionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="XmlNamespaceMappingCollectionAttributes">
		<xs:attributeGroup ref="XmlNamespaceManagerAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="XmlDataProviderAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Uri of the XML data file to use as the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Document" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the XmlDocument to use as the binding source.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="XPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the XPath query used to generate the data collection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="XmlNamespaceManager" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the XmlNamespaceManager used to run XPath queries.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsAsynchronous" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether node collection creation will be performed in a worker thread or in active context.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DataSourceProviderAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="XmlNamespaceMappingAttributes">
		<xs:attribute name="Prefix" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the prefix to use in Extensible Application Markup Language (XAML).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Uri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Uri of the namespace for which to create a mapping.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="NavigationWindowAttributes">
		<xs:attribute name="SandboxExternalContent" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a NavigationWindow isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShowsNavigationUI" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a NavigationWindow shows its navigation UI. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigating" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a new navigation is requested.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationProgress" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs periodically during a download to provide navigation progress information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an error is raised while navigating to the requested content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the content that is being navigated to has been found, and is available from the Content property, although it may not have completed loading.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LoadCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationStopped" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the StopLoading method is called, or when a new navigation is requested while a current navigation is in progress.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FragmentNavigation" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="WindowAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CustomContentStateAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PageFunctionBaseAttributes">
		<xs:attribute name="RemoveFromJournal" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the page function should not be added to navigation history.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PageAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PageFunctionOfTAttributes">
		<xs:attribute name="Return" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a called PageFunction returns, and can only be handled by the calling page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PageFunctionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ShapeAttributes">
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Stretch enumeration value that describes how the shape fills its allocated space.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Fill" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that specifies how to paint the interior of the shape. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stroke" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that specifies how to paint the Shape outline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeThickness" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the Shape outline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeStartLineCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a PenLineCap enumeration value that describes the Shape at the start of a Stroke. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeEndLineCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a PenLineCap enumeration value that describes the Shape at the end of a line. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeDashCap" type="frlrfSystemWindowsMediaPenLineCapClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a PenLineCap enumeration value that specifies how the ends of a dash are drawn. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeLineJoin" type="frlrfSystemWindowsMediaPenLineJoinClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a PenLineJoin enumeration value that specifies the type of join that is used at the vertices of a Shape.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeMiterLimit" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a limit on the ratio of the miter length to half the StrokeThickness of a Shape element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeDashOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Double that specifies the distance within the dash pattern where a dash begins.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeDashArray" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection of Double values that indicate the pattern of dashes and gaps that is used to outline shapes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EllipseAttributes">
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LineAttributes">
		<xs:attribute name="X1" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the Line start point. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y1" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the Line start point. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="X2" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the Line end point. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y2" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the Line end point. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PathAttributes">
		<xs:attribute name="Data" type="frlrfSystemWindowsMediaGeometryClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Geometry that specifies the shape to be drawn. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PolygonAttributes">
		<xs:attribute name="Points" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection that contains the vertex points of the polygon. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FillRule" type="frlrfSystemWindowsMediaFillRuleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a FillRule enumeration that specifies how the interior fill of the shape is determined. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PolylineAttributes">
		<xs:attribute name="Points" type="frlrfSystemWindowsMediaPointCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection that contains the vertex points of the Polyline. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FillRule" type="frlrfSystemWindowsMediaFillRuleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a FillRule enumeration that specifies how the interior fill of the shape is determined. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectangleAttributes">
		<xs:attribute name="RadiusX" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RadiusY" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ShapeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AdornerAttributes">
		<xs:attribute name="IsClipEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether clipping of the adorner is enabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AdornerDecoratorAttributes">
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextElementAttributes">
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the preferred top-level font family for the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the  font style for the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font weight for the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font-stretching characteristics for the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the  font size for the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush to apply to the content in this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InlineAttributes">
		<xs:attribute name="BaselineAlignment" type="frlrfSystemWindowsBaselineAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the baseline alignment for the Inline element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextDecorations" type="frlrfSystemWindowsTextDecorationCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the relative direction for flow of content within a Inline element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AnchoredBlockAttributes">
		<xs:attribute name="Margin" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the text element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BlockAttributes">
		<xs:attribute name="IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Margin" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the relative direction for flow of content within a Block element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the block-level flow content element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BreakPageBefore" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BreakColumnBefore" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ClearFloaters" type="frlrfSystemWindowsWrapDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a direction in which any Floater elements contained by a Block element should be re-positioned.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BlockUIContainerAttributes">
		<xs:attribute name="Child" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the UIElement hosted by the BlockUIContainer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SpanAttributes">
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DocumentReferenceAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the uniform resource identifier (URI) for this document reference.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FixedDocumentSequenceAttributes">
		<xs:attribute name="PrintTicket" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the PrintTicket that is associated with this document sequence. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FigureAttributes">
		<xs:attribute name="HorizontalAnchor" type="frlrfSystemWindowsFigureHorizontalAnchorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the position that content is anchored to in the horizontal direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalAnchor" type="frlrfSystemWindowsFigureVerticalAnchorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the position that content is anchored to in the vertical direction.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the distance that a Figure is offset from its baseline in the horizontal direction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the distance that a Figure is offset from its baseline in the vertical direction. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanDelayPlacement" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether this figure can delay its placement in the flow of content. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WrapDirection" type="frlrfSystemWindowsWrapDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the allowable ways in which content can flow around a Figure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemWindowsFigureLengthClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the width of a Figure element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemWindowsFigureLengthClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the height of a Figure element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnchoredBlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FixedDocumentAttributes">
		<xs:attribute name="PrintTicket" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the PrintTicket that is associated with this document. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FixedPageAttributes">
		<xs:attribute name="PrintTicket" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the PrintTicket that is associated with the page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush used for rendering the page background. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentBox" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the bounding rectangle of the content area; that is, the area of the page within the margins, if any.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BleedBox" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a rectangle defining the overflow area for bleeds, registration marks, and crop marks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FloaterAttributes">
		<xs:attribute name="HorizontalAlignment" type="frlrfSystemWindowsHorizontalAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment for a Floater object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the width of a Floater object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="AnchoredBlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FlowDocumentAttributes">
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the preferred top-level font family for the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font style for the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font weight for the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font-stretching characteristics for the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font size for the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush to apply to the text contents of the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the relative direction for flow of content within a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum desired width of the columns within a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnGap" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the column gap value, which indicates the spacing between columns in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsColumnWidthFlexible" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the ColumnWidth value is flexible or fixed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnRuleWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a the column rule width.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnRuleBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush used to draw the rule between columns.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOptimalParagraphEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether optimal paragraph layout is enabled or disabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the preferred width for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinPageWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum width for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxPageWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum width for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the preferred height for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinPageHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum height for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxPageHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum height for pages in a FlowDocument.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PagePadding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the thickness of padding space between the boundaries of a page and the page&apos;s content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GlyphsAttributes">
		<xs:attribute name="Fill" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets the sets the Brush that is used for the fill of the Glyphs class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Indices" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the glyph indices that represent the Glyphs object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UnicodeString" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the String that represents the Unicode string for the Glyphs object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CaretStops" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the caret stops that correspond to the code points in the Unicode string representing the Glyphs.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontRenderingEmSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the em size used for rendering the Glyphs class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OriginX" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the x origin for the Glyphs object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OriginY" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the x origin for the Glyphs object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Uri that represents the location of the font used for rendering the Glyphs class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StyleSimulations" type="frlrfSystemWindowsMediaStyleSimulationsClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the StyleSimulations for the Glyphs class.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSideways" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Determines whether to rotate the Glyphs object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BidiLevel" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the bidirectional nesting level of Glyphs.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DeviceFontName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the specific device font for which the Glyphs object has been optimized.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HyperlinkAttributes">
		<xs:attribute name="Command" type="frlrfSystemWindowsInputCommandConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a command to associate with the Hyperlink.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets command parameters associated with the command specified by the Command property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a target element on which to execute the command specified by the Command property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigateUri" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a URI to navigate to when the Hyperlink is activated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TargetName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of a target window or frame for the Hyperlink.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RequestNavigate" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when navigation events are requested.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Click" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the left mouse button is clicked on a Hyperlink.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SpanAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InlineUIContainerAttributes">
		<xs:attribute name="Child" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the UIElement hosted by the InlineUIContainer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LinkTargetAttributes">
		<xs:attribute name="Name" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the element that this LinkTarget identifies as a linkable element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LinkTargetCollectionAttributes">
		<xs:attributeGroup ref="CollectionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ListAttributes">
		<xs:attribute name="MarkerStyle" type="frlrfSystemWindowsTextMarkerStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the marker style for the List.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MarkerOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the desired distance between the contents of each ListItem element, and the near edge of the list marker.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StartIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets of sets the starting index for labeling the items in an ordered list.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ListItemAttributes">
		<xs:attribute name="Margin" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the margin thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the relative direction for flow of content within a ListItem element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the ListItem.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PageContentAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the uniform resource identifier (URI) to the FixedPage content data stream. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="GetPageRootCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when Boolean has completed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ParagraphAttributes">
		<xs:attribute name="TextDecorations" type="frlrfSystemWindowsTextDecorationCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a TextDecorationCollection that contains text decorations to apply to this element. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextIndent" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how far to indent the first line of a Paragraph. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinOrphanLines" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the minimum number of lines that can be left before the break when a Paragraph is broken by a page break or column break. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinWidowLines" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the minimum number of lines that can be placed after the break when a Paragraph is broken by a page break or column break. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeepWithNext" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a break may occur between this paragraph and the next paragraph. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeepTogether" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the text of the paragraph may be broken by a page break or column break. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RunAttributes">
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the unformatted text contents of this text Run.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="InlineAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SectionAttributes">
		<xs:attribute name="HasTrailingParagraphBreakOnPaste" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not a trailing paragraph break should be inserted after the last paragraph when placing the contents of a root Section element on the clipboard.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TableAttributes">
		<xs:attribute name="CellSpacing" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of spacing between cells in a table.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="BlockAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TableCellAttributes">
		<xs:attribute name="ColumnSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of columns that the TableCell should span.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="RowSpan" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of rows that the TableCell should span.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the padding thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the border thickness for the element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush to use when painting the element&apos;s border.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FlowDirection" type="frlrfSystemWindowsFlowDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the relative direction for flow of content within a TableCell element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the TableCell.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TableColumnAttributes">
		<xs:attribute name="Width" type="frlrfSystemWindowsGridLengthClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or set the width of a TableColumn element. The Width property measures the sum of the Column&apos;s content, padding, and border from side to side. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the background Brush used to fill the content of the TableColumn. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TableRowAttributes">
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TableRowGroupAttributes">
		<xs:attributeGroup ref="TextElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DefinitionBaseAttributes">
		<xs:attribute name="SharedSizeGroup" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies a ColumnDefinition or RowDefinition as a member of a defined group that shares sizing properties. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkContentElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ColumnDefinitionAttributes">
		<xs:attribute name="Width" type="frlrfSystemWindowsGridLengthClassTopic">
			<xs:annotation>
				<xs:documentation>Gets the calculated width of a ColumnDefinition element, or sets the GridLength value of a column that is defined by the ColumnDefinition. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the minimum width of a ColumnDefinition. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the maximum width of a ColumnDefinition. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DefinitionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RowDefinitionAttributes">
		<xs:attribute name="Height" type="frlrfSystemWindowsGridLengthClassTopic">
			<xs:annotation>
				<xs:documentation>Gets the calculated height of a RowDefinition element, or sets the GridLength value of a row that is defined by the RowDefinition. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the minimum allowable height of a RowDefinition. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the maximum height of a RowDefinition.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DefinitionBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PanelAttributes">
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush that is used to fill the area between the borders of a Panel. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsItemsHost" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates that this Panel is a container for user interface (UI) items that are generated by an ItemsControl. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ControlAttributes">
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a thickness that describes the border thickness of a control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a brush that describes the background of a control. This is a  dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a brush that describes the foreground color.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the specified font. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font size. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the degree to which a font is condensed or expanded on the screen. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font style. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the weight or thickness of the specified font. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalContentAlignment" type="frlrfSystemWindowsHorizontalAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal alignment of a control&apos;s content.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalContentAlignment" type="frlrfSystemWindowsVerticalAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical alignment of a control&apos;s content.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TabIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines the order in which elements are logically navigated. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsTabStop" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a control is included in tab navigation. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the padding inside a control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Template" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a control template. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewMouseDoubleClick" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a user clicks the mouse button two or more times. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MouseDoubleClick" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a mouse button is clicked two or more times. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContentControlAttributes">
		<xs:attribute name="Content" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the content of a ContentControl. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the data template used to display the content of the ContentControl. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ItemsControlAttributes">
		<xs:attribute name="ItemsSource" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a collection used to generate the content of this ItemsControl. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DisplayMemberPath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a path to a value on the source object to serve as the visual representation of the object. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or set the DataTemplate used to display each item. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemContainerStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Style that is applied to the container element generated for each item. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemContainerStyleSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemsPanel" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsTextSearchEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets whether TextSearch is enabled on this ItemsControl instance. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContextMenuAttributes">
		<xs:attribute name="HorizontalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets where along the x-direction to place the ContextMenu with respect to the parent control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets where along the y-direction to place the ContextMenu with respect to the parent control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or set the IsOpen property of a context menu. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the PlacementTarget property of a ContextMenu. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the PlacementRectangle property of a ContextMenu. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Placement property of a ContextMenu. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the context menu has a drop shadow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StaysOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the ContextMenu should close automatically. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opened" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when a particular instance of a context menu opens. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Closed" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when a particular instance of a ContextMenu closes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MenuBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HeaderedItemsControlAttributes">
		<xs:attribute name="Header" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the item that labels the control. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the template used to display the contents of the control&apos;s header. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MenuItemAttributes">
		<xs:attribute name="Command" type="frlrfSystemWindowsInputCommandConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Command property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the parameter to pass to the Command property of a MenuItem. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandTarget" type="referenceType"/>
		<xs:attribute name="IsSubmenuOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the submenu containing the MenuItem control&apos;s children is open.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCheckable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a value that indicates whether a MenuItem can be checked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsChecked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the MenuItem is checked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StaysOpenOnClick" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates that the submenu in which this MenuItem is located should not close when this item is clicked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="InputGestureText" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Sets the text describing an input gesture that will call the command tied to the specified item. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Icon" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the icon that appears in a MenuItem. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Click" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a MenuItem is clicked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Checked" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a menu item is checked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unchecked" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a MenuItem is unchecked.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SubmenuOpened" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the state of the IsSubmenuOpen property changes to true. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SubmenuClosed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the state of the IsSubmenuOpen property changes to false. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="HeaderedItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FlowDocumentScrollViewerAttributes">
		<xs:attribute name="Document" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a FlowDocument that hosts the content to be displayed by the FlowDocumentScrollViewer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Zoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current zoom level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentScrollViewer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentScrollViewer.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ZoomIncrement" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the zoom increment.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSelectionEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not selection of content within the FlowDocumentScrollViewer is enabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsToolBarVisible" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the FlowDocumentScrollViewer toolbar is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a vertical scroll bar is shown.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FlowDocumentPageViewerAttributes">
		<xs:attribute name="Zoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentPageViewer. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ZoomIncrement" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the zoom increment. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DocumentViewerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ControlTemplateAttributes">
		<xs:attribute name="TargetType" type="frlrfSystemTypeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the type for which this ControlTemplate is intended.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkTemplateAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AccessTextAttributes">
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text that is displayed by the AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font family to use with the AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font style to use with the AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font weight to use with the AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a FontStretch property that selects a normal, condensed, or expanded font from a FontFamily. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font size to use with the AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that draws the text content of the element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that fills the content area. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextDecorations" type="frlrfSystemWindowsTextDecorationCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the decorations that are added to the text of an AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line box. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets how the LineHeight property is enforced.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal alignment of the content. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextTrimming" type="frlrfSystemWindowsTextTrimmingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets how the textual content of an AccessText element is clipped if it overflows the line box. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextWrapping" type="frlrfSystemWindowsTextWrappingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the textual content of an AccessText element is wrapped if it overflows the line box. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BaselineOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that adjusts the baseline offset position of text in an AccessText element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AdornedElementPlaceholderAttributes">
		<xs:attribute name="Child" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the single child object of this AdornedElementPlaceholder object.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DecoratorAttributes">
		<xs:attribute name="Child" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the single child element of a Decorator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="BorderAttributes">
		<xs:attribute name="BorderThickness" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the relative Thickness of a Border. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Thickness value that describes the amount of space between a Border and its child element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CornerRadius" type="frlrfSystemWindowsCornerRadiusClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that represents the degree to which the corners of a Border are rounded. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BorderBrush" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that draws the outer border color. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush that fills the area between the bounds of a Border. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ButtonAttributes">
		<xs:attribute name="IsDefault" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a Button is the default button. A user invokes the default button by pressing the Enter key.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsCancel" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a Button is the Cancel button. A user can activate the Cancel button by pressing the Escape key. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ButtonBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ComboBoxAttributes">
		<xs:attribute name="MaxDropDownHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the maximum height for a combo box drop-down. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsDropDownOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the drop-down for a combo box is currently open.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsEditable" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that enables or disables editing of the text in text box of the ComboBox. This is a  dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the text of the currently selected item. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsReadOnly" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StaysOpenOnEdit" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether a ComboBox that is open and displays a drop-down control will remain open when a user clicks the TextBox. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DropDownOpened" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the Popup of a ComboBox opens. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DropDownClosed" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the Popup of a ComboBox closes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SelectorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ListBoxItemAttributes">
		<xs:attribute name="IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether a ListBoxItem is selected. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Selected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ListBoxItem is selected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unselected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ListBoxItem is unselected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ComboBoxItemAttributes">
		<xs:attributeGroup ref="ListBoxItemAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ContentPresenterAttributes">
		<xs:attribute name="RecognizesAccessKey" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the ContentPresenter should use AccessText in its style. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Content" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the data used to generate the child elements of a ContentPresenter.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template used to display the content of the control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the DataTemplateSelector, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentSource" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the base name to use during automatic aliasing.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DockPanelAttributes">
		<xs:attribute name="LastChildFill" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the last child element within a DockPanel stretches to fill the remaining available space. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DocumentViewerAttributes">
		<xs:attribute name="HorizontalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal scroll position.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical scroll position. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShowPageBorders" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether drop-shadow page borders are displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Zoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the document zoom percentage.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxPagesAcross" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value defining the maximum number of page columns to display.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalPageSpacing" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the vertical spacing between displayed pages.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalPageSpacing" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the horizontal space between pages.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DocumentViewerBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ValidationRuleAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="HeaderedContentControlAttributes">
		<xs:attribute name="Header" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the data used for the header of each control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Template used to display the content of the control&apos;s header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Enables the application writer to provide custom logic for choosing the template used to display the Header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ExpanderAttributes">
		<xs:attribute name="ExpandDirection" type="frlrfSystemWindowsControlsExpandDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction in which the Expander content window opens. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsExpanded" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the Expander content window is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Expanded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the content window of an Expander control opens to display both its header and content. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Collapsed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the content window of an Expander control closes and only the Header is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="HeaderedContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FlowDocumentReaderAttributes">
		<xs:attribute name="Document" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a FlowDocument that hosts the content to be displayed by the FlowDocumentReader.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ViewingMode" type="frlrfSystemWindowsControlsFlowDocumentReaderViewingModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the viewing mode for the FlowDocumentReader.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsPageViewEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not SinglePage is available as a viewing mode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsTwoPageViewEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not FacingPages is available as a viewing mode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsScrollViewEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not SingleColumnScroll is available as a viewing mode.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsFindEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not the Find routed command is enabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsPrintEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether or not the Print routed command is enabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Zoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current zoom level.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum allowable Zoom level for the FlowDocumentReader.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinZoom" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum allowable Zoom level for the FlowDocumentReader.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ZoomIncrement" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the zoom increment.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FrameAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationUIVisibility" type="frlrfSystemWindowsNavigationNavigationUIVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets when the Frame can show its navigation UI. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SandboxExternalContent" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a Frame isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="JournalOwnership" type="frlrfSystemWindowsNavigationJournalOwnershipClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a Frame is responsible for managing its own navigation history, or yields navigation history management to a parent navigator (NavigationWindow, Frame).</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentRendered" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs after Frame content has been rendered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigating" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a new navigation is requested.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationProgress" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs periodically during a download to provide navigation progress information.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an error is raised while navigating to the requested content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Navigated" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the content that is being navigated to has been found, and is available from the Content property, although it may not have completed loading.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LoadCompleted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="NavigationStopped" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the StopLoading method is called, or when a new navigation is requested while a current navigation is in progress.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FragmentNavigation" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridAttributes">
		<xs:attribute name="ShowGridLines" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether grid lines are visible within this Grid. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ViewBaseAttributes">
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewAttributes">
		<xs:attribute name="ColumnHeaderContainerStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the style to apply to column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a template to use to display the column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the selector object that provides logic for selecting a template to use for each column header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowsColumnReorder" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether columns in a GridView can be reordered by a drag-and-drop operation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a ContextMenu for the GridView.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderToolTip" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the content of a tooltip that appears when the mouse pointer pauses over one of the column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ViewBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewColumnAttributes">
		<xs:attribute name="Header" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the content of the header of a GridViewColumn.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderContainerStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the style to use for the header of the GridViewColumn.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template to use to display the content of the column header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the DataTemplateSelector that provides logic to select the template to use to display the column header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DisplayMemberBinding" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the data item to bind to for this column.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CellTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template to use to display the contents of a column cell.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CellTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a DataTemplateSelector that determines the template to use to display cells in a column.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the column.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewColumnHeaderAttributes">
		<xs:attributeGroup ref="ButtonBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewHeaderRowPresenterAttributes">
		<xs:attribute name="ColumnHeaderContainerStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the Style to use for the column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template to use to display the column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a DataTemplateSelector that provides logic that selects the data template to use to display a column header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AllowsColumnReorder" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether columns can change positions.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderContextMenu" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a ContextMenu for the column headers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ColumnHeaderToolTip" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the content for a tooltip for the column header row.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GridViewRowPresenterBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridViewRowPresenterAttributes">
		<xs:attribute name="Content" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the data content to display in a row.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="GridViewRowPresenterBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GridSplitterAttributes">
		<xs:attribute name="ResizeDirection" type="frlrfSystemWindowsControlsGridResizeDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a GridSplitter control resizes rows or columns. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResizeBehavior" type="frlrfSystemWindowsControlsGridResizeBehaviorClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets which columns or rows are resized relative to the column or row for which the GridSplitter control is defined.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShowsPreview" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the GridSplitter control updates the column or row size as the user drags the control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreviewStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the style that customizes the appearance, effects, or other style characteristics for the GridSplitter control preview indicator that is displayed when the ShowsPreview property is set to true.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeyboardIncrement" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the distance that each press of an arrow key moves a GridSplitter control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DragIncrement" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum distance that a user must drag a mouse to resize rows or columns with a GridSplitter control. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ThumbAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GroupStyleAttributes">
		<xs:attribute name="Panel" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a template that creates the panel used to layout the items.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContainerStyle" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the style that is applied to the GroupItem generated for each item.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContainerStyleSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Enables the application writer to provide custom selection logic for a style to apply to each generated GroupItem.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the template that is used to display the group header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HeaderTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Enables the application writer to provide custom selection logic for a template that is used to display the group header.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HidesIfEmpty" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether items corresponding to empty groups should be displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ImageAttributes">
		<xs:attribute name="Source" type="frlrfSystemWindowsMediaImageSourceClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ImageSource for the image. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that describes how an Image should be stretched to fill the destination rectangle. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StretchDirection" type="frlrfSystemWindowsControlsStretchDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how the image is scaled. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ImageFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when there is a failure in the image.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InkCanvasAttributes">
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Brush used to fill the area between the borders of a InkCanvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Strokes" type="frlrfSystemWindowsStrokeCollectionConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the collection of ink Stroke objects collected by the InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DefaultDrawingAttributes" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the drawing attributes that are applied to new ink strokes made on the InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EraserShape" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets the StylusShape used to point-erase ink from an InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EditingMode" type="frlrfSystemWindowsControlsInkCanvasEditingModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the user editing mode used when a pointing device is active.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EditingModeInverted" type="frlrfSystemWindowsControlsInkCanvasEditingModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the user editing mode that will be used with an InkCanvas when the stylus is held in an inverted position. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UseCustomCursor" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether to override standard InkCanvas cursor functionality to support a custom cursor. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MoveEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether the user is enabled to move selected ink strokes and/or elements on the InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ResizeEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether the user is enabled to resize selected ink strokes and/or elements on the InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DefaultStylusPointDescription" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the stylus point description for an InkCanvas. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PreferredPasteFormats" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the formats that can be pasted onto the InkCanvas.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeCollected" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when a stroke drawn by the user is added to the Strokes property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Gesture" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the InkCanvas detects a gesture.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokesReplaced" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the Strokes property is replaced.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DefaultDrawingAttributesReplaced" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the DefaultDrawingAttributes property is replaced. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ActiveEditingModeChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the current editing mode changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EditingModeChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the EditingMode property of an InkCanvas object has been changed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="EditingModeInvertedChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when the EditingModeInverted property of an InkCanvas object has been changed. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionMoving" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs at the onset of the selected strokes and elements being moved. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionMoved" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a selection of strokes and/or elements has been moved by the user. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeErasing" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs just before a user erases a strokes  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StrokeErased" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when user erases a stroke. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionResizing" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs at the onset of the selected strokes and elements being resized.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionResized" type="eventHandler">
			<xs:annotation>
				<xs:documentation> Occurs when a selection of strokes and/or elements has been resized by the user. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionChanging" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a new set of ink strokes and/or elements is being selected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the selection on the InkCanvas changes. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InkPresenterAttributes">
		<xs:attribute name="Strokes" type="frlrfSystemWindowsStrokeCollectionConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets and sets the strokes that the InkPresenter displays.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="LabelAttributes">
		<xs:attribute name="Target" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the element that receives focus when the user presses the label&apos;s access key. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ListBoxAttributes">
		<xs:attribute name="SelectionMode" type="frlrfSystemWindowsControlsSelectionModeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the selection behavior for a ListBox. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SelectorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ListViewAttributes">
		<xs:attribute name="View" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets an object that defines how the data is styled and organized in a ListView control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ListBoxAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MediaElementAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a media source on the MediaElement. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Clock" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the clock associated with the MediaTimeline that controls media playback.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a Stretch value that describes how a MediaElement fills the destination rectangle. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StretchDirection" type="frlrfSystemWindowsControlsStretchDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that determines the restrictions on scaling that are applied to the image. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Volume" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the media&apos;s volume. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Balance" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a ratio of volume across speakers. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMuted" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating whether the audio is muted. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrubbingEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether the MediaElement will update frames for seek operations while paused. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UnloadedBehavior" type="frlrfSystemWindowsControlsMediaStateClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the unload behavior MediaState for the media. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LoadedBehavior" type="frlrfSystemWindowsControlsMediaStateClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the load behavior MediaState for the media. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Position" type="frlrfSystemTimeSpanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the current position of progress through the media&apos;s playback time.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SpeedRatio" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the speed ratio of the media.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaFailed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an error is encountered.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaOpened" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when media loading has finished.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BufferingStarted" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when media buffering has begun.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BufferingEnded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when media buffering has ended.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScriptCommand" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a script command is encountered in the media.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MediaEnded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the media has ended.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MenuAttributes">
		<xs:attribute name="IsMainMenu" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether this Menu receives a main menu activation notification. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="MenuBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PageAttributes">
		<xs:attribute name="Content" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets content of a Page. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowTitle" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the title of the host Window or NavigationWindow of a Page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowHeight" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of the host Window or NavigationWindow of a Page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="WindowWidth" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the host Window or NavigationWindow of a Page.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the background for a Page. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Title" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the title of the Page. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ShowsNavigationUI" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the navigation UI of a NavigationWindow or Microsoft Internet Explorer 6 is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="KeepAlive" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether an instance of a Page is retained in navigation history. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the foreground for a Page. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the name of the specified font family. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the font size. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Template" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the control template for a Page. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PasswordBoxAttributes">
		<xs:attribute name="Password" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the password currently held by the PasswordBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PasswordChar" type="frlrfSystemCharClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the masking character for the PasswordBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxLength" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum length for passwords to be handled by this PasswordBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PasswordChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the value of the Password property changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ScrollContentPresenterAttributes">
		<xs:attribute name="CanContentScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Indicates whether the content, if it supports IScrollInfo, should be allowed to control scrolling</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanHorizontallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanVerticallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollOwner" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a ScrollViewer element that controls scrolling behavior.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentPresenterAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="StackPanelAttributes">
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the dimension by which child elements are stacked. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanHorizontallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a StackPanel can scroll in the horizontal dimension. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanVerticallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether content can scroll in the vertical dimension. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollOwner" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies the container that controls scrolling behavior in this StackPanel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PrintDialogAttributes">
		<xs:attribute name="PageRangeSelection" type="frlrfSystemWindowsControlsPageRangeSelectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the PageRangeSelection for this instance of PrintDialog.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PageRange" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the range of pages to print when PageRangeSelection is set to UserPages.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="UserPageRangeEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether users of the Print dialog box have the option to specify ranges of pages to print.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinPage" type="frlrfSystemUInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the lowest page number that is allowed in page ranges.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxPage" type="frlrfSystemUInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the highest page number that is allowed in page ranges.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PrintTicket" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the PrintTicket that is used by the PrintDialog when the user clicks Print for the current print job.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ProgressBarAttributes">
		<xs:attribute name="IsIndeterminate" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets whether the ProgressBar shows actual values or generic, continuous progress feedback. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the orientation of a ProgressBar: horizontal or vertical. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RangeBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RadioButtonAttributes">
		<xs:attribute name="GroupName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets mutually exclusive RadioButton groups. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ToggleButtonAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="RichTextBoxAttributes">
		<xs:attribute name="Document" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the FlowDocument that represents the contents of the RichTextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CaretPosition" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of the input caret.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextBoxBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ScrollViewerAttributes">
		<xs:attribute name="CanContentScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether elements that support the IScrollInfo interface are allowed to scroll. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HorizontalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a horizontal ScrollBar should be displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalScrollBarVisibility" type="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a vertical ScrollBar should be displayed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when changes are detected to the scroll position, extent, or viewport size.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SliderAttributes">
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the orientation of a Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsDirectionReversed" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the direction of increasing value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Delay" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of time in milliseconds that a RepeatButton waits, while it is pressed, before a command to move the Thumb executes, such as a DecreaseLarge command.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Interval" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount of time in milliseconds between increase or decrease commands when a user clicks the RepeatButton of a Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoToolTipPlacement" type="frlrfSystemWindowsControlsPrimitivesAutoToolTipPlacementClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a tooltip that contains the current value of the Slider displays when the Thumb is pressed. If a tooltip is displayed, this property also specifies the placement of the tooltip.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="AutoToolTipPrecision" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the number of digits that are displayed to the right side of the decimal point for the Value of the Slider in a tooltip.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSnapToTickEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the Slider automatically moves the Thumb to the closest tick mark.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TickPlacement" type="frlrfSystemWindowsControlsPrimitivesTickPlacementClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the position of tick marks with respect to the Track of the Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TickFrequency" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the interval between tick marks.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Ticks" type="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the positions of the tick marks to display for a Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSelectionRangeEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the Slider displays a selection range along the Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionStart" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the smallest value of a specified selection for a Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionEnd" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the largest value of a specified selection for a Slider.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsMoveToPointEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates  whether the Thumb of a Slider moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the Slider track. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="RangeBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="SoundPlayerActionAttributes">
		<xs:attribute name="Source" type="frlrfSystemUriClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the audio source location.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TriggerActionAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TabControlAttributes">
		<xs:attribute name="TabStripPlacement" type="frlrfSystemWindowsControlsDockClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets how tab headers align relative to the tab content. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplate" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the content template to apply to TabItems that do not have a contenttemplate or contenttemplateselector property defined.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ContentTemplateSelector" type="referenceType">
			<xs:annotation>
				<xs:documentation>Enables an application writer to provide custom style selection logic.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="SelectorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TabItemAttributes">
		<xs:attribute name="IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets a value that indicates whether the TabItem is selected. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="HeaderedContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextBlockAttributes">
		<xs:attribute name="BaselineOffset" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the amount by which each line of text is offset from the baseline.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text contents of a TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontFamily" type="frlrfSystemWindowsMediaFontFamilyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the preferred top-level font family for the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStyle" type="frlrfSystemWindowsFontStyleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font style for the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontWeight" type="frlrfSystemWindowsFontWeightClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font weight for the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontStretch" type="frlrfSystemWindowsFontStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font-stretching characteristics for the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="FontSize" type="frlrfSystemWindowsFontSizeConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the top-level font size for the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Foreground" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush to apply to the text contents of the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Brush used to fill the background of content area.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextDecorations" type="frlrfSystemWindowsTextDecorationCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a TextDecorationCollection that contains the effects to apply to the text of a TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of each line of content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="LineStackingStrategy" type="frlrfSystemWindowsLineStackingStrategyClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the mechanism by which a line box is determined for each line of text within the TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Padding" type="frlrfSystemWindowsThicknessClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a TextBlock.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the horizontal alignment of text content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextTrimming" type="frlrfSystemWindowsTextTrimmingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the text trimming behavior to employ when content overflows the content area.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextWrapping" type="frlrfSystemWindowsTextWrappingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how the TextBlock should wrap text.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsHyphenationEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TextBoxAttributes">
		<xs:attribute name="Text" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the text contents of the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextWrapping" type="frlrfSystemWindowsTextWrappingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates how the TextBox should wrap text.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MinLines" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the minimum number of visible lines to size to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxLines" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the maximum number of visible lines to size to.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CharacterCasing" type="frlrfSystemWindowsControlsCharacterCasingClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating how characters are cased as they are manually entered into the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="MaxLength" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating the maximum number of characters that can be manually entered into the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextAlignment" type="frlrfSystemWindowsTextAlignmentClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating the horizontal alignment of the contents of the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedText" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a string the current selection in the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionLength" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value indicating the number of characters in the current selection in the TextBox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectionStart" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a character index for the beginning of the current selection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CaretIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the insertion position index of the caret.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="TextDecorations" type="frlrfSystemWindowsTextDecorationCollectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets a TextDecorationCollection that contains text decorations to apply to this element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="TextBoxBaseAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ToolBarAttributes">
		<xs:attribute name="Band" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates where the toolbar should be located in the ToolBarTray. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="BandIndex" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the band index number that indicates the position of the toolbar on the band. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOverflowOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the ToolBar overflow area is currently visible. This is a dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="HeaderedItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ToolBarTrayAttributes">
		<xs:attribute name="Background" type="frlrfSystemWindowsMediaBrushClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a brush to use for the background color of the ToolBarTray</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation> Specifies the orientation of a ToolBarTray (horizontal or vertical). </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsLocked" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a ToolBar can be moved inside a ToolBarTray. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ToolTipAttributes">
		<xs:attribute name="HorizontalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset from left of the area that is specified for the ToolTip control.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="VerticalOffset" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the offset from the top of the area that is specified for the ToolTip control content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a ToolTip is visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="HasDropShadow" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the control has a drop shadow.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the UIElement relative to which the ToolTip is positioned when it opens.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="PlacementRectangle" type="frlrfSystemWindowsRectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the rectangular area relative to which the ToolTip control is positioned when it opens.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Placement" type="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the orientation of the ToolTip control when it opens, and specifies how the ToolTip control behaves when it overlaps screen boundaries. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StaysOpen" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether an open ToolTip remains open until the user clicks the mouse when the mouse is not over the ToolTip.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Opened" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ToolTip becomes visible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Closed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when a ToolTip is closed and is no longer visible. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ContentControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TreeViewAttributes">
		<xs:attribute name="SelectedValuePath" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the path that is used to get the SelectedValue of the SelectedItem in a TreeView.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="SelectedItemChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the SelectedItem changes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="TreeViewItemAttributes">
		<xs:attribute name="IsExpanded" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether the nested items in a TreeViewItem are expanded or collapsed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="IsSelected" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets whether a TreeViewItem control is selected.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Expanded" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsExpanded property changes from false to true.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Collapsed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsExpanded property changes from true to false.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Selected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsSelected property of a TreeViewItem changes from false to true.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Unselected" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the IsSelected property of a TreeViewItem changes from true to false.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="HeaderedItemsControlAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ViewboxAttributes">
		<xs:attribute name="Stretch" type="frlrfSystemWindowsMediaStretchClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Viewbox Stretch mode, which determines how content fits into the available space.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="StretchDirection" type="frlrfSystemWindowsControlsStretchDirectionClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the StretchDirection, which determines how scaling is applied to the contents of a Viewbox.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DecoratorAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Viewport3DAttributes">
		<xs:attribute name="Camera" type="referenceType">
			<xs:annotation>
				<xs:documentation> Gets or sets a camera object that projects the 3-D contents of the Viewport3D to the 2-D surface of the Viewport3D. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="FrameworkElementAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VirtualizingPanelAttributes">
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="VirtualizingStackPanelAttributes">
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanHorizontallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether a VirtualizingStackPanel can scroll in the horizontal dimension.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CanVerticallyScroll" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ScrollOwner" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that identifies the container that controls scrolling behavior in this VirtualizingStackPanel. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="VirtualizingPanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="WrapPanelAttributes">
		<xs:attribute name="ItemWidth" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the width of all items that are contained within a WrapPanel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ItemHeight" type="frlrfSystemWindowsLengthConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the height of all items that are contained within a WrapPanel.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Orientation" type="frlrfSystemWindowsControlsOrientationClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that specifies the dimension in which child content is arranged.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="PanelAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MatrixAttributes">
		<xs:attribute name="M11" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the first row and first column of this Matrix structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M12" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the value of the first row and second column of this Matrix structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M21" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the value of the second row and first column of this Matrix structure.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="M22" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the second row and second column of this Matrix structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetX" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and first column of this Matrix structure.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="OffsetY" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the value of the third row and second column of this Matrix structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="PointAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the X-coordinate value of this Point structure. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Y-coordinate value of this Point. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="SizeAttributes">
		<xs:attribute name="Width" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Width of this instance of Size. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the Height of this instance of Size. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="VectorAttributes">
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the X component of this vector. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Y component of this vector. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="RectAttributes">
		<xs:attribute name="Location" type="frlrfSystemWindowsPointClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the position of the rectangle&apos;s top-left corner.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Size" type="frlrfSystemWindowsSizeClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the Width and Height of the rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="X" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the location of the rectangle&apos;s left side. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the location of the rectangle&apos;s top side. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the width of the rectangle.  </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemDoubleClassTopic">
			<xs:annotation>
				<xs:documentation> Gets or sets the height of this rectangle. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="DependencyPropertyAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DependencyObjectAttributes">
		<xs:attribute name="Storyboard.TargetName" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Makes the specified Timeline target the dependency object with the specified name. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Storyboard.TargetProperty" type="frlrfSystemWindowsPropertyPathClassTopic">
			<xs:annotation>
				<xs:documentation>Makes the specified Timeline target the specified dependency property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AttachedPropertyBrowsableAttributeAttributes">
		<xs:attributeGroup ref="AttributeAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="PropertyMetadataAttributes">
		<xs:attribute name="DefaultValue" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation> Gets and sets the default value of the dependency property. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ExpressionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="FreezableAttributes">
		<xs:attribute name="Changed" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when this Freezable or an object it contains is modified. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="WeakEventManagerAttributes">
		<xs:attributeGroup ref="DispatcherObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="Int32RectAttributes">
		<xs:attribute name="X" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the x-coordinate of the top-left corner of the rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Y" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the y-coordinate of the top-left corner of the rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Width" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the width of the rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Height" type="frlrfSystemInt32ClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the height of the rectangle.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="DispatcherObjectAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ValueSerializerAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MarkupExtensionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObservableCollectionOfTAttributes">
		<xs:attribute name="CollectionChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when an item is added, removed, changed, moved, or the entire list is refreshed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="DataSourceProviderAttributes">
		<xs:attribute name="IsInitialLoadEnabled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="DataChanged" type="eventHandler">
			<xs:annotation>
				<xs:documentation>Occurs when the Data property has a new value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="GroupDescriptionAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ObjectAttributes">
		<xs:attribute name="Clipboard.DataObject" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Places a specified data object on the system Clipboard and accepts a Boolean parameter that indicates whether the data object should be left on the Clipboard when the application exits.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Localization.Comments" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Set the CommentsProperty attached property to the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Localization.Attributes" type="frlrfSystemStringClassTopic">
			<xs:annotation>
				<xs:documentation>Set the AttributesProperty attached property for the specified element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
	<xs:attributeGroup name="ValueTypeAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="AttributeAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="MulticastDelegateAttributes">
		<xs:attributeGroup ref="DelegateAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="DelegateAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="EnumAttributes">
	</xs:attributeGroup>
	<xs:attributeGroup name="EventArgsAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="CollectionBaseAttributes">
		<xs:attribute name="Capacity" type="frlrfSystemInt32ClassTopic"/>
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="XmlNamespaceManagerAttributes">
		<xs:attributeGroup ref="ObjectAttributes"/>
	</xs:attributeGroup>

<!-- AttributeGroup Section #2 -->

	<xs:attributeGroup name="RoutedEventArgsAttributes">
		<xs:attribute name="RoutedEvent" type="frlrfSystemWindowsMarkupRoutedEventConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the RoutedEvent associated with this RoutedEventArgs instance. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Handled" type="frlrfSystemBooleanClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Source" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets a reference to the object that raised the event. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="EventArgsAttributes"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="InputBindingAttributes">
		<xs:attribute name="Command" type="frlrfSystemWindowsInputCommandConverterClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the ICommand associated with this binding. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandParameter" type="frlrfSystemObjectClassTopic">
			<xs:annotation>
				<xs:documentation>Gets or sets the command specific data.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="CommandTarget" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the target element of the command.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="Gesture" type="referenceType">
			<xs:annotation>
				<xs:documentation>Gets or sets the InputGesture associated with this binding. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="DependencyObjectAttributes"/>
	</xs:attributeGroup>

<!-- AttributeGroup Section #3 -->


<!-- SimpleType Section #1 -->

	<xs:simpleType name="frlrfSystemWindowsMediaAnimationTimeSeekOriginClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BeginTime"/>
			<xs:enumeration value="Duration"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAnimationFillBehaviorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="HoldEnd"/>
			<xs:enumeration value="Stop"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAnimationHandoffBehaviorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="SnapshotAndReplace"/>
			<xs:enumeration value="Compose"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAnimationPathAnimationSourceClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="X"/>
			<xs:enumeration value="Y"/>
			<xs:enumeration value="Angle"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAnimationRepeatBehaviorClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAnimationSlipBehaviorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Grow"/>
			<xs:enumeration value="Slip"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaEffectsKernelTypeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Gaussian"/>
			<xs:enumeration value="Box"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaEffectsEdgeProfileClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Linear"/>
			<xs:enumeration value="CurvedIn"/>
			<xs:enumeration value="CurvedOut"/>
			<xs:enumeration value="BulgedUp"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DMatrix3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DPoint3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DPoint3DCollectionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DVector3DCollectionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DQuaternionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DSize3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMedia3DVector3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsCultureInfoIetfLanguageTagConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsDurationClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontStyleClassTopic">
		<xs:union memberTypes="FontStyles referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="FontStyles">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Oblique"/>
			<xs:enumeration value="Italic"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontStretchClassTopic">
		<xs:union memberTypes="FontStretches referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="FontStretches">
		<xs:restriction base="xs:string">
			<xs:enumeration value="UltraCondensed"/>
			<xs:enumeration value="ExtraCondensed"/>
			<xs:enumeration value="Condensed"/>
			<xs:enumeration value="SemiCondensed"/>
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Medium"/>
			<xs:enumeration value="SemiExpanded"/>
			<xs:enumeration value="Expanded"/>
			<xs:enumeration value="ExtraExpanded"/>
			<xs:enumeration value="UltraExpanded"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontWeightClassTopic">
		<xs:union memberTypes="FontWeights referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="FontWeights">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Thin"/>
			<xs:enumeration value="ExtraLight"/>
			<xs:enumeration value="UltraLight"/>
			<xs:enumeration value="Light"/>
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Regular"/>
			<xs:enumeration value="Medium"/>
			<xs:enumeration value="DemiBold"/>
			<xs:enumeration value="SemiBold"/>
			<xs:enumeration value="Bold"/>
			<xs:enumeration value="ExtraBold"/>
			<xs:enumeration value="UltraBold"/>
			<xs:enumeration value="Black"/>
			<xs:enumeration value="Heavy"/>
			<xs:enumeration value="ExtraBlack"/>
			<xs:enumeration value="UltraBlack"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsSizeToContentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="Width"/>
			<xs:enumeration value="Height"/>
			<xs:enumeration value="WidthAndHeight"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextDataFormatClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Text"/>
			<xs:enumeration value="UnicodeText"/>
			<xs:enumeration value="Rtf"/>
			<xs:enumeration value="Html"/>
			<xs:enumeration value="CommaSeparatedValue"/>
			<xs:enumeration value="Xaml"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextDecorationCollectionClassTopic">
		<xs:union memberTypes="TextDecorations referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="TextDecorations">
		<xs:restriction base="xs:string">
			<xs:pattern value="(Underline|Strikethrough|OverLine|Baseline|,)*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextDecorationLocationClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Underline"/>
			<xs:enumeration value="OverLine"/>
			<xs:enumeration value="Strikethrough"/>
			<xs:enumeration value="Baseline"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextDecorationUnitClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="FontRecommended"/>
			<xs:enumeration value="FontRenderingEmSize"/>
			<xs:enumeration value="Pixel"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsStrokeCollectionConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsKeySplineConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsKeyTimeConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsBaselineAlignmentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="Baseline"/>
			<xs:enumeration value="TextTop"/>
			<xs:enumeration value="TextBottom"/>
			<xs:enumeration value="Subscript"/>
			<xs:enumeration value="Superscript"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextAlignmentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Justify"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFlowDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="LeftToRight"/>
			<xs:enumeration value="RightToLeft"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextMarkerStyleClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Disc"/>
			<xs:enumeration value="Circle"/>
			<xs:enumeration value="Square"/>
			<xs:enumeration value="Box"/>
			<xs:enumeration value="LowerRoman"/>
			<xs:enumeration value="UpperRoman"/>
			<xs:enumeration value="LowerLatin"/>
			<xs:enumeration value="UpperLatin"/>
			<xs:enumeration value="Decimal"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextWrappingClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="WrapWithOverflow"/>
			<xs:enumeration value="NoWrap"/>
			<xs:enumeration value="Wrap"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsTextTrimmingClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="CharacterEllipsis"/>
			<xs:enumeration value="WordEllipsis"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontVariantsClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Superscript"/>
			<xs:enumeration value="Subscript"/>
			<xs:enumeration value="Ordinal"/>
			<xs:enumeration value="Inferior"/>
			<xs:enumeration value="Ruby"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontCapitalsClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="AllSmallCaps"/>
			<xs:enumeration value="SmallCaps"/>
			<xs:enumeration value="AllPetiteCaps"/>
			<xs:enumeration value="PetiteCaps"/>
			<xs:enumeration value="Unicase"/>
			<xs:enumeration value="Titling"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontFractionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Slashed"/>
			<xs:enumeration value="Stacked"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontNumeralStyleClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Lining"/>
			<xs:enumeration value="OldStyle"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontNumeralAlignmentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Proportional"/>
			<xs:enumeration value="Tabular"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontEastAsianWidthsClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Proportional"/>
			<xs:enumeration value="Full"/>
			<xs:enumeration value="Half"/>
			<xs:enumeration value="Third"/>
			<xs:enumeration value="Quarter"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontEastAsianLanguageClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Jis78"/>
			<xs:enumeration value="Jis83"/>
			<xs:enumeration value="Jis90"/>
			<xs:enumeration value="Jis04"/>
			<xs:enumeration value="HojoKanji"/>
			<xs:enumeration value="NlcKanji"/>
			<xs:enumeration value="Simplified"/>
			<xs:enumeration value="Traditional"/>
			<xs:enumeration value="TraditionalNames"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsVisibilityClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Visible"/>
			<xs:enumeration value="Hidden"/>
			<xs:enumeration value="Collapsed"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaBrushClassTopic">
		<xs:union memberTypes="Brushes referenceType pBrushes"/>
	</xs:simpleType>
	<xs:simpleType name="pBrushes">
		<xs:restriction base="xs:string">
			<xs:pattern value="^#([a-f]|[A-F]|[0-9]){4}(([a-f]|[A-F]|[0-9]){4})?$"/>
			<xs:pattern value="^#([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$"/>
			<xs:pattern value="sc#.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Brushes">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AliceBlue"/>
			<xs:enumeration value="AntiqueWhite"/>
			<xs:enumeration value="Aqua"/>
			<xs:enumeration value="Aquamarine"/>
			<xs:enumeration value="Azure"/>
			<xs:enumeration value="Beige"/>
			<xs:enumeration value="Bisque"/>
			<xs:enumeration value="Black"/>
			<xs:enumeration value="BlanchedAlmond"/>
			<xs:enumeration value="Blue"/>
			<xs:enumeration value="BlueViolet"/>
			<xs:enumeration value="Brown"/>
			<xs:enumeration value="BurlyWood"/>
			<xs:enumeration value="CadetBlue"/>
			<xs:enumeration value="Chartreuse"/>
			<xs:enumeration value="Chocolate"/>
			<xs:enumeration value="Coral"/>
			<xs:enumeration value="CornflowerBlue"/>
			<xs:enumeration value="Cornsilk"/>
			<xs:enumeration value="Crimson"/>
			<xs:enumeration value="Cyan"/>
			<xs:enumeration value="DarkBlue"/>
			<xs:enumeration value="DarkCyan"/>
			<xs:enumeration value="DarkGoldenrod"/>
			<xs:enumeration value="DarkGray"/>
			<xs:enumeration value="DarkGreen"/>
			<xs:enumeration value="DarkKhaki"/>
			<xs:enumeration value="DarkMagenta"/>
			<xs:enumeration value="DarkOliveGreen"/>
			<xs:enumeration value="DarkOrange"/>
			<xs:enumeration value="DarkOrchid"/>
			<xs:enumeration value="DarkRed"/>
			<xs:enumeration value="DarkSalmon"/>
			<xs:enumeration value="DarkSeaGreen"/>
			<xs:enumeration value="DarkSlateBlue"/>
			<xs:enumeration value="DarkSlateGray"/>
			<xs:enumeration value="DarkTurquoise"/>
			<xs:enumeration value="DarkViolet"/>
			<xs:enumeration value="DeepPink"/>
			<xs:enumeration value="DeepSkyBlue"/>
			<xs:enumeration value="DimGray"/>
			<xs:enumeration value="DodgerBlue"/>
			<xs:enumeration value="Firebrick"/>
			<xs:enumeration value="FloralWhite"/>
			<xs:enumeration value="ForestGreen"/>
			<xs:enumeration value="Fuchsia"/>
			<xs:enumeration value="Gainsboro"/>
			<xs:enumeration value="GhostWhite"/>
			<xs:enumeration value="Gold"/>
			<xs:enumeration value="Goldenrod"/>
			<xs:enumeration value="Gray"/>
			<xs:enumeration value="Green"/>
			<xs:enumeration value="GreenYellow"/>
			<xs:enumeration value="Honeydew"/>
			<xs:enumeration value="HotPink"/>
			<xs:enumeration value="IndianRed"/>
			<xs:enumeration value="Indigo"/>
			<xs:enumeration value="Ivory"/>
			<xs:enumeration value="Khaki"/>
			<xs:enumeration value="Lavender"/>
			<xs:enumeration value="LavenderBlush"/>
			<xs:enumeration value="LawnGreen"/>
			<xs:enumeration value="LemonChiffon"/>
			<xs:enumeration value="LightBlue"/>
			<xs:enumeration value="LightCoral"/>
			<xs:enumeration value="LightCyan"/>
			<xs:enumeration value="LightGoldenrodYellow"/>
			<xs:enumeration value="LightGray"/>
			<xs:enumeration value="LightGreen"/>
			<xs:enumeration value="LightPink"/>
			<xs:enumeration value="LightSalmon"/>
			<xs:enumeration value="LightSeaGreen"/>
			<xs:enumeration value="LightSkyBlue"/>
			<xs:enumeration value="LightSlateGray"/>
			<xs:enumeration value="LightSteelBlue"/>
			<xs:enumeration value="LightYellow"/>
			<xs:enumeration value="Lime"/>
			<xs:enumeration value="LimeGreen"/>
			<xs:enumeration value="Linen"/>
			<xs:enumeration value="Magenta"/>
			<xs:enumeration value="Maroon"/>
			<xs:enumeration value="MediumAquamarine"/>
			<xs:enumeration value="MediumBlue"/>
			<xs:enumeration value="MediumOrchid"/>
			<xs:enumeration value="MediumPurple"/>
			<xs:enumeration value="MediumSeaGreen"/>
			<xs:enumeration value="MediumSlateBlue"/>
			<xs:enumeration value="MediumSpringGreen"/>
			<xs:enumeration value="MediumTurquoise"/>
			<xs:enumeration value="MediumVioletRed"/>
			<xs:enumeration value="MidnightBlue"/>
			<xs:enumeration value="MintCream"/>
			<xs:enumeration value="MistyRose"/>
			<xs:enumeration value="Moccasin"/>
			<xs:enumeration value="NavajoWhite"/>
			<xs:enumeration value="Navy"/>
			<xs:enumeration value="OldLace"/>
			<xs:enumeration value="Olive"/>
			<xs:enumeration value="OliveDrab"/>
			<xs:enumeration value="Orange"/>
			<xs:enumeration value="OrangeRed"/>
			<xs:enumeration value="Orchid"/>
			<xs:enumeration value="PaleGoldenrod"/>
			<xs:enumeration value="PaleGreen"/>
			<xs:enumeration value="PaleTurquoise"/>
			<xs:enumeration value="PaleVioletRed"/>
			<xs:enumeration value="PapayaWhip"/>
			<xs:enumeration value="PeachPuff"/>
			<xs:enumeration value="Peru"/>
			<xs:enumeration value="Pink"/>
			<xs:enumeration value="Plum"/>
			<xs:enumeration value="PowderBlue"/>
			<xs:enumeration value="Purple"/>
			<xs:enumeration value="Red"/>
			<xs:enumeration value="RosyBrown"/>
			<xs:enumeration value="RoyalBlue"/>
			<xs:enumeration value="SaddleBrown"/>
			<xs:enumeration value="Salmon"/>
			<xs:enumeration value="SandyBrown"/>
			<xs:enumeration value="SeaGreen"/>
			<xs:enumeration value="SeaShell"/>
			<xs:enumeration value="Sienna"/>
			<xs:enumeration value="Silver"/>
			<xs:enumeration value="SkyBlue"/>
			<xs:enumeration value="SlateBlue"/>
			<xs:enumeration value="SlateGray"/>
			<xs:enumeration value="Snow"/>
			<xs:enumeration value="SpringGreen"/>
			<xs:enumeration value="SteelBlue"/>
			<xs:enumeration value="Tan"/>
			<xs:enumeration value="Teal"/>
			<xs:enumeration value="Thistle"/>
			<xs:enumeration value="Tomato"/>
			<xs:enumeration value="Transparent"/>
			<xs:enumeration value="Turquoise"/>
			<xs:enumeration value="Violet"/>
			<xs:enumeration value="Wheat"/>
			<xs:enumeration value="White"/>
			<xs:enumeration value="WhiteSmoke"/>
			<xs:enumeration value="Yellow"/>
			<xs:enumeration value="YellowGreen"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaColorClassTopic">
		<xs:union memberTypes="Colors referenceType pColors"/>
	</xs:simpleType>
	<xs:simpleType name="pColors">
		<xs:restriction base="xs:string">
			<xs:pattern value="^#([a-f]|[A-F]|[0-9]){4}(([a-f]|[A-F]|[0-9]){4})?$"/>
			<xs:pattern value="^#([a-f]|[A-F]|[0-9]){3}(([a-f]|[A-F]|[0-9]){3})?$"/>
			<xs:pattern value="sc#.*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="Colors">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AliceBlue"/>
			<xs:enumeration value="AntiqueWhite"/>
			<xs:enumeration value="Aqua"/>
			<xs:enumeration value="Aquamarine"/>
			<xs:enumeration value="Azure"/>
			<xs:enumeration value="Beige"/>
			<xs:enumeration value="Bisque"/>
			<xs:enumeration value="Black"/>
			<xs:enumeration value="BlanchedAlmond"/>
			<xs:enumeration value="Blue"/>
			<xs:enumeration value="BlueViolet"/>
			<xs:enumeration value="Brown"/>
			<xs:enumeration value="BurlyWood"/>
			<xs:enumeration value="CadetBlue"/>
			<xs:enumeration value="Chartreuse"/>
			<xs:enumeration value="Chocolate"/>
			<xs:enumeration value="Coral"/>
			<xs:enumeration value="CornflowerBlue"/>
			<xs:enumeration value="Cornsilk"/>
			<xs:enumeration value="Crimson"/>
			<xs:enumeration value="Cyan"/>
			<xs:enumeration value="DarkBlue"/>
			<xs:enumeration value="DarkCyan"/>
			<xs:enumeration value="DarkGoldenrod"/>
			<xs:enumeration value="DarkGray"/>
			<xs:enumeration value="DarkGreen"/>
			<xs:enumeration value="DarkKhaki"/>
			<xs:enumeration value="DarkMagenta"/>
			<xs:enumeration value="DarkOliveGreen"/>
			<xs:enumeration value="DarkOrange"/>
			<xs:enumeration value="DarkOrchid"/>
			<xs:enumeration value="DarkRed"/>
			<xs:enumeration value="DarkSalmon"/>
			<xs:enumeration value="DarkSeaGreen"/>
			<xs:enumeration value="DarkSlateBlue"/>
			<xs:enumeration value="DarkSlateGray"/>
			<xs:enumeration value="DarkTurquoise"/>
			<xs:enumeration value="DarkViolet"/>
			<xs:enumeration value="DeepPink"/>
			<xs:enumeration value="DeepSkyBlue"/>
			<xs:enumeration value="DimGray"/>
			<xs:enumeration value="DodgerBlue"/>
			<xs:enumeration value="Firebrick"/>
			<xs:enumeration value="FloralWhite"/>
			<xs:enumeration value="ForestGreen"/>
			<xs:enumeration value="Fuchsia"/>
			<xs:enumeration value="Gainsboro"/>
			<xs:enumeration value="GhostWhite"/>
			<xs:enumeration value="Gold"/>
			<xs:enumeration value="Goldenrod"/>
			<xs:enumeration value="Gray"/>
			<xs:enumeration value="Green"/>
			<xs:enumeration value="GreenYellow"/>
			<xs:enumeration value="Honeydew"/>
			<xs:enumeration value="HotPink"/>
			<xs:enumeration value="IndianRed"/>
			<xs:enumeration value="Indigo"/>
			<xs:enumeration value="Ivory"/>
			<xs:enumeration value="Khaki"/>
			<xs:enumeration value="Lavender"/>
			<xs:enumeration value="LavenderBlush"/>
			<xs:enumeration value="LawnGreen"/>
			<xs:enumeration value="LemonChiffon"/>
			<xs:enumeration value="LightBlue"/>
			<xs:enumeration value="LightCoral"/>
			<xs:enumeration value="LightCyan"/>
			<xs:enumeration value="LightGoldenrodYellow"/>
			<xs:enumeration value="LightGray"/>
			<xs:enumeration value="LightGreen"/>
			<xs:enumeration value="LightPink"/>
			<xs:enumeration value="LightSalmon"/>
			<xs:enumeration value="LightSeaGreen"/>
			<xs:enumeration value="LightSkyBlue"/>
			<xs:enumeration value="LightSlateGray"/>
			<xs:enumeration value="LightSteelBlue"/>
			<xs:enumeration value="LightYellow"/>
			<xs:enumeration value="Lime"/>
			<xs:enumeration value="LimeGreen"/>
			<xs:enumeration value="Linen"/>
			<xs:enumeration value="Magenta"/>
			<xs:enumeration value="Maroon"/>
			<xs:enumeration value="MediumAquamarine"/>
			<xs:enumeration value="MediumBlue"/>
			<xs:enumeration value="MediumOrchid"/>
			<xs:enumeration value="MediumPurple"/>
			<xs:enumeration value="MediumSeaGreen"/>
			<xs:enumeration value="MediumSlateBlue"/>
			<xs:enumeration value="MediumSpringGreen"/>
			<xs:enumeration value="MediumTurquoise"/>
			<xs:enumeration value="MediumVioletRed"/>
			<xs:enumeration value="MidnightBlue"/>
			<xs:enumeration value="MintCream"/>
			<xs:enumeration value="MistyRose"/>
			<xs:enumeration value="Moccasin"/>
			<xs:enumeration value="NavajoWhite"/>
			<xs:enumeration value="Navy"/>
			<xs:enumeration value="OldLace"/>
			<xs:enumeration value="Olive"/>
			<xs:enumeration value="OliveDrab"/>
			<xs:enumeration value="Orange"/>
			<xs:enumeration value="OrangeRed"/>
			<xs:enumeration value="Orchid"/>
			<xs:enumeration value="PaleGoldenrod"/>
			<xs:enumeration value="PaleGreen"/>
			<xs:enumeration value="PaleTurquoise"/>
			<xs:enumeration value="PaleVioletRed"/>
			<xs:enumeration value="PapayaWhip"/>
			<xs:enumeration value="PeachPuff"/>
			<xs:enumeration value="Peru"/>
			<xs:enumeration value="Pink"/>
			<xs:enumeration value="Plum"/>
			<xs:enumeration value="PowderBlue"/>
			<xs:enumeration value="Purple"/>
			<xs:enumeration value="Red"/>
			<xs:enumeration value="RosyBrown"/>
			<xs:enumeration value="RoyalBlue"/>
			<xs:enumeration value="SaddleBrown"/>
			<xs:enumeration value="Salmon"/>
			<xs:enumeration value="SandyBrown"/>
			<xs:enumeration value="SeaGreen"/>
			<xs:enumeration value="SeaShell"/>
			<xs:enumeration value="Sienna"/>
			<xs:enumeration value="Silver"/>
			<xs:enumeration value="SkyBlue"/>
			<xs:enumeration value="SlateBlue"/>
			<xs:enumeration value="SlateGray"/>
			<xs:enumeration value="Snow"/>
			<xs:enumeration value="SpringGreen"/>
			<xs:enumeration value="SteelBlue"/>
			<xs:enumeration value="Tan"/>
			<xs:enumeration value="Teal"/>
			<xs:enumeration value="Thistle"/>
			<xs:enumeration value="Tomato"/>
			<xs:enumeration value="Transparent"/>
			<xs:enumeration value="Turquoise"/>
			<xs:enumeration value="Violet"/>
			<xs:enumeration value="Wheat"/>
			<xs:enumeration value="White"/>
			<xs:enumeration value="WhiteSmoke"/>
			<xs:enumeration value="Yellow"/>
			<xs:enumeration value="YellowGreen"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaGeometryClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImageSourceClassTopic">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaFontFamilyClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAlignmentXClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaAlignmentYClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaBrushMappingModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Absolute"/>
			<xs:enumeration value="RelativeToBoundingBox"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaCachingHintClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="Cache"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaColorInterpolationModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ScRgbLinearInterpolation"/>
			<xs:enumeration value="SRgbLinearInterpolation"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaGeometryCombineModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Union"/>
			<xs:enumeration value="Intersect"/>
			<xs:enumeration value="Xor"/>
			<xs:enumeration value="Exclude"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaDoubleCollectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]*(.[0-9]*)?)(,[0-9]*(.[0-9]*))*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaEdgeModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="Aliased"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaBitmapScalingModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Unspecified"/>
			<xs:enumeration value="LowQuality"/>
			<xs:enumeration value="HighQuality"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaFillRuleClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="EvenOdd"/>
			<xs:enumeration value="Nonzero"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaGradientSpreadMethodClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pad"/>
			<xs:enumeration value="Reflect"/>
			<xs:enumeration value="Repeat"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaInt32CollectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]*(,[0-9]*)*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaTransformClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaPathFigureCollectionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaPenLineCapClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Flat"/>
			<xs:enumeration value="Square"/>
			<xs:enumeration value="Round"/>
			<xs:enumeration value="Triangle"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaPenLineJoinClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Miter"/>
			<xs:enumeration value="Bevel"/>
			<xs:enumeration value="Round"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaPointCollectionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaStretchClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Fill"/>
			<xs:enumeration value="Uniform"/>
			<xs:enumeration value="UniformToFill"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaSweepDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Counterclockwise"/>
			<xs:enumeration value="Clockwise"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaTileModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Tile"/>
			<xs:enumeration value="FlipX"/>
			<xs:enumeration value="FlipY"/>
			<xs:enumeration value="FlipXY"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaPixelFormatClassTopic">
		<xs:union memberTypes="PixelFormats referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="PixelFormats">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="Indexed1"/>
			<xs:enumeration value="Indexed2"/>
			<xs:enumeration value="Indexed4"/>
			<xs:enumeration value="Indexed8"/>
			<xs:enumeration value="BlackWhite"/>
			<xs:enumeration value="Gray2"/>
			<xs:enumeration value="Gray4"/>
			<xs:enumeration value="Gray8"/>
			<xs:enumeration value="Bgr555"/>
			<xs:enumeration value="Bgr565"/>
			<xs:enumeration value="Rgb128Float"/>
			<xs:enumeration value="Bgr24"/>
			<xs:enumeration value="Rgb24"/>
			<xs:enumeration value="Bgr101010"/>
			<xs:enumeration value="Bgr32"/>
			<xs:enumeration value="Bgra32"/>
			<xs:enumeration value="Pbgra32"/>
			<xs:enumeration value="Rgb48"/>
			<xs:enumeration value="Rgba64"/>
			<xs:enumeration value="Prgba64"/>
			<xs:enumeration value="Gray16"/>
			<xs:enumeration value="Gray32Float"/>
			<xs:enumeration value="Rgba128Float"/>
			<xs:enumeration value="Prgba128Float"/>
			<xs:enumeration value="Cmyk32"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaStyleSimulationsClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="BoldSimulation"/>
			<xs:enumeration value="ItalicSimulation"/>
			<xs:enumeration value="BoldItalicSimulation"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaNumberCultureSourceClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Text"/>
			<xs:enumeration value="User"/>
			<xs:enumeration value="Override"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaNumberSubstitutionMethodClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AsCulture"/>
			<xs:enumeration value="Context"/>
			<xs:enumeration value="European"/>
			<xs:enumeration value="NativeNational"/>
			<xs:enumeration value="Traditional"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputMouseActionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="LeftClick"/>
			<xs:enumeration value="RightClick"/>
			<xs:enumeration value="MiddleClick"/>
			<xs:enumeration value="WheelClick"/>
			<xs:enumeration value="LeftDoubleClick"/>
			<xs:enumeration value="RightDoubleClick"/>
			<xs:enumeration value="MiddleDoubleClick"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputCursorClassTopic">
		<xs:union memberTypes="Cursors referenceType "/>
	</xs:simpleType>
	<xs:simpleType name="Cursors">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="No"/>
			<xs:enumeration value="Arrow"/>
			<xs:enumeration value="AppStarting"/>
			<xs:enumeration value="Cross"/>
			<xs:enumeration value="Help"/>
			<xs:enumeration value="IBeam"/>
			<xs:enumeration value="SizeAll"/>
			<xs:enumeration value="SizeNESW"/>
			<xs:enumeration value="SizeNS"/>
			<xs:enumeration value="SizeNWSE"/>
			<xs:enumeration value="SizeWE"/>
			<xs:enumeration value="UpArrow"/>
			<xs:enumeration value="Wait"/>
			<xs:enumeration value="Hand"/>
			<xs:enumeration value="Pen"/>
			<xs:enumeration value="ScrollNS"/>
			<xs:enumeration value="ScrollWE"/>
			<xs:enumeration value="ScrollAll"/>
			<xs:enumeration value="ScrollN"/>
			<xs:enumeration value="ScrollS"/>
			<xs:enumeration value="ScrollW"/>
			<xs:enumeration value="ScrollE"/>
			<xs:enumeration value="ScrollNW"/>
			<xs:enumeration value="ScrollNE"/>
			<xs:enumeration value="ScrollSW"/>
			<xs:enumeration value="ScrollSE"/>
			<xs:enumeration value="ArrowCD"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputInputMethodStateClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Off"/>
			<xs:enumeration value="On"/>
			<xs:enumeration value="DoNotCare"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputImeConversionModeValuesClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Native"/>
			<xs:enumeration value="Katakana"/>
			<xs:enumeration value="FullShape"/>
			<xs:enumeration value="Roman"/>
			<xs:enumeration value="CharCode"/>
			<xs:enumeration value="NoConversion"/>
			<xs:enumeration value="Eudc"/>
			<xs:enumeration value="Symbol"/>
			<xs:enumeration value="Fixed"/>
			<xs:enumeration value="Alphanumeric"/>
			<xs:enumeration value="DoNotCare"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputImeSentenceModeValuesClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="PluralClause"/>
			<xs:enumeration value="SingleConversion"/>
			<xs:enumeration value="Automatic"/>
			<xs:enumeration value="PhrasePrediction"/>
			<xs:enumeration value="Conversation"/>
			<xs:enumeration value="DoNotCare"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputInputScopeClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputInputScopeNameValueClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="Url"/>
			<xs:enumeration value="FullFilePath"/>
			<xs:enumeration value="FileName"/>
			<xs:enumeration value="EmailUserName"/>
			<xs:enumeration value="EmailSmtpAddress"/>
			<xs:enumeration value="LogOnName"/>
			<xs:enumeration value="PersonalFullName"/>
			<xs:enumeration value="PersonalNamePrefix"/>
			<xs:enumeration value="PersonalGivenName"/>
			<xs:enumeration value="PersonalMiddleName"/>
			<xs:enumeration value="PersonalSurname"/>
			<xs:enumeration value="PersonalNameSuffix"/>
			<xs:enumeration value="PostalAddress"/>
			<xs:enumeration value="PostalCode"/>
			<xs:enumeration value="AddressStreet"/>
			<xs:enumeration value="AddressStateOrProvince"/>
			<xs:enumeration value="AddressCity"/>
			<xs:enumeration value="AddressCountryName"/>
			<xs:enumeration value="AddressCountryShortName"/>
			<xs:enumeration value="CurrencyAmountAndSymbol"/>
			<xs:enumeration value="CurrencyAmount"/>
			<xs:enumeration value="Date"/>
			<xs:enumeration value="DateMonth"/>
			<xs:enumeration value="DateDay"/>
			<xs:enumeration value="DateYear"/>
			<xs:enumeration value="DateMonthName"/>
			<xs:enumeration value="DateDayName"/>
			<xs:enumeration value="Digits"/>
			<xs:enumeration value="Number"/>
			<xs:enumeration value="OneChar"/>
			<xs:enumeration value="Password"/>
			<xs:enumeration value="TelephoneNumber"/>
			<xs:enumeration value="TelephoneCountryCode"/>
			<xs:enumeration value="TelephoneAreaCode"/>
			<xs:enumeration value="TelephoneLocalNumber"/>
			<xs:enumeration value="Time"/>
			<xs:enumeration value="TimeHour"/>
			<xs:enumeration value="TimeMinorSec"/>
			<xs:enumeration value="NumberFullWidth"/>
			<xs:enumeration value="AlphanumericHalfWidth"/>
			<xs:enumeration value="AlphanumericFullWidth"/>
			<xs:enumeration value="CurrencyChinese"/>
			<xs:enumeration value="Bopomofo"/>
			<xs:enumeration value="Hiragana"/>
			<xs:enumeration value="KatakanaHalfWidth"/>
			<xs:enumeration value="KatakanaFullWidth"/>
			<xs:enumeration value="Hanja"/>
			<xs:enumeration value="PhraseList"/>
			<xs:enumeration value="RegularExpression"/>
			<xs:enumeration value="Srgs"/>
			<xs:enumeration value="Xml"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImagingRotationClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Rotate0"/>
			<xs:enumeration value="Rotate90"/>
			<xs:enumeration value="Rotate180"/>
			<xs:enumeration value="Rotate270"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImagingBitmapCacheOptionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="OnDemand"/>
			<xs:enumeration value="OnLoad"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImagingBitmapCreateOptionsClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="PreservePixelFormat"/>
			<xs:enumeration value="DelayCreation"/>
			<xs:enumeration value="IgnoreColorProfile"/>
			<xs:enumeration value="IgnoreImageCache"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImagingPngInterlaceOptionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="On"/>
			<xs:enumeration value="Off"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaImagingTiffCompressOptionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="Ccitt3"/>
			<xs:enumeration value="Ccitt4"/>
			<xs:enumeration value="Lzw"/>
			<xs:enumeration value="Rle"/>
			<xs:enumeration value="Zip"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInkStylusTipClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Rectangle"/>
			<xs:enumeration value="Ellipse"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMarkupXmlLanguageClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputCommandConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputKeyboardNavigationModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Continue"/>
			<xs:enumeration value="Once"/>
			<xs:enumeration value="Cycle"/>
			<xs:enumeration value="None"/>
			<xs:enumeration value="Contained"/>
			<xs:enumeration value="Local"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPrimitivesAutoToolTipPlacementClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="TopLeft"/>
			<xs:enumeration value="BottomRight"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPrimitivesPlacementModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Absolute"/>
			<xs:enumeration value="Relative"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="AbsolutePoint"/>
			<xs:enumeration value="RelativePoint"/>
			<xs:enumeration value="Mouse"/>
			<xs:enumeration value="MousePoint"/>
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Custom"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPrimitivesPopupAnimationClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Fade"/>
			<xs:enumeration value="Slide"/>
			<xs:enumeration value="Scroll"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPrimitivesTickBarPlacementClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPrimitivesTickPlacementClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="TopLeft"/>
			<xs:enumeration value="BottomRight"/>
			<xs:enumeration value="Both"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsShutdownModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="OnLastWindowClose"/>
			<xs:enumeration value="OnMainWindowClose"/>
			<xs:enumeration value="OnExplicitShutdown"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsCornerRadiusClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsDialogResultConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFigureLengthClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFontSizeConverterClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]*(.[0-9]*)?(pt)?)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsHorizontalAlignmentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Stretch"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsVerticalAlignmentClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Center"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="Stretch"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsGridLengthClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsLengthConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsNullableBoolConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsPropertyPathClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsLineStackingStrategyClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BlockLineHeight"/>
			<xs:enumeration value="MaxHeight"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFigureVerticalAnchorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PageTop"/>
			<xs:enumeration value="PageCenter"/>
			<xs:enumeration value="PageBottom"/>
			<xs:enumeration value="ContentTop"/>
			<xs:enumeration value="ContentCenter"/>
			<xs:enumeration value="ContentBottom"/>
			<xs:enumeration value="ParagraphTop"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsFigureHorizontalAnchorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PageLeft"/>
			<xs:enumeration value="PageCenter"/>
			<xs:enumeration value="PageRight"/>
			<xs:enumeration value="ContentLeft"/>
			<xs:enumeration value="ContentCenter"/>
			<xs:enumeration value="ContentRight"/>
			<xs:enumeration value="ColumnLeft"/>
			<xs:enumeration value="ColumnCenter"/>
			<xs:enumeration value="ColumnRight"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsWrapDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Both"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsThicknessClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="([-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?(px|in)?)((,[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?(px|in)?){3})?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsWindowStyleClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="SingleBorderWindow"/>
			<xs:enumeration value="ThreeDBorderWindow"/>
			<xs:enumeration value="ToolWindow"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsWindowStateClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Minimized"/>
			<xs:enumeration value="Maximized"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsWindowStartupLocationClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="CenterScreen"/>
			<xs:enumeration value="CenterOwner"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsResizeModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NoResize"/>
			<xs:enumeration value="CanMinimize"/>
			<xs:enumeration value="CanResize"/>
			<xs:enumeration value="CanResizeWithGrip"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsDataBindingModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TwoWay"/>
			<xs:enumeration value="OneWay"/>
			<xs:enumeration value="OneTime"/>
			<xs:enumeration value="OneWayToSource"/>
			<xs:enumeration value="Default"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsDataUpdateSourceTriggerClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Default"/>
			<xs:enumeration value="PropertyChanged"/>
			<xs:enumeration value="LostFocus"/>
			<xs:enumeration value="Explicit"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsDataRelativeSourceModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PreviousData"/>
			<xs:enumeration value="TemplatedParent"/>
			<xs:enumeration value="Self"/>
			<xs:enumeration value="FindAncestor"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsNavigationJournalOwnershipClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Automatic"/>
			<xs:enumeration value="OwnsJournal"/>
			<xs:enumeration value="UsesParentJournal"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsNavigationNavigationUIVisibilityClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Automatic"/>
			<xs:enumeration value="Visible"/>
			<xs:enumeration value="Hidden"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsNavigationJournalEntryPositionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Back"/>
			<xs:enumeration value="Current"/>
			<xs:enumeration value="Forward"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsCharacterCasingClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Normal"/>
			<xs:enumeration value="Lower"/>
			<xs:enumeration value="Upper"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsClickModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Release"/>
			<xs:enumeration value="Press"/>
			<xs:enumeration value="Hover"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsDockClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Top"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Bottom"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsExpandDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Down"/>
			<xs:enumeration value="Up"/>
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsFlowDocumentReaderViewingModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Page"/>
			<xs:enumeration value="TwoPage"/>
			<xs:enumeration value="Scroll"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsGridResizeDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Auto"/>
			<xs:enumeration value="Columns"/>
			<xs:enumeration value="Rows"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsGridResizeBehaviorClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="BasedOnAlignment"/>
			<xs:enumeration value="CurrentAndNext"/>
			<xs:enumeration value="PreviousAndCurrent"/>
			<xs:enumeration value="PreviousAndNext"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsSelectionModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Single"/>
			<xs:enumeration value="Multiple"/>
			<xs:enumeration value="Extended"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsMediaStateClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Manual"/>
			<xs:enumeration value="Play"/>
			<xs:enumeration value="Close"/>
			<xs:enumeration value="Pause"/>
			<xs:enumeration value="Stop"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsOrientationClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Horizontal"/>
			<xs:enumeration value="Vertical"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsPageRangeSelectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AllPages"/>
			<xs:enumeration value="UserPages"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsScrollBarVisibilityClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Disabled"/>
			<xs:enumeration value="Auto"/>
			<xs:enumeration value="Hidden"/>
			<xs:enumeration value="Visible"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsSpellingReformClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="PreAndPostreform"/>
			<xs:enumeration value="Prereform"/>
			<xs:enumeration value="Postreform"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsOverflowModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="AsNeeded"/>
			<xs:enumeration value="Always"/>
			<xs:enumeration value="Never"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsStretchDirectionClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="UpOnly"/>
			<xs:enumeration value="DownOnly"/>
			<xs:enumeration value="Both"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsControlsInkCanvasEditingModeClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Ink"/>
			<xs:enumeration value="GestureOnly"/>
			<xs:enumeration value="InkAndGesture"/>
			<xs:enumeration value="Select"/>
			<xs:enumeration value="EraseByPoint"/>
			<xs:enumeration value="EraseByStroke"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMarkupDependencyPropertyConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMarkupRoutedEventConverterClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsMediaMatrixClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputKeyClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Cancel"/>
			<xs:enumeration value="Back"/>
			<xs:enumeration value="Tab"/>
			<xs:enumeration value="LineFeed"/>
			<xs:enumeration value="Clear"/>
			<xs:enumeration value="Return"/>
			<xs:enumeration value="Enter"/>
			<xs:enumeration value="Pause"/>
			<xs:enumeration value="Capital"/>
			<xs:enumeration value="CapsLock"/>
			<xs:enumeration value="KanaMode"/>
			<xs:enumeration value="HangulMode"/>
			<xs:enumeration value="JunjaMode"/>
			<xs:enumeration value="FinalMode"/>
			<xs:enumeration value="HanjaMode"/>
			<xs:enumeration value="KanjiMode"/>
			<xs:enumeration value="Escape"/>
			<xs:enumeration value="ImeConvert"/>
			<xs:enumeration value="ImeNonConvert"/>
			<xs:enumeration value="ImeAccept"/>
			<xs:enumeration value="ImeModeChange"/>
			<xs:enumeration value="Space"/>
			<xs:enumeration value="Prior"/>
			<xs:enumeration value="PageUp"/>
			<xs:enumeration value="Next"/>
			<xs:enumeration value="PageDown"/>
			<xs:enumeration value="End"/>
			<xs:enumeration value="Home"/>
			<xs:enumeration value="Left"/>
			<xs:enumeration value="Up"/>
			<xs:enumeration value="Right"/>
			<xs:enumeration value="Down"/>
			<xs:enumeration value="Select"/>
			<xs:enumeration value="Print"/>
			<xs:enumeration value="Execute"/>
			<xs:enumeration value="Snapshot"/>
			<xs:enumeration value="PrintScreen"/>
			<xs:enumeration value="Insert"/>
			<xs:enumeration value="Delete"/>
			<xs:enumeration value="Help"/>
			<xs:enumeration value="D0"/>
			<xs:enumeration value="D1"/>
			<xs:enumeration value="D2"/>
			<xs:enumeration value="D3"/>
			<xs:enumeration value="D4"/>
			<xs:enumeration value="D5"/>
			<xs:enumeration value="D6"/>
			<xs:enumeration value="D7"/>
			<xs:enumeration value="D8"/>
			<xs:enumeration value="D9"/>
			<xs:enumeration value="A"/>
			<xs:enumeration value="B"/>
			<xs:enumeration value="C"/>
			<xs:enumeration value="D"/>
			<xs:enumeration value="E"/>
			<xs:enumeration value="F"/>
			<xs:enumeration value="G"/>
			<xs:enumeration value="H"/>
			<xs:enumeration value="I"/>
			<xs:enumeration value="J"/>
			<xs:enumeration value="K"/>
			<xs:enumeration value="L"/>
			<xs:enumeration value="M"/>
			<xs:enumeration value="N"/>
			<xs:enumeration value="O"/>
			<xs:enumeration value="P"/>
			<xs:enumeration value="Q"/>
			<xs:enumeration value="R"/>
			<xs:enumeration value="S"/>
			<xs:enumeration value="T"/>
			<xs:enumeration value="U"/>
			<xs:enumeration value="V"/>
			<xs:enumeration value="W"/>
			<xs:enumeration value="X"/>
			<xs:enumeration value="Y"/>
			<xs:enumeration value="Z"/>
			<xs:enumeration value="LWin"/>
			<xs:enumeration value="RWin"/>
			<xs:enumeration value="Apps"/>
			<xs:enumeration value="Sleep"/>
			<xs:enumeration value="NumPad0"/>
			<xs:enumeration value="NumPad1"/>
			<xs:enumeration value="NumPad2"/>
			<xs:enumeration value="NumPad3"/>
			<xs:enumeration value="NumPad4"/>
			<xs:enumeration value="NumPad5"/>
			<xs:enumeration value="NumPad6"/>
			<xs:enumeration value="NumPad7"/>
			<xs:enumeration value="NumPad8"/>
			<xs:enumeration value="NumPad9"/>
			<xs:enumeration value="Multiply"/>
			<xs:enumeration value="Add"/>
			<xs:enumeration value="Separator"/>
			<xs:enumeration value="Subtract"/>
			<xs:enumeration value="Decimal"/>
			<xs:enumeration value="Divide"/>
			<xs:enumeration value="F1"/>
			<xs:enumeration value="F2"/>
			<xs:enumeration value="F3"/>
			<xs:enumeration value="F4"/>
			<xs:enumeration value="F5"/>
			<xs:enumeration value="F6"/>
			<xs:enumeration value="F7"/>
			<xs:enumeration value="F8"/>
			<xs:enumeration value="F9"/>
			<xs:enumeration value="F10"/>
			<xs:enumeration value="F11"/>
			<xs:enumeration value="F12"/>
			<xs:enumeration value="F13"/>
			<xs:enumeration value="F14"/>
			<xs:enumeration value="F15"/>
			<xs:enumeration value="F16"/>
			<xs:enumeration value="F17"/>
			<xs:enumeration value="F18"/>
			<xs:enumeration value="F19"/>
			<xs:enumeration value="F20"/>
			<xs:enumeration value="F21"/>
			<xs:enumeration value="F22"/>
			<xs:enumeration value="F23"/>
			<xs:enumeration value="F24"/>
			<xs:enumeration value="NumLock"/>
			<xs:enumeration value="Scroll"/>
			<xs:enumeration value="LeftShift"/>
			<xs:enumeration value="RightShift"/>
			<xs:enumeration value="LeftCtrl"/>
			<xs:enumeration value="RightCtrl"/>
			<xs:enumeration value="LeftAlt"/>
			<xs:enumeration value="RightAlt"/>
			<xs:enumeration value="BrowserBack"/>
			<xs:enumeration value="BrowserForward"/>
			<xs:enumeration value="BrowserRefresh"/>
			<xs:enumeration value="BrowserStop"/>
			<xs:enumeration value="BrowserSearch"/>
			<xs:enumeration value="BrowserFavorites"/>
			<xs:enumeration value="BrowserHome"/>
			<xs:enumeration value="VolumeMute"/>
			<xs:enumeration value="VolumeDown"/>
			<xs:enumeration value="VolumeUp"/>
			<xs:enumeration value="MediaNextTrack"/>
			<xs:enumeration value="MediaPreviousTrack"/>
			<xs:enumeration value="MediaStop"/>
			<xs:enumeration value="MediaPlayPause"/>
			<xs:enumeration value="LaunchMail"/>
			<xs:enumeration value="SelectMedia"/>
			<xs:enumeration value="LaunchApplication1"/>
			<xs:enumeration value="LaunchApplication2"/>
			<xs:enumeration value="Oem1"/>
			<xs:enumeration value="OemSemicolon"/>
			<xs:enumeration value="OemPlus"/>
			<xs:enumeration value="OemComma"/>
			<xs:enumeration value="OemMinus"/>
			<xs:enumeration value="OemPeriod"/>
			<xs:enumeration value="Oem2"/>
			<xs:enumeration value="OemQuestion"/>
			<xs:enumeration value="Oem3"/>
			<xs:enumeration value="OemTilde"/>
			<xs:enumeration value="AbntC1"/>
			<xs:enumeration value="AbntC2"/>
			<xs:enumeration value="Oem4"/>
			<xs:enumeration value="OemOpenBrackets"/>
			<xs:enumeration value="Oem5"/>
			<xs:enumeration value="OemPipe"/>
			<xs:enumeration value="Oem6"/>
			<xs:enumeration value="OemCloseBrackets"/>
			<xs:enumeration value="Oem7"/>
			<xs:enumeration value="OemQuotes"/>
			<xs:enumeration value="Oem8"/>
			<xs:enumeration value="Oem102"/>
			<xs:enumeration value="OemBackslash"/>
			<xs:enumeration value="ImeProcessed"/>
			<xs:enumeration value="System"/>
			<xs:enumeration value="OemAttn"/>
			<xs:enumeration value="DbeAlphanumeric"/>
			<xs:enumeration value="OemFinish"/>
			<xs:enumeration value="DbeKatakana"/>
			<xs:enumeration value="OemCopy"/>
			<xs:enumeration value="DbeHiragana"/>
			<xs:enumeration value="OemAuto"/>
			<xs:enumeration value="DbeSbcsChar"/>
			<xs:enumeration value="OemEnlw"/>
			<xs:enumeration value="DbeDbcsChar"/>
			<xs:enumeration value="OemBackTab"/>
			<xs:enumeration value="DbeRoman"/>
			<xs:enumeration value="Attn"/>
			<xs:enumeration value="DbeNoRoman"/>
			<xs:enumeration value="CrSel"/>
			<xs:enumeration value="DbeEnterWordRegisterMode"/>
			<xs:enumeration value="ExSel"/>
			<xs:enumeration value="DbeEnterImeConfigureMode"/>
			<xs:enumeration value="EraseEof"/>
			<xs:enumeration value="DbeFlushString"/>
			<xs:enumeration value="Play"/>
			<xs:enumeration value="DbeCodeInput"/>
			<xs:enumeration value="Zoom"/>
			<xs:enumeration value="DbeNoCodeInput"/>
			<xs:enumeration value="NoName"/>
			<xs:enumeration value="DbeDetermineString"/>
			<xs:enumeration value="Pa1"/>
			<xs:enumeration value="DbeEnterDialogConversionMode"/>
			<xs:enumeration value="OemClear"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInputModifierKeysClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Alt"/>
			<xs:enumeration value="Control"/>
			<xs:enumeration value="Shift"/>
			<xs:enumeration value="Windows"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsPointClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]*(.[0-9]*)?(px|in)?)(,[0-9]*(.[0-9]*)?(px|in)?)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsSizeClassTopic">
		<xs:restriction base="xs:string">
			<xs:pattern value="([0-9]*(.[0-9]*)?(px|in)?)(,[0-9]*(.[0-9]*)?(px|in)?)"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsVectorClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsRectClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemWindowsInt32RectClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemUriClassTopic">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemObjectClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemStringClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfInt32ClassTopic">
		<xs:restriction base="xs:int"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemBooleanClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="True"/>
			<xs:enumeration value="False"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemDoubleClassTopic">
		<xs:restriction base="xs:double"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemInt32ClassTopic">
		<xs:restriction base="xs:int"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfTimeSpanClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfByteClassTopic">
		<xs:restriction base="xs:byte"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfColorClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfDecimalClassTopic">
		<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemByteClassTopic">
		<xs:restriction base="xs:byte"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemCharClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemDecimalClassTopic">
		<xs:restriction base="xs:decimal"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemInt16ClassTopic">
		<xs:restriction base="xs:short"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemInt64ClassTopic">
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemSingleClassTopic">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfDoubleClassTopic">
		<xs:restriction base="xs:double"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfInt16ClassTopic">
		<xs:restriction base="xs:short"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfInt64ClassTopic">
		<xs:restriction base="xs:long"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfPoint3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfPointClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfQuaternionClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfRectClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfSingleClassTopic">
		<xs:restriction base="xs:float"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfSizeClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfVector3DClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfVectorClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemTimeSpanClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfNullableOfThicknessClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemUInt32ClassTopic">
		<xs:restriction base="xs:unsignedInt"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemTypeClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemStringComparisonClassTopic">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CurrentCulture"/>
			<xs:enumeration value="CurrentCultureIgnoreCase"/>
			<xs:enumeration value="InvariantCulture"/>
			<xs:enumeration value="InvariantCultureIgnoreCase"/>
			<xs:enumeration value="Ordinal"/>
			<xs:enumeration value="OrdinalIgnoreCase"/>
			<xs:enumeration value="{x:Null}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="referenceType">
		<xs:restriction base="xs:string">
			<xs:pattern value="\{StaticResource .*\}"/>
			<xs:pattern value="\{DynamicResource .*\}"/>
			<xs:pattern value="\{Binding.*\}"/>
			<xs:pattern value="\{x:Static .*\}"/>
			<xs:pattern value="\{x:Null\}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="eventHandler">
		<xs:restriction base="xs:token"/>
	</xs:simpleType>
	<xs:simpleType name="frlrfSystemUInt16ClassTopic">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
